using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using Inv.Support;

namespace Pathos
{
  public sealed class CodexEntities : CodexPage<ManifestEntities, EntityEditor, Entity>
  {
    private CodexEntities() { }
#if MASTER_CODEX
    internal CodexEntities(Codex Codex)
      : base(Codex.Manifest.Entities)
    {
      #region macros.
      var Genders = Codex.Genders;
      var Elements = Codex.Elements;
      var Materials = Codex.Materials;
      var Diets = Codex.Diets;
      var Skills = Codex.Skills;
      var Kinds = Codex.Kinds;
      var Races = Codex.Races;
      var Beams = Codex.Beams;
      var Strikes = Codex.Strikes;
      var Engulfments = Codex.Engulfments;
      var Explosions = Codex.Explosions;
      var Properties = Codex.Properties;
      var Qualifications = Codex.Qualifications;
      var Attributes = Codex.Attributes;
      var Sanctities = Codex.Sanctities;
      var Glyphs = Codex.Glyphs;
      var Sonics = Codex.Sonics;
      var AttackTypes = Codex.AttackTypes;
      var Anatomies = Codex.Anatomies;

      CodexStocks Stocks = null;
      CodexItems Items = null;
      CodexSpells Spells = null;
      CodexVolatiles Volatiles = null;
      Stock[] SentientGreed = null;
      Stock[] GolemGreed = null;
      Stock[] GuardianGreed = null;
      Item[] GoodCloakItemArray = null;
      Item[] GoodAmuletItemArray = null;

      CodexRecruiter.Enrol(() =>
      {
        Stocks = Codex.Stocks;
        Items = Codex.Items;
        Spells = Codex.Spells;
        Volatiles = Codex.Volatiles;
        SentientGreed = [Stocks.book, Stocks.potion, Stocks.scroll, Stocks.wand, Stocks.ring, Stocks.amulet, Stocks.gem];
        GuardianGreed = [Stocks.gem];
        GolemGreed = [];

        GoodCloakItemArray = Stocks.armour.Items.Where(I => I.Type == ItemType.Cloak && I.DefaultSanctity != Sanctities.Cursed && !I.Grade.Unique && I.Equip.HasEffects()).ToArray();
        GoodAmuletItemArray = Stocks.amulet.Items.Where(I => I.Type == ItemType.Amulet && I.DefaultSanctity != Sanctities.Cursed && !I.Grade.Unique && I.Equip.HasEffects()).ToArray();
      });

      Entity RegisterEntity(Kind Kind, Race Race, string Name, Action<EntityEditor> InitiateAction, Action<EntityEditor> EnrolAction)
      {
        return Register.Add(E =>
        {
          E.Kind = Kind;
          E.Race = Race;
          E.Name = Name;

          InitiateAction?.Invoke(E);

          CodexRecruiter.Enrol(() =>
          {
            EnrolAction(E);

            if (E.IsBase || E.IsAnimate)
              E.Figure.CombatSkill = Skills.unarmed_combat;

            if (E.Figure.Has(Codex.Anatomies.mounted))
              E.Figure.MountSkill = Skills.riding;

            if (E.Corpse.Chance != Chance.Never && E.Corpse.Item == null)
            {
              E.SetCorpse(
                Chance: E.Corpse.Chance,
                Item: E.Figure.Material == Codex.Materials.vegetable ? Codex.Items.vegetable_corpse : Codex.Items.animal_corpse,
                Volatile: E.Figure.Has(Anatomies.blood) && E.Figure.Material == Codex.Materials.animal ? Volatiles.blood : null);
            }

            if (E.Terrains == null)
              E.SetTerrain(Materials.air, Materials.water);

            if (E.IsUnique)
            {
              Debug.Assert(E.Frequency == 0, $"{E.Name} must have frequency of zero");
              Debug.Assert(E.Startup.Talents.Contains(Properties.polymorph_control), $"{E.Name} must have polymorph control");
              Debug.Assert(E.Startup.Talents.Contains(Properties.teleport_control), $"{E.Name} must have teleport control");
              Debug.Assert(E.Startup.Resistances.Contains(Elements.magical), $"{E.Name} must have magical resistance");

              // perfection already achieved for unique ability scores.
              foreach (var DefaultAbility in E.DefaultForm.Abilities)
                E.LimitForm.SetScore(DefaultAbility.Attribute, DefaultAbility.Score);
            }
            else if (E.LimitForm.IsAllAssigned(30))
            {
              // infer ability limits if they have not been manually determined (NOTE: this is legacy once all entities have their limits manually entered).
              foreach (var Ability in E.DefaultForm.Abilities)
                E.LimitForm.SetScore(Ability.Attribute, Math.Min(Math.Max(30, Ability.Score), Ability.Score + (Ability.Score / 4)));
            }

            if (E.Kind == Kinds.mimic && (E.Concealment == null || !E.Concealment.Mimicry))
              Debug.Fail($"Entity {E.Name} is expected to have mimicry.");

            if (E.Kind == Kinds.demon || E.Kind == Kinds.vampire || E.Kind == Kinds.lycanthrope || E.Kind == Kinds.imp || E.Kind == Kinds.changeling)
            {
              if (!E.Chemistry.Vulnerabilities.Contains(Materials.silver))
                Debug.Fail($"Entity {E.Name} is a {E.Kind.Name} and is expected to be marked as vulnerable to silver.");
            }
            else if (E.Chemistry.Vulnerabilities.Contains(Materials.silver))
            {
              //Debug.Fail($"Entity {E.Name} is a {E.Kind.Name} which is NOT expected to be marked as vulnerable to silver.");
            }
          });
        });
      }

      Entity AddDomesticEntity(Kind Kind, Race Race, string Name, Action<EntityEditor> DeclareAction)
      {
        return RegisterEntity(Kind, Race, Name, E => E.IsDomestic = true, DeclareAction);
      }
      Entity AddUniqueEntity(Kind Kind, Race Race, string Name, Action<EntityEditor> DeclareAction)
      {
        return RegisterEntity(Kind, Race, Name, E => E.IsUnique = true, DeclareAction);
      }
      Entity AddBaseEntity(Kind Kind, Race Race, string Name, Action<EntityEditor> DeclareAction)
      {
        return RegisterEntity(Kind, Race, Name, E => E.IsBase = true, DeclareAction);
      }
      Entity AddEntity(Kind Kind, Race Race, string Name, Action<EntityEditor> DeclareAction)
      {
        return RegisterEntity(Kind, Race, Name, InitiateAction: null, DeclareAction);
      }

      Action<ApplyEditor> MajorPoison(Attribute Attribute)
      {
        return Apply => Apply.UnlessTargetResistant(Elements.poison, A => A.DecreaseAbility(Attribute, 1.d4()));
      }
      Action<ApplyEditor> MinorPoison(Attribute Attribute)
      {
        return Apply => Apply.UnlessTargetResistant(Elements.poison, A => A.DecreaseAbility(Attribute, Dice.One));
      }
      void Acidic(ApplyEditor Apply)
      {
        // acidic blood.
        Apply.RemoveTransient(Properties.petrifying);
        Apply.HarmEntity(Elements.acid, 1.d15());
      }
      void Tainted(ApplyEditor Apply)
      {
        // tainted meat.
        Apply.HarmEntity(Elements.necrotic, 1.d8());
        Apply.HarmEntity(Elements.poison, 1.d15());
        Apply.Macro(MajorPoison(Attributes.strength));
        Apply.ApplyTransient(Properties.sickness, 6.d6());
      }
      Action<ApplyEditor> Poisoned(Attribute Attribute)
      {
        return Apply =>
        {
          Apply.HarmEntity(Elements.poison, 1.d15());
          Apply.Macro(MajorPoison(Attribute));
        };
      }
      void TrollWeakness(EntityEditor Entity)
      {
        Entity.Chemistry.SetWeakness(Elements.acid, Elements.fire);
      }

      Defence NewBoneDefence(int Defence) => new Defence(Defence, P: +2, S: +0, B: -2);
      #endregion

      #region base entities
      angel = AddBaseEntity(Kinds.angel, Races.angel, "angel", E =>
      {
        E.Description = "Beautiful, otherworldly beings characterised by their signature halo and feathered wings. Strongly attuned to the struggle between good and evil, they sense the divinity within anything they hold.";
        E.Glyph = Glyphs.angel;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(2, Dice.Fixed(+1));
        E.ManaAdvancement.Set(2, Dice.Fixed(+2));
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 16, DEX: 16, CON: 16, INT: 24, WIS: 24, CHA: 24);
        E.SetGender(Genders.male, Genders.female);
        E.Chemistry.SetVulnerability(Materials.iron);
        E.Startup.SetTalent(Properties.flight, Properties.beatitude);
        E.Startup.SetResistance();
        E.SetCorpse(Chance.Always);
      });

      changeling = AddBaseEntity(Kinds.changeling, Races.changeling, "changeling", E =>
      {
        E.Description = "Shape-shifting deviants, who thrive on their deceptive talents.";
        E.Glyph = Glyphs.changeling;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S3_3;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(5000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1, Dice.Zero);
        E.ManaAdvancement.Set(1, Dice.Zero);
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 16, DEX: 16, CON: 22, INT: 18, WIS: 22, CHA: 18);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.SetGender(Genders.male, Genders.female);
        E.Startup.SetTalent(Properties.dark_vision, Properties.polymorph, Properties.polymorph_control);
        E.SetCorpse(Chance.Always);
      });

      demon = AddBaseEntity(Kinds.demon, Races.demon, "demon", E =>
      {
        E.Description = "Perverse creatures of many aberrations but always with crimson skin and horns. Their mere presence compels others to act out their darkest, most violent desires.";
        E.Glyph = Glyphs.demon;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(25000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(2, Dice.Fixed(+2));
        E.ManaAdvancement.Set(2, Dice.Fixed(+2));
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 24, DEX: 16, CON: 24, INT: 24, WIS: 16, CHA: 16);
        E.SetGender(Genders.male, Genders.female);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetTalent(Properties.dark_vision, Properties.conflict);
        E.Startup.SetResistance(Elements.fire);
        E.SetCorpse(Chance.Always);
      });

      dwarf = AddBaseEntity(Kinds.dwarf, Races.dwarf, "dwarf", E =>
      {
        E.Description = "Stout, short, and hardy folk. They are known for their stubbornness, metalworking, and love of alcohol.";
        E.Glyph = Glyphs.dwarf;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_2;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(4, 1.d3());
        E.ManaAdvancement.Set(0, Dice.Zero);
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 22, DEX: 18, CON: 24, INT: 18, WIS: 20, CHA: 18);
        E.SetGender(Genders.male, Genders.female);
        E.Chemistry.SetVulnerability();
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality, Properties.searching);
        E.SetCorpse(Chance.Always);
      });

      halfling = AddBaseEntity(Kinds.halfling, Races.halfling, "halfling", E =>
      {
        E.Description = "Small folk who prefer simple lives. They are notably gregarious, and their build lends them well to less-than-noble endeavours.";
        E.Glyph = Glyphs.halfling;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(5000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1, Dice.One);
        E.ManaAdvancement.Set(2, Dice.Fixed(+2));
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 16, DEX: 22, CON: 16, INT: 18, WIS: 18, CHA: 22);
        E.SetGender(Genders.male, Genders.female);
        E.Startup.SetTalent(Properties.dark_vision, Properties.stealth, Properties.searching);
        E.SetCorpse(Chance.Always);
      });

      elf = AddBaseEntity(Kinds.elf, Races.elf, "elf", E =>
      {
        E.Description = "Spiritual beings fond of nature and magic. They are physically similar to humans, but often smaller and nimbler.";
        E.Glyph = Glyphs.elf;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1, Dice.One);
        E.ManaAdvancement.Set(2, Dice.Fixed(+3));
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 18, DEX: 22, CON: 16, INT: 20, WIS: 20, CHA: 20);
        E.SetGender(Genders.male, Genders.female);
        E.Startup.SetTalent(Properties.dark_vision, Properties.see_invisible);
        E.Startup.SetResistance(Elements.sleep);
        E.SetCorpse(Chance.Always);
      });

      echo = AddBaseEntity(Kinds.echo, Races.echo, "echo", E =>
      {
        E.Description = "Astral beings who are a vessel for the indomitable spirit of a vanquished adventurer. Having no motivations of their own, they are glad to permit the possession; for the deceased adventurer, it is a second chance at revenge or redemption. Born from astral matter, they are slightly built, translucent and can move freely through physical obstacles.";
        E.Glyph = Glyphs.echo;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(0, Dice.Zero);
        E.ManaAdvancement.Set(0, Dice.Zero);
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 16, DEX: 24, CON: 16, INT: 24, WIS: 24, CHA: 16);
        E.SetGender(Genders.male, Genders.female);
        E.Startup.SetTalent(Properties.invisibility, Properties.phasing);
        E.SetCorpse(Chance.Always);
      });

      fairy = AddBaseEntity(Kinds.fairy, Races.fairy, "fairy", E =>
      {
        E.Description = "Tiny winged spirits, inherently magical and extraordinarily beautiful. When threatened, they can escape through distortions in spatial reality.";
        E.Glyph = Glyphs.fairy;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(3000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(0, Dice.Zero);
        E.ManaAdvancement.Set(4, Dice.Fixed(+4));
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 10, DEX: 25, CON: 15, INT: 20, WIS: 20, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.Startup.SetTalent(Properties.flight, Properties.blinking);
        E.Startup.SetResistance(Elements.magical);
        E.SetCorpse(Chance.Always);
      });

      giant = AddBaseEntity(Kinds.giant, Races.giant, "giant", E =>
      {
        E.Description = "An ancient race of towering recluses. Their terrifying size gives them immense strength, supplemented by a voracious diet of meats and minerals.";
        E.Glyph = Glyphs.giant;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_3;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(10, 1.d4());
        E.ManaAdvancement.Set(0, Dice.Zero);
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 15, CON: 30, INT: 15, WIS: 15, CHA: 15);
        E.SetGender(Genders.male, Genders.female);
        E.Startup.SetTalent(Properties.dark_vision);
        E.SetCorpse(Chance.Always);
      });

      gnome = AddBaseEntity(Kinds.gnome, Races.gnome, "gnome", E =>
      {
        E.Description = "Subterranean peoples of diminutive stature, fond of tinkering and magic. Evolved for subsistence living, their metabolism is suited for long adventures where food is scarce.";
        E.Glyph = Glyphs.gnome;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(6500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1, Dice.One);
        E.ManaAdvancement.Set(2, Dice.Fixed(+2));
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 18, DEX: 18, CON: 18, INT: 22, WIS: 22, CHA: 20);
        E.SetGender(Genders.male, Genders.female);
        E.Startup.SetTalent(Properties.dark_vision, Properties.slow_digestion, Properties.appraisal);
        E.SetCorpse(Chance.Always);
      });

      human = AddBaseEntity(Kinds.human, Races.human, "human", E =>
      {
        E.Description = "A medium-sized creature prone to great ambition. Short-lived but ubiquitous; they are not to be underestimated.";
        E.Glyph = Glyphs.human;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(2, 1.d2());
        E.ManaAdvancement.Set(1, Dice.Fixed(+2));
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 20, DEX: 20, CON: 20, INT: 20, WIS: 20, CHA: 20);
        E.SetGender(Genders.male, Genders.female);
        E.Startup.SetTalent();
        E.SetCorpse(Chance.Always);
      });

      kobold = AddBaseEntity(Kinds.kobold, Races.kobold, "kobold", E =>
      {
        E.Description = "Unfairly characterised as cowardly and weak, these diminutive reptilian creatures overcome their physical limitations by employing vicious and cunning strategies.";
        E.Glyph = Glyphs.kobold;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1, Dice.One);
        E.ManaAdvancement.Set(1, Dice.One);
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 18, DEX: 24, CON: 18, INT: 20, WIS: 20, CHA: 18);
        E.SetGender(Genders.male, Genders.female);
        E.Chemistry.SetVulnerability();
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      lizardman = AddBaseEntity(Kinds.lizardman, Races.lizardman, "lizardman", E =>
      {
        E.Description = "Large, carnivorous reptilians whose bestial ancestors dominated the world long before the birth of civilisation. They are fearsome predators, capable of leaping impressive distances and warding off many attacks with their thick scaly hides.";
        E.Glyph = Glyphs.lizardman;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // strong natural skin
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(22000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(2, Dice.One);
        E.ManaAdvancement.Set(1, Dice.Zero);
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 22, DEX: 18, CON: 24, INT: 16, WIS: 16, CHA: 16);
        E.SetGender(Genders.male, Genders.female);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality, Properties.jumping);
        E.Startup.SetResistance(Elements.petrify);
        E.SetCorpse(Chance.Always);
      });

      orc = AddBaseEntity(Kinds.orc, Races.orc, "orc", E =>
      {
        E.Description = "Ugly, brutish creatures with cannibalistic tendencies; this warlike race is known for their impressive strength and intellectual incapabilities.";
        E.Glyph = Glyphs.orc;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(17000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(2, 1.d2());
        E.ManaAdvancement.Set(1, Dice.One);
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 25, DEX: 18, CON: 25, INT: 18, WIS: 18, CHA: 16);
        E.SetGender(Genders.male, Genders.female);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.cannibalism);
        E.Startup.SetResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
      });

      plasmoid = AddBaseEntity(Kinds.plasmoid, Races.plasmoid, "plasmoid", E =>
      {
        E.Description = "Amorphous beings who have no typical shape but often take on a translucent humanoid form. While unmistakable for anything other than a plasma-like ooze, this form enables the use of clothing and tools.";
        E.Glyph = Glyphs.plasmoid;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +1, S: +1, B: -2);
        E.SetDiet(Diets.organivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(9000);
        E.Figure.Set
        (
          Material: Materials.animal, // TODO: plastic?
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1, Dice.Zero);
        E.ManaAdvancement.Set(1, Dice.Zero);
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 15, DEX: 15, CON: 25, INT: 25, WIS: 20, CHA: 20);
        E.SetGender(Genders.male, Genders.female);
        E.Chemistry.SetWeakness(Elements.cold, Elements.fire, Elements.shock);
        E.Startup.SetTalent(Properties.slippery);
        E.Startup.SetResistance(Elements.acid, Elements.poison);
        E.SetCorpse(Chance.Always);
      });

      robot = AddBaseEntity(Kinds.robot, Races.robot, "robot", E =>
      {
        E.Description = "Bipedal mechanical automatons with nearly unbounded artificial intelligence. Powered by a molten core engine that requires a constant supply of raw metals and is susceptible to water damage.";
        E.Glyph = Glyphs.robot;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 11, P: -1, S: +0, B: +1);
        E.SetDiet(Diets.metalivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.iron,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(4, 1.d2());
        E.ManaAdvancement.Set(1, 1.d2());
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 22, DEX: 16, CON: 22, INT: 28, WIS: 18, CHA: 12);
        E.SetGender(Genders.male, Genders.female);
        E.Startup.SetTalent(Properties.clarity, Properties.vitality);
        E.Startup.SetResistance(Elements.petrify);
        E.SetCorpse(Chance.Never); // TODO: metal corpse?
        E.AddReaction(Chance.Always, Elements.water, A =>
        {
          // physical damage and -1 permanent life/mana.
          A.HarmEntity(Elements.physical, 2.d4(), Modifier.Plus1);
          A.DiminishEntity(2.d4(), Modifier.Plus1);
        });
      });

      satyr = AddBaseEntity(Kinds.satyr, Races.satyr, "satyr", E =>
      {
        E.Description = "Fey creatures linked by powerful nature spirits to fuel their antics. They are stocky with furry lower bodies, cloven hooves of a goat and curled horns of a ram. Ribald and clever, they cheerfully lead hedonistic escapades of drinking, dancing and fighting.";
        E.Glyph = Glyphs.satyr;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(17000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: false, // can't wear boots due to hooves
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1, 1.d2());
        E.ManaAdvancement.Set(2, 1.d2());
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 18, DEX: 18, CON: 18, INT: 22, WIS: 20, CHA: 24);
        E.SetGender(Genders.male, Genders.female);
        E.Startup.SetTalent(Properties.mana_regeneration);
        E.Startup.SetResistance(Elements.sleep);
        E.SetCorpse(Chance.Always);
      });

      tortle = AddBaseEntity(Kinds.tortle, Races.tortle, "tortle", E =>
      {
        E.Description = "Tortoise-like nomadic survivalists who leave their birthplace, from the moment they can walk, to travel the world with the comfort and protection of home on their backs.";
        E.Glyph = Glyphs.tortle;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(45000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(2, 1.d3());
        E.ManaAdvancement.Set(2, 1.d3());
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 24, DEX: 16, CON: 24, INT: 16, WIS: 24, CHA: 16);
        E.SetGender(Genders.male, Genders.female);
        E.Startup.SetTalent(Properties.deflection);
        E.Startup.SetResistance(Elements.cold);
        E.SetCorpse(Chance.Always);
        //E.AddReaction(Chance.Always, Elements.water, A =>
        //{
        //  A.WhenChance(Chance.OneIn2, T => T.Heal(1.d6(), Modifier.Zero), E => E.Energise(1.d6(), Modifier.Zero));
        //});
      });

      troll = AddBaseEntity(Kinds.troll, Races.troll, "troll", E =>
      {
        E.Description = "Ravenous, predatory species of monstrous humanoid with a severe hunch that causes the backs of their hands to drag on the ground. Despite the awkward physical appearance, they are powerfully built and are infamous for their ability to rapidly recover from any wound to their rubbery hide.";
        E.Glyph = Glyphs.troll;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // tough natural skin.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S4_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(4, 1.d3());
        E.ManaAdvancement.Set(1, Dice.One);
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 10, INT: 10, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 25, DEX: 25, CON: 25, INT: 15, WIS: 20, CHA: 10);
        E.SetGender(Genders.male, Genders.female);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.SetCorpse(Chance.Always);
        TrollWeakness(E);
      });
      #endregion

      #region angel.
      archangel = AddEntity(Kinds.angel, Races.angel, "archangel", E =>
      {
        E.Glyph = Glyphs.archangel;
        E.Sonic = Sonics.prayer;
        E.Level = 14;
        E.Challenge = 415;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 18, DEX: 17, CON: 16, INT: 17, WIS: 19, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.iron);
        E.Startup.SetSkill(Qualifications.specialist, Skills.evocation, Skills.abjuration, Skills.clerical, Skills.conjuration, Skills.literacy);
        E.Startup.SetSkill(Qualifications.expert, Skills.heavy_blade, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.beatitude);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.poison, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.curing);
        E.Startup.AddGrimoire(Dice.One, Spells.extra_healing);
        E.Startup.AddGrimoire(Dice.One, Spells.light);
        E.Startup.AddGrimoire(Dice.One, Spells.shocking_sphere);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.spell, Elements.magical, 2.d6(), A => A.Apply.SpecialDisarm());
        E.SetCorpse(Chance.Never);
      });

      astral_deva = AddEntity(Kinds.angel, Races.angel, "astral deva", E =>
      {
        E.Glyph = Glyphs.astral_deva;
        E.Sonic = Sonics.prayer;
        E.Level = 18;
        E.Challenge = 604;
        E.Difficulty = 24;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +5 from dex = 26.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 20, CON: 20, INT: 19, WIS: 22, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.iron);
        E.Startup.SetSkill(Qualifications.specialist, Skills.clerical, Skills.enchantment, Skills.evocation, Skills.literacy);
        E.Startup.SetSkill(Qualifications.expert, Skills.heavy_blade, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.beatitude, Properties.displacement);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.poison, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d10()); // +5 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.ApplyTransient(Properties.stunned, 1.d4());
        });
        E.Conveyance.ApplyTransient(Properties.hallucination, Dice.Fixed(+200));
        E.SetCorpse(Chance.OneIn4);
      });

      monadic_deva = AddEntity(Kinds.angel, Races.angel, "monadic deva", E =>
      {
        E.Glyph = Glyphs.monadic_deva;
        E.Sonic = Sonics.prayer;
        E.Level = 15;
        E.Challenge = 456;
        E.Difficulty = 21;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +4 from dex = 24.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 18, CON: 18, INT: 17, WIS: 20, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.iron);
        E.Startup.SetSkill(Qualifications.expert, Skills.evocation, Skills.heavy_blade, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.specialist, Skills.clerical, Skills.enchantment, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.reflection, Properties.beatitude, Properties.displacement);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.poison, Elements.sleep);
        E.Startup.AddGrimoire(Dice.Fixed(3), Spells.magic_missile, Spells.sleep, Spells.force_bolt);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // +4 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.AddAttack(AttackTypes.spell, Elements.physical, 2.d4());
        E.SetCorpse(Chance.Never);
      });

      movanic_deva = AddEntity(Kinds.angel, Races.angel, "movanic deva", E =>
      {
        E.Glyph = Glyphs.movanic_deva;
        E.Sonic = Sonics.prayer;
        E.Level = 12;
        E.Challenge = 386;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +3 from dex = 22.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(19000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 16, CON: 16, INT: 15, WIS: 18, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.iron);
        E.Startup.SetSkill(Qualifications.specialist, Skills.clerical, Skills.enchantment, Skills.evocation, Skills.heavy_blade, Skills.heavy_armour, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.reflection, Properties.beatitude, Properties.displacement);
        E.Startup.AddGrimoire(Dice.Fixed(2), Spells.magic_missile, Spells.sleep);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.fire, 2.d4()); // +3 from str.
        E.AddAttack(AttackTypes.weapon, Elements.fire, 2.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.SetCorpse(Chance.Never);
      });

      archon = AddEntity(Kinds.angel, Races.angel, "archon", E =>
      {
        E.Glyph = Glyphs.archon;
        E.Sonic = Sonics.electricity;
        E.Level = 19;
        E.Challenge = 662;
        E.Difficulty = 26;
        E.Frequency = 1;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0); // +5 from dex = 27.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 21, DEX: 20, CON: 21, INT: 21, WIS: 22, CHA: 22);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(); // transcended angel is not vulnerable to iron.
        E.Startup.SetSkill(Qualifications.specialist, Skills.evocation, Skills.literacy);
        E.Startup.SetSkill(Qualifications.expert, Skills.heavy_blade, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.life_regeneration, Properties.displacement);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.psychic, 2.d4() + 4)
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.blindness, 2.d6());
          K.Apply.ApplyTransient(Properties.stunned, 2.d6());
        });
        E.AddAttack(AttackTypes.spell, Elements.physical, 1.d8(), A => A.Apply.SpecialDisarm());
        E.SetCorpse(Chance.Never);
      });

      couatl = AddEntity(Kinds.angel, null, "couatl", E =>
      {
        E.Glyph = Glyphs.couatl;
        E.Sonic = Sonics.hiss;
        E.Level = 8;
        E.Challenge = 148;
        E.Difficulty = 11;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +5 from dex = 15.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 20, CON: 17, INT: 18, WIS: 20, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight, Properties.clairvoyance);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4(), K => // +3 from str.
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.grapple, Elements.physical, 1.d4(), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.Conveyance.TradeoffAbility(Attributes.wisdom, Attributes.strength);
        E.SetCorpse(Chance.Always);
      });

      kirin = AddEntity(Kinds.angel, null, "ki-rin", E =>
      {
        E.Glyph = Glyphs.kirin;
        E.Sonic = Sonics.neigh;
        E.Level = 16;
        E.Challenge = 472;
        E.Difficulty = 21;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +5 from dex = 23.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S6_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(140000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 19, DEX: 20, CON: 16, INT: 17, WIS: 20, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.specialist, Skills.evocation, Skills.enchantment, Skills.clerical);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight);
        E.Startup.AddGrimoire(Dice.One, Spells.magic_missile);
        E.Startup.AddGrimoire(Dice.One, Spells.slow);
        E.Startup.AddGrimoire(Dice.One, Spells.healing);
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d4()); // +4 from str.
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.butt, Elements.physical, 2.d6(), A =>
        {
          A.Apply.Knockback();
          A.Apply.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.stunned, 1.d4() + 1));
        });
        E.Conveyance.TradeoffAbility(Attributes.wisdom, Attributes.strength);
        E.SetCorpse(Chance.Always);
      });

      Aleax = AddUniqueEntity(Kinds.angel, Races.angel, "Aleax", E =>
      {
        E.Glyph = Glyphs.Aleax;
        E.Sonic = Sonics.prayer;
        E.Level = 50;
        E.Challenge = 5208;
        E.Difficulty = 55;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 30, P: +0, S: +0, B: +0); // +4 fromd ex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S6_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 18, CON: 21, INT: 22, WIS: 23, CHA: 24);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.heavy_blade, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.life_regeneration, Properties.mana_regeneration, Properties.polymorph_control, Properties.beatitude, Properties.displacement, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.poison, Elements.sleep, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.touch, Elements.physical, 1.d10(), A =>
        {
          A.Apply.ImpersonateEntity();
        });
        E.SetCorpse(Chance.Never);
      });

      Planetar = AddUniqueEntity(Kinds.angel, Races.angel, "Planetar", E =>
      {
        E.Glyph = Glyphs.Planetar;
        E.Sonic = Sonics.prayer;
        E.Level = 50;
        E.Challenge = 5642;
        E.Difficulty = 55;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 30, P: +0, S: +0, B: +0); // +5 from dex = 35.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S6_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(21000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 24, DEX: 20, CON: 24, INT: 19, WIS: 22, CHA: 25);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.evocation, Skills.heavy_blade, Skills.heavy_armour, Skills.literacy, Skills.transmutation);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.life_regeneration, Properties.mana_regeneration, Properties.polymorph_control, Properties.reflection, Properties.beatitude, Properties.displacement, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.sleep, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.Startup.AddGrimoire(Dice.One, Spells.poison_blast);
        E.Startup.AddGrimoire(Dice.One, Spells.acid_stream);
        E.Startup.AddGrimoire(Dice.One, Spells.toxic_spray);
        E.Startup.AddGrimoire(Dice.One, Spells.cone_of_cold);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4()); // +7 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.psychic, 2.d4() + 4)
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.blindness, 3.d6());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d8());
        E.SetCorpse(Chance.Never);
      });

      Solar = AddUniqueEntity(Kinds.angel, Races.angel, "Solar", E =>
      {
        E.Glyph = Glyphs.Solar;
        E.Sonic = Sonics.prayer;
        E.Level = 50;
        E.Challenge = 5100;
        E.Difficulty = 55;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 30, P: +0, S: +0, B: +0); // +6 from dex = 36.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 26, DEX: 22, CON: 26, INT: 25, WIS: 25, CHA: 30);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.evocation, Skills.heavy_blade, Skills.heavy_armour, Skills.literacy, Skills.transmutation, Skills.clerical, Skills.abjuration);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.life_regeneration, Properties.mana_regeneration, Properties.polymorph_control, Properties.reflection, Properties.beatitude, Properties.displacement, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.sleep, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.Startup.AddGrimoire(Dice.One, Spells.poison_blast);
        E.Startup.AddGrimoire(Dice.One, Spells.acid_stream);
        E.Startup.AddGrimoire(Dice.One, Spells.toxic_spray);
        E.Startup.AddGrimoire(Dice.One, Spells.cone_of_cold);
        E.Startup.AddGrimoire(Dice.One, Spells.light);
        E.Startup.AddGrimoire(Dice.One, Spells.turn_undead);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4()); // +8 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.psychic, 2.d4() + 4)
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.blindness, 5.d6());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d8());
        E.SetCorpse(Chance.Never);
      });
      #endregion

      #region insect.
      assassin_bug = AddEntity(Kinds.insect, null, "assassin bug", E =>
      {
        E.Glyph = Glyphs.assassin_bug;
        E.Sonic = Sonics.scuttle;
        E.Level = 7;
        E.Challenge = 121;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2 from dex = 15.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S7_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 15, CON: 13, INT: 3, WIS: 10, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 13, CHA: 3);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      black_wasp = AddEntity(Kinds.insect, null, "black wasp", E =>
      {
        E.Glyph = Glyphs.black_wasp;
        E.Sonic = Sonics.buzz;
        E.Level = 11;
        E.Challenge = 349;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +2 from dex = 19.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(3000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 15, CON: 13, INT: 3, WIS: 10, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 13, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.sting, Elements.physical, 2.d4(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.sting, Elements.physical, 2.d4(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      fire_ant = AddEntity(Kinds.insect, null, "fire ant", E =>
      {
        E.Glyph = Glyphs.fire_ant;
        E.Sonic = Sonics.scuttle;
        E.Level = 17;
        E.Challenge = 237;
        E.Difficulty = 15;
        E.Frequency = 3;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +1 from dex = 20.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 12, CON: 14, INT: 3, WIS: 8, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 10, CHA: 8);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.fire);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d5()); // +2 from str.
        E.AddAttack(AttackTypes.bite, Elements.fire, 3.d5());
        E.Conveyance.MajorResistance(Elements.fire);
        E.SetCorpse(Chance.OneIn4);
      });

      giant_ant = AddEntity(Kinds.insect, null, "giant ant", E =>
      {
        E.Glyph = Glyphs.giant_ant;
        E.Sonic = Sonics.scuttle;
        E.Level = 2;
        E.Challenge = 8;
        E.Difficulty = 4;
        E.Frequency = 4;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 12, CON: 13, INT: 3, WIS: 9, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 11, CHA: 7);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2()); // +2 from str.
        E.SetCorpse(Chance.OneIn4);
      });

      giant_beetle = AddEntity(Kinds.insect, null, "giant beetle", E =>
      {
        E.Glyph = Glyphs.giant_beetle;
        E.Sonic = Sonics.scuttle;
        E.Level = 22;
        E.Challenge = 684;
        E.Difficulty = 23;
        E.Frequency = 4;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // -1 from dex = 18.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(19500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 19, DEX: 9, CON: 15, INT: 3, WIS: 9, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 11, CHA: 4);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d5()); // +4 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      giant_cockroach = AddEntity(Kinds.insect, null, "giant cockroach", E =>
      {
        E.Glyph = Glyphs.giant_cockroach;
        E.Sonic = Sonics.scuttle;
        E.Level = 0;
        E.Challenge = 1;
        E.Difficulty = 1;
        E.Frequency = 3;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(150);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d4());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 6, DEX: 12, CON: 6, INT: 3, WIS: 5, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.shock, Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.One);
        E.SetCorpse(Chance.Never);
      });

      giant_flea = AddEntity(Kinds.insect, null, "giant flea", E =>
      {
        E.Glyph = Glyphs.giant_flea;
        E.Sonic = Sonics.buzz;
        E.Level = 3;
        E.Challenge = 16;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +2 from dex = 14.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(50);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 15, CON: 13, INT: 3, WIS: 11, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 13, CHA: 8);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.jumping);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2()); // +1 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2());
        E.SetCorpse(Chance.OneIn4);
      });

      giant_louse = AddEntity(Kinds.insect, null, "giant louse", E =>
      {
        E.Glyph = Glyphs.giant_louse;
        E.Sonic = Sonics.buzz;
        E.Level = 5;
        E.Challenge = 32;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +3 from dex = 14.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 16, CON: 15, INT: 3, WIS: 11, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 13, CHA: 5);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(); // lice don't jump.
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3(), A =>
        {
          A.Apply.WhenChance(Chance.OneIn4, T => T.AfflictEntity(Codex.Afflictions.nits));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3(), A =>
        {
          A.Apply.WhenChance(Chance.OneIn4, T => T.AfflictEntity(Codex.Afflictions.nits));
        });
        E.SetCorpse(Chance.OneIn4);
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.AfflictEntity(Codex.Afflictions.nits));
      });

      giant_tick = AddEntity(Kinds.insect, null, "giant tick", E =>
      {
        E.Glyph = Glyphs.giant_tick;
        E.Sonic = Sonics.buzz;
        E.Level = 1;
        E.Challenge = 5;
        E.Difficulty = 1;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(50);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 7, INT: 3, WIS: 6, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 12, CHA: 4);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(); // ticks don't jump.
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.One);
        E.SetCorpse(Chance.OneIn4);
      });

      giant_termite = AddEntity(Kinds.insect, null, "giant termite", E =>
      {
        E.Glyph = Glyphs.giant_termite;
        E.Sonic = Sonics.buzz;
        E.Level = 3;
        E.Challenge = 19;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.xylophagy);
        E.Speed = Speed.S4_5;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 10, CON: 10, INT: 3, WIS: 6, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 12, CHA: 4);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(); // termites actually fly, but maybe giant ones can't?
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.WhenChance(Chance.OneIn3, T => T.DestroyEquippedItem(Dice.One, StockArray: null, SanctityArray: null, E.Diet.Materials.ToArray()));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4());
        E.SetCorpse(Chance.OneIn4);
      });

      giant_wasp = AddEntity(Kinds.insect, null, "giant wasp", E =>
      {
        E.Glyph = Glyphs.giant_wasp;
        E.Sonic = Sonics.buzz;
        E.Level = 17;
        E.Challenge = 362;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex = 20.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(3000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 14, CON: 10, INT: 3, WIS: 10, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 12, CHA: 5);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.sting, Elements.physical, 2.d8(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.sting, Elements.physical, 2.d8(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      killer_bee = AddEntity(Kinds.insect, null, "killer bee", E =>
      {
        E.Glyph = Glyphs.killer_bee;
        E.Sonic = Sonics.buzz;
        E.Level = 1;
        E.Challenge = 26;
        E.Difficulty = 5;
        E.Frequency = 3;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +2 from dex = 21.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 15, CON: 10, INT: 3, WIS: 10, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 12, CHA: 5);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d3(), K => // +1 from str.
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      killer_beetle = AddEntity(Kinds.insect, null, "killer beetle", E =>
      {
        E.Glyph = Glyphs.killer_beetle;
        E.Sonic = Sonics.scuttle;
        E.Level = 28;
        E.Challenge = 1153;
        E.Difficulty = 29;
        E.Frequency = 1;
        E.Defence = new Defence(D: 26, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(22000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 16, CON: 16, INT: 5, WIS: 8, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d7()); // +2 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d7());
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      // Lovecraftian, perhaps should be Kinds.alien?
      migo_drone = AddEntity(Kinds.insect, null, "migo drone", E =>
      {
        //E.Description = "They are described as winged fungal creatures that resemble crustaceans, with large claws and heads covered in antennae.";
        E.Glyph = Glyphs.migo_drone;
        E.Sonic = Sonics.buzz;
        E.Level = 7;
        E.Challenge = 74;
        E.Difficulty = 10;
        E.Frequency = 2;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0); // -2 from dex = 20.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 7, CON: 10, INT: 3, WIS: 3, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 10, CON: 30, INT: 6, WIS: 6, CHA: 6);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d3(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      migo_warrior = AddEntity(Kinds.insect, null, "migo warrior", E =>
      {
        E.Glyph = Glyphs.migo_warrior;
        E.Sonic = Sonics.buzz;
        E.Level = 10;
        E.Challenge = 197;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // -1 from dex = 23.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(22000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 9, CON: 12, INT: 3, WIS: 9, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 13, CON: 30, INT: 3, WIS: 11, CHA: 3);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d3(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4()); // +2 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      migo_queen = AddEntity(Kinds.insect, null, "migo queen", E =>
      {
        E.Glyph = Glyphs.migo_queen;
        E.Sonic = Sonics.buzz;
        E.Level = 15;
        E.Challenge = 332;
        E.Difficulty = 18;
        E.Frequency = 1;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0); // +1 from dex = 23.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 12, CON: 14, INT: 12, WIS: 12, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 20, WIS: 15, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d3(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.UnlessTargetResistant(Elements.poison, A =>
          {
            A.DecreaseAbility(Attributes.intelligence, Dice.One);
            A.Amnesia(Range.Sq15);
          }));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 5.d8()); // +3 from str.
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d4(), migo_drone);
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      queen_bee = AddEntity(Kinds.insect, null, "queen bee", E =>
      {
        E.Glyph = Glyphs.queen_bee;
        E.Sonic = Sonics.buzz;
        E.Level = 19;
        E.Challenge = 648;
        E.Difficulty = 21;
        E.Frequency = 1;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S7_5;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 19, DEX: 11, CON: 18, INT: 3, WIS: 12, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 20, CON: 30, INT: 3, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d12(), K => // +4 from str.
        {
          K.Apply.WhenChance(Chance.OneIn2, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d3(), killer_bee);
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.Conveyance.AfflictEntity(Codex.Afflictions.poisoning);
        E.SetCorpse(Chance.OneIn4);
      });

      snow_ant = AddEntity(Kinds.insect, null, "snow ant", E =>
      {
        E.Glyph = Glyphs.snow_ant;
        E.Sonic = Sonics.scuttle;
        E.Level = 17;
        E.Challenge = 237;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 10, CON: 15, INT: 3, WIS: 8, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 20, CON: 30, INT: 3, WIS: 10, CHA: 7);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.cold);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d5()); // +2 from str.
        E.AddAttack(AttackTypes.bite, Elements.cold, 3.d5());
        E.Conveyance.MajorResistance(Elements.cold);
        E.SetCorpse(Chance.OneIn4);
      });

      soldier_ant = AddEntity(Kinds.insect, null, "soldier ant", E =>
      {
        E.Glyph = Glyphs.soldier_ant;
        E.Sonic = Sonics.scuttle;
        E.Level = 3;
        E.Challenge = 22;
        E.Difficulty = 6;
        E.Frequency = 3;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 10, CON: 13, INT: 3, WIS: 13, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 13, CHA: 15);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d3()); // +2 from str.
        E.AddAttack(AttackTypes.sting, Elements.physical, 3.d3(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      spitting_beetle = AddEntity(Kinds.insect, null, "spitting beetle", E =>
      {
        E.Glyph = Glyphs.spitting_beetle;
        E.Sonic = Sonics.scuttle;
        E.Level = 25;
        E.Challenge = 946;
        E.Difficulty = 27;
        E.Frequency = 1;
        E.Defence = new Defence(D: 26, P: +0, S: +0, B: +0); // +2 from dex = 28.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 14, CON: 14, INT: 4, WIS: 10, CHA: 3);
        E.LimitForm.Set(STR: 20, DEX: 30, CON: 30, INT: 4, WIS: 13, CHA: 3);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d6()); // +3 from str.
        E.AddAttack(AttackTypes.spit, Elements.acid, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.acid, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.acid, 4.d6());
          K.Apply.CreateDevice(Codex.Devices.noxious_pool, Destruction: false);
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      tsetse_fly = AddEntity(Kinds.insect, null, "tsetse fly", E =>
      {
        E.Glyph = Glyphs.tsetse_fly;
        E.Sonic = Sonics.buzz;
        E.Level = 3;
        E.Challenge = 68;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +4 from dex = 20.
        E.SetDiet(Diets.hematophagy);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 19, CON: 10, INT: 3, WIS: 10, CHA: 3);
        E.LimitForm.Set(STR: 20, DEX: 30, CON: 10, INT: 3, WIS: 30, CHA: 10);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d3(), K =>
        {
          // African trypanosomiasis, also known as African sleeping sickness or simply sleeping sickness, is an insect-borne parasitic infection of humans and other animals.
          // This is usually transmitted by the bite of an infected tsetse fly.
          // Initially, the first stage of the disease is characterized by fevers, headaches, itchiness, and joint pains, beginning one to three weeks after the bite.
          // TODO: Weeks to months later the second stage begins with confusion, poor coordination, numbness, and _trouble sleeping_.
          K.Apply.ApplyTransient(Properties.sleeping, 1.d3());
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.sleep));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      yellow_jacket = AddEntity(Kinds.insect, null, "yellow jacket", E =>
      {
        E.Glyph = Glyphs.yellow_jacket;
        E.Sonic = Sonics.buzz;
        E.Level = 13;
        E.Challenge = 182;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +3 from dex = 18.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 9, DEX: 17, CON: 13, INT: 3, WIS: 10, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 3, WIS: 12, CHA: 4);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d9() + 1, K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d9() + 1, K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region bat.
      //No Clue with what to do this one
      athol = AddEntity(Kinds.bat, null, "athol", E =>
      {
        E.Glyph = Glyphs.athol;
        E.Sonic = Sonics.chirp;
        E.Level = 5;
        E.Challenge = 22;
        E.Difficulty = 6;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2 from DEX.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 14, CON: 11, INT: 2, WIS: 12, CHA: 6);
        E.LimitForm.Set(STR: 20, DEX: 30, CON: 20, INT: 5, WIS: 20, CHA: 10);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3()); // +2 from STR.
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3());
        E.SetCorpse(Chance.OneIn3);
      });

      bat = AddEntity(Kinds.bat, null, "bat", E =>
      {
        E.Glyph = Glyphs.bat;
        E.Sonic = Sonics.chirp;
        E.Level = 0;
        E.Challenge = 6;
        E.Difficulty = 2;
        E.Frequency = 2;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +2 from dex = 12.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d4());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 4, DEX: 15, CON: 8, INT: 2, WIS: 13, CHA: 4);
        E.LimitForm.Set(STR: 10, DEX: 30, CON: 15, INT: 5, WIS: 15, CHA: 6);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4() + 3); // -3 from str.
        E.Conveyance.ApplyTransient(Properties.stunned, Dice.Fixed(+30));
        E.SetCorpse(Chance.OneIn4);
      });

      byakhee = AddEntity(Kinds.bat, null, "byakhee", E =>
      {
        //E.Description = "They are four-limbed eldritch monsters with bat-like wings, possessing visual traits of various animals such as vampire bats, crows and buzzards, as well as somewhat resembling human corpses.";
        E.Glyph = Glyphs.byakhee;
        E.Sonic = Sonics.chirp;
        E.Level = 18;
        E.Challenge = 575;
        E.Difficulty = 22;
        E.Frequency = 2;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +3 from dex = 24
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 16, CON: 17, INT: 7, WIS: 15, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 20, CON: 30, INT: 15, WIS: 30, CHA: 10);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d5()); // +4 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5());
        E.AddAttack(AttackTypes.sting, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.ApplyTransient(Properties.stunned, 3.d2());
        });
        E.Conveyance.ApplyTransient(Properties.hallucination, Dice.Fixed(+200));
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      giant_bat = AddEntity(Kinds.bat, null, "giant bat", E =>
      {
        E.Glyph = Glyphs.giant_bat;
        E.Sonic = Sonics.chirp;
        E.Level = 2;
        E.Challenge = 10;
        E.Difficulty = 3;
        E.Frequency = 2;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +2 from dex = 13.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 14, CON: 11, INT: 2, WIS: 12, CHA: 6);
        E.LimitForm.Set(STR: 20, DEX: 30, CON: 20, INT: 5, WIS: 20, CHA: 10);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +2 from str.
        E.Conveyance.ApplyTransient(Properties.stunned, Dice.Fixed(+60));
        E.SetCorpse(Chance.OneIn3);
      });

      harpy = AddEntity(Kinds.bat, null, "harpy", E =>
      {
        E.Glyph = Glyphs.harpy;
        E.Sonic = Sonics.chirp;
        E.Level = 16;
        E.Challenge = 397;
        E.Difficulty = 18;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +3 from dex = 24
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 17, CON: 12, INT: 7, WIS: 10, CHA: 13);
        E.LimitForm.Set(STR: 15, DEX: 20, CON: 20, INT: 15, WIS: 10, CHA: 15);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d15()); // +1 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4(), A =>
        {
          A.Apply.ApplyTransient(Properties.sickness, 4.d6());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4(), A =>
        {
          A.Apply.ApplyTransient(Properties.sickness, 4.d6());
        });
        E.Conveyance.ApplyTransient(Properties.sickness, 8.d6());
        E.SetCorpse(Chance.OneIn3);
      });

      hellbat = AddEntity(Kinds.bat, null, "hellbat", E =>
      {
        E.Glyph = Glyphs.hellbat;
        E.Sonic = Sonics.chirp;
        E.Level = 7;
        E.Challenge = 69;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +3 from dex = 13.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 17, CON: 16, INT: 11, WIS: 15, CHA: 13);
        E.LimitForm.Set(STR: 25, DEX: 30, CON: 25, INT: 15, WIS: 25, CHA: 20);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.fire);
        E.AddAttack(AttackTypes.bite, Elements.fire, 1.d10()); // +2 from str.
        E.Conveyance.MajorResistance(Elements.fire);
        E.SetCorpse(Chance.OneIn4);
      });

      mobat = AddEntity(Kinds.bat, null, "mobat", E =>
      {
        E.Glyph = Glyphs.mobat;
        E.Sonic = Sonics.chirp;
        E.Level = 10;
        E.Challenge = 152;
        E.Difficulty = 12;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +5 from dex
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(3000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 21, CON: 17, INT: 6, WIS: 14, CHA: 6);
        E.LimitForm.Set(STR: 25, DEX: 30, CON: 25, INT: 10, WIS: 20, CHA: 10);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +3 from str.
        E.AddAttack(AttackTypes.shriek, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.shriek, Dice.Zero)
           .SetTerminates();
          K.Apply.Alert(4.d6() + 4);
          K.Apply.Shout(Dice.Fixed(10), A => A.ApplyTransient(Properties.deafness, 8.d6() + 8));
        });
        E.SetCorpse(Chance.OneIn3);
      });

      mongbat = AddEntity(Kinds.bat, null, "mongbat", E =>
      {
        E.Glyph = Glyphs.mongbat;
        E.Sonic = Sonics.chirp;
        E.Level = 7;
        E.Challenge = 55;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = new Defence(D: 9, P: +0, S: +0, B: +0); // +4 from DEX.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 19, CON: 16, INT: 6, WIS: 14, CHA: 6);
        E.LimitForm.Set(STR: 25, DEX: 30, CON: 25, INT: 10, WIS: 20, CHA: 10);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10());// +2 from STR.
        E.AddAttack(AttackTypes.claw, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.StealCarriedItem(Properties.fear, 6.d6() + 6, Stocks.food);
        });
        E.SetCorpse(Chance.OneIn3);
      });

      nightgaunt = AddEntity(Kinds.bat, null, "nightgaunt", E =>
      {
        //E.Description = "they are humanoid, thin, black, and faceless. Their skin is slick and rubbery. They have a pair of inward-facing horns on their heads, clawed hands and a long barbed tail. They can fly using a set of membranous wings. They make no sound.";
        E.Glyph = Glyphs.nightgaunt;
        //E.Sonic = Sonics.chirp;
        E.Level = 27;
        E.Challenge = 827;
        E.Difficulty = 27;
        E.Frequency = 2;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // +3 from dex = 27.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(13000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: false,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 16, CON: 18, INT: 8, WIS: 13, CHA: 8);
        E.LimitForm.Set(STR: 25, DEX: 25, CON: 30, INT: 10, WIS: 20, CHA: 10);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.life_regeneration, Properties.slippery, Properties.silence);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d15()); // +6 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d15());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4(), A =>
        {
          A.Apply.ApplyTransient(Properties.paralysis, 1.d2() + 2);
        });
        E.Conveyance.MajorResistance(Elements.cold);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      rhumbat = AddEntity(Kinds.bat, null, "rhumbat", E =>
      {
        E.Glyph = Glyphs.rhumbat;
        E.Sonic = Sonics.chirp;
        E.Level = 7;
        E.Challenge = 54;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +2 from DEX.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 14, CON: 12, INT: 3, WIS: 13, CHA: 6);
        E.LimitForm.Set(STR: 25, DEX: 25, CON: 30, INT: 10, WIS: 20, CHA: 10);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6()); // +3 from STR.
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6());
        E.SetCorpse(Chance.OneIn3);
      });

      vampire_bat = AddEntity(Kinds.bat, null, "vampire bat", E =>
      {
        E.Glyph = Glyphs.vampire_bat;
        E.Sonic = Sonics.chirp;
        E.Level = 13;
        E.Challenge = 225;
        E.Difficulty = 15;
        E.Frequency = 2;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +3 from DEX = 21.
        E.SetDiet(Diets.hematophagy);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 17, CON: 12, INT: 4, WIS: 14, CHA: 6);
        E.LimitForm.Set(STR: 25, DEX: 25, CON: 30, INT: 10, WIS: 20, CHA: 10);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +2 from STR.
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d6());
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region bird.
      fledgling_raven = AddDomesticEntity(Kinds.bird, null, "fledgling raven", E =>
      {
        E.Glyph = Glyphs.fledgling_raven;
        E.Sonic = Sonics.squawk;
        E.Level = 2;
        E.Challenge = 11;
        E.Difficulty = 3;
        E.Frequency = 2;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(400);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 14, CON: 10, INT: 5, WIS: 5, CHA: 8);
        E.LimitForm.Set(STR: 15, DEX: 15, CON: 15, INT: 15, WIS: 15, CHA: 15);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d5() + 2); // -2 from STR
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d5() + 2);
        E.SetCorpse(Chance.Always);
      });

      juvenile_raven = AddDomesticEntity(Kinds.bird, null, "juvenile raven", E =>
      {
        E.Glyph = Glyphs.juvenile_raven;
        E.Sonic = Sonics.squawk;
        E.Level = 4;
        E.Challenge = 33;
        E.Difficulty = 6;
        E.Frequency = 2;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(400);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 12, CON: 12, INT: 6, WIS: 9, CHA: 7);
        E.LimitForm.Set(STR: 16, DEX: 16, CON: 16, INT: 16, WIS: 16, CHA: 16);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6() + 1); // -1 from STR
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d6() + 1);
        E.SetCorpse(Chance.Always);
      });

      adult_raven = AddDomesticEntity(Kinds.bird, null, "adult raven", E =>
      {
        E.Glyph = Glyphs.adult_raven;
        E.Sonic = Sonics.squawk;
        E.Level = 6;
        E.Challenge = 63;
        E.Difficulty = 8;
        E.Frequency = 2;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(400);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 14, CON: 14, INT: 8, WIS: 12, CHA: 6);
        E.LimitForm.Set(STR: 18, DEX: 18, CON: 18, INT: 18, WIS: 18, CHA: 18);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.searching);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.SetCorpse(Chance.Always);
      });

      chickatrice = AddEntity(Kinds.bird, null, "chickatrice", E =>
      {
        E.Glyph = Glyphs.chickatrice;
        E.Sonic = Sonics.cluck;
        E.Level = 3;
        E.Challenge = 60;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 4, DEX: 10, CON: 10, INT: 2, WIS: 11, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d5()); // -3 damage from strength gives 1d2 damage.
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K => // touch attacks are not influenced by strength modifier.
        {
          K.Apply.ApplyTransient(Properties.petrifying, 4.d4());
        });
        E.AddRetaliation(Chance.Always, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.psychic, Dice.One);
          R.Apply.ApplyTransient(Properties.petrifying, 4.d4());
        });
        E.Conveyance.ApplyTransient(Properties.petrifying, 10.d10());
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn4);
      });

      chicken = AddDomesticEntity(Kinds.bird, null, "chicken", E =>
      {
        E.Glyph = Glyphs.chicken;
        E.Sonic = Sonics.cluck;
        E.Level = 2;
        E.Challenge = 2;
        E.Difficulty = 1;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore); // TODO: should chicken be omnivore?
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 11, INT: 3, WIS: 6, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2());
        E.SetCorpse(Chance.Always);
      });

      cockatoo = AddDomesticEntity(Kinds.bird, null, "cockatoo", E =>
      {
        E.Glyph = Glyphs.cockatoo;
        E.Sonic = Sonics.chirp;
        E.Level = 3;
        E.Challenge = 13;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(750);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 14, CON: 9, INT: 3, WIS: 12, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4());
        E.SetCorpse(Chance.Always);
      });

      cockatrice = AddEntity(Kinds.bird, null, "cockatrice", E =>
      {
        E.Glyph = Glyphs.cockatrice;
        E.Sonic = Sonics.hiss;
        E.Level = 5;
        E.Challenge = 129;
        E.Difficulty = 7;
        E.Frequency = 6;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 12, CON: 12, INT: 2, WIS: 13, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.petrify, Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d5()); // -2 from strength gives 1d3 damage
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.ApplyTransient(Properties.petrifying, 4.d8());
        });
        E.AddRetaliation(Chance.Always, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.psychic, Dice.One);
          R.Apply.ApplyTransient(Properties.petrifying, 4.d8());
        });
        E.Conveyance.IncarcerateEntity(Elements.petrify, Codex.Blocks.statue);
        E.Conveyance.ApplyTransient(Properties.petrifying, 10.d100());
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      parrot = AddDomesticEntity(Kinds.bird, null, "parrot", E =>
      {
        E.Glyph = Glyphs.parrot;
        E.Sonic = Sonics.chirp;
        E.Level = 8;
        E.Challenge = 53;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Imitation = true; // imitate other monsters.
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(750);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 14, CON: 11, INT: 3, WIS: 12, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d6());
        E.SetCorpse(Chance.Always);
      });

      pyrolisk = AddEntity(Kinds.bird, null, "pyrolisk", E =>
      {
        E.Glyph = Glyphs.pyrolisk;
        E.Sonic = Sonics.chirp;
        E.Level = 11;
        E.Challenge = 203;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(3000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 3, DEX: 12, CON: 14, INT: 4, WIS: 15, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.fire, Elements.poison);
        E.AddAttack(AttackTypes.gaze, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.flame, 2.d4() + 4);
          K.Apply.HarmEntity(Elements.fire, 4.d5());
          K.Apply.WhenChance(Chance.OneIn2, T => T.CreateVolatile(Volatiles.blaze, 1.d100() + 50));
        });
        E.AddRetaliation(Chance.Always, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.flame, Dice.One);
          R.Apply.HarmEntity(Elements.fire, 4.d5());
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.fire));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region blob.
      Defence NewBlobDefence(int Defence) => new Defence(Defence, P: +0, S: -1, B: +1);

      acid_blob = AddEntity(Kinds.blob, null, "acid blob", E =>
      {
        E.Description = "This strange living bubble of corrosive fluids doesn't appear to have any offensive capabilities.";
        E.Sonic = Sonics.burble;
        E.Glyph = Glyphs.acid_blob;
        E.Level = 1;
        E.Challenge = 4;
        E.Difficulty = 2;
        E.Frequency = 3;
        E.Defence = NewBlobDefence(14); // -2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 2, DEX: 6, CON: 6, INT: 1, WIS: 2, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.acid, Elements.poison, Elements.sleep, Elements.petrify);
        E.AddRetaliation(Chance.OneIn2, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 1.d8());
        });
        E.Conveyance.Macro(Acidic);
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.AfflictEntity(Codex.Afflictions.reflux));
        E.SetCorpse(Chance.OneIn4);
      });

      burbling_blob = AddEntity(Kinds.blob, null, "burbling blob", E =>
      {
        E.Glyph = Glyphs.burbling_blob;
        E.Sonic = Sonics.burble;
        E.Level = 14;
        E.Challenge = 278;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.Defence = NewBlobDefence(13); // -1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 8, CON: 20, INT: 3, WIS: 10, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.acid, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.touch, Elements.physical, 1.d14()); // +2 from str.
        E.AddRetaliation(Chance.OneIn2, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 5.d4());
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
      });

      gelatinous_cube = AddEntity(Kinds.blob, null, "gelatinous cube", E =>
      {
        E.Glyph = Glyphs.gelatinous_cube;
        E.Sonic = Sonics.burble;
        E.Level = 6;
        E.Challenge = 52;
        E.Difficulty = 8;
        E.Frequency = 3;
        E.Defence = NewBlobDefence(12);
        E.SetDiet(Diets.organivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 3, CON: 20, INT: 1, WIS: 6, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(Stocks.List.ToArray());
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.shock, Elements.fire, Elements.petrify, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.ApplyTransient(Properties.paralysis, 2.d4());
        });
        E.AddRetaliation(Chance.OneIn3, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.ApplyTransient(Properties.paralysis, 1.d4());
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.fire));
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.sleep));
          Table.Add(1, A => A.MajorResistance(Elements.shock));
        }));
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.Always);
      });

      jiggling_blob = AddEntity(Kinds.blob, null, "jiggling blob", E =>
      {
        E.Glyph = Glyphs.jiggling_blob;
        E.Sonic = Sonics.burble;
        E.Level = 10;
        E.Challenge = 174;
        E.Difficulty = 11;
        E.Frequency = 1;
        E.Defence = NewBlobDefence(13); // -1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 8, CON: 17, INT: 3, WIS: 8, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.touch, Elements.physical, 1.d15()); // +1 from str.
        E.AddRetaliation(Chance.OneIn2, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 2.d4());
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
      });

      lava_blob = AddEntity(Kinds.blob, null, "lava blob", E =>
      {
        E.Glyph = Glyphs.lava_blob;
        E.Sonic = Sonics.burble;
        E.Level = 10;
        E.Challenge = 194;
        E.Difficulty = 12;
        E.Frequency = 1;
        E.Defence = NewBlobDefence(18); // -1 from dex.
        E.SetTerrain(Materials.air, Materials.fire, Materials.lava);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 8, CON: 17, INT: 3, WIS: 8, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.acid, Elements.fire, Elements.sleep);
        E.AddAttack(AttackTypes.touch, Elements.fire, 2.d7()); // +2 from str.
        E.AddRetaliation(Chance.OneIn3, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.flame, Dice.One);
          R.Apply.HarmEntity(Elements.fire, 2.d6());
        });
        E.Conveyance.MajorResistance(Elements.fire);
        E.SetCorpse(Chance.Always);
      });

      quivering_blob = AddEntity(Kinds.blob, null, "quivering blob", E =>
      {
        E.Glyph = Glyphs.quivering_blob;
        E.Sonic = Sonics.burble;
        E.Level = 5;
        E.Challenge = 29;
        E.Difficulty = 6;
        E.Frequency = 3;
        E.Defence = NewBlobDefence(14); // -2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 6, CON: 18, INT: 1, WIS: 5, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.acid, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.touch, Elements.physical, 1.d7()); // +1 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      static_blob = AddEntity(Kinds.blob, null, "static blob", E =>
      {
        E.Glyph = Glyphs.static_blob;
        E.Sonic = Sonics.burble;
        E.Level = 12;
        E.Challenge = 258;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = NewBlobDefence(21); // -1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 8, CON: 16, INT: 3, WIS: 7, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.shock, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.touch, Elements.shock, 2.d11());// +2 from str.
        E.AddRetaliation(Chance.OneIn2, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.energy, Dice.One);
          R.Apply.HarmEntity(Elements.shock, 3.d5());
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.shock));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region centaur.
      plains_centaur = AddEntity(Kinds.centaur, null, "plains centaur", E =>
      {
        E.Glyph = Glyphs.plains_centaur;
        E.Level = 4;
        E.Challenge = 25;
        E.Difficulty = 6;
        E.Frequency = 3;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(65500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 14, INT: 9, WIS: 13, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.spear, Skills.light_armour);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.Always, 3.d3(), Items.javelin);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d2()); // +4 from str.
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d2(), A =>
        {
          A.Apply.Knockback();
          A.Apply.WhenChance(Chance.OneIn4, T => T.ApplyTransient(Properties.stunned, 1.d4() + 1));
        });
        E.SetCorpse(Chance.Always);
      });

      forest_centaur = AddEntity(Kinds.centaur, null, "forest centaur", E =>
      {
        E.Glyph = Glyphs.forest_centaur;
        E.Level = 10;
        E.Challenge = 160;
        E.Difficulty = 12;
        E.Frequency = 3;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(75500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 14, INT: 9, WIS: 13, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.spear, Skills.light_armour, Skills.medium_armour);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.Always, 3.d3(), Items.javelin);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d4()); // +4 from str.
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d2(), A =>
        {
          A.Apply.Knockback();
          A.Apply.WhenChance(Chance.OneIn3, T => T.ApplyTransient(Properties.stunned, 1.d4() + 2));
        });
        E.SetCorpse(Chance.Always);
      });

      mountain_centaur = AddEntity(Kinds.centaur, null, "mountain centaur", E =>
      {
        E.Glyph = Glyphs.mountain_centaur;
        E.Level = 18;
        E.Challenge = 520;
        E.Difficulty = 24;
        E.Frequency = 3;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(85500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 14, INT: 9, WIS: 13, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.spear, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.Always, 3.d3(), Items.javelin);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6()); // +4 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6()); // +4 from str.
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d2(), A =>
        {
          A.Apply.Knockback();
          A.Apply.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.stunned, 1.d4() + 4));
        });
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region demon.
      Asmodeus = AddUniqueEntity(Kinds.demon, null, "Asmodeus", E =>
      {
        E.Glyph = Glyphs.Asmodeus;
        E.Sonic = Sonics.chant;
        E.Level = 75;
        E.Challenge = 10164;
        E.Difficulty = 80;
        E.Frequency = 0;
        E.Defence = new Defence(D: 30, P: +0, S: +0, B: +0); // +6 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(44000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 24, DEX: 22, CON: 26, INT: 23, WIS: 25, CHA: 30);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.master, Skills.evocation, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.fire, Elements.poison, Elements.drain, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.ice_storm);
        E.Startup.AddGrimoire(Dice.One, Spells.cone_of_cold);
        E.Startup.AddGrimoire(Dice.One, Spells.fireball);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4());// +7 from str.
        E.AddAttack(AttackTypes.spell, Elements.cold, 3.d9());
        E.Conveyance.MajorProperty(Properties.rage);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      Baalzebub = AddUniqueEntity(Kinds.demon, null, "Baalzebub", E =>
      {
        E.Glyph = Glyphs.Baalzebub;
        E.Sonic = Sonics.chant;
        E.Level = 75;
        E.Challenge = 10889;
        E.Difficulty = 80;
        E.Frequency = 0;
        E.Defence = new Defence(D: 29, P: +0, S: +0, B: +0); // +7 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_3;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(28000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 24, CON: 26, INT: 24, WIS: 20, CHA: 22);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.drain, Elements.fire, Elements.poison, Elements.magical);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3(), K => // +6 from str.
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.psychic, 2.d4() + 4)
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.stunned, 2.d6());
        });
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(2.d3(), Kinds.insect.Entities.ToArray()); // 'Lord of the Flyers / Flies' .
        });
        E.Conveyance.ApplyTransient(Properties.hallucination, Dice.Fixed(+200));
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      Dispater = AddUniqueEntity(Kinds.demon, null, "Dispater", E =>
      {
        E.Glyph = Glyphs.Dispater;
        E.Level = 75;
        E.Challenge = 10951;
        E.Difficulty = 80;
        E.Frequency = 0;
        E.Defence = new Defence(D: 30, P: +0, S: +0, B: +0); // +6 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(19500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 19, DEX: 23, CON: 27, INT: 22, WIS: 22, CHA: 25);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.master, Skills.necromancy, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.life_regeneration, Properties.mana_regeneration, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.finger_of_death);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d8()); // +4 from str.
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      Geryon = AddUniqueEntity(Kinds.demon, null, "Geryon", E =>
      {
        E.Glyph = Glyphs.Geryon;
        E.Level = 75;
        E.Challenge = 10006;
        E.Difficulty = 80;
        E.Frequency = 0;
        E.Defence = new Defence(D: 29, P: +0, S: +0, B: +0); // +7 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S4_5;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1400000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 24, CON: 26, INT: 22, WIS: 21, CHA: 25);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.life_regeneration, Properties.mana_regeneration, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain, Elements.magical);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d14()); // +3 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d14());
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d5(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      babau = AddEntity(Kinds.demon, null, "babau", E =>
      {
        E.Glyph = Glyphs.babau;
        E.Sonic = Sonics.chant;
        E.Level = 9;
        E.Challenge = 239;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 18, CON: 18, INT: 13, WIS: 14, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.stealth, Properties.telepathy);
        E.Startup.SetResistance(Elements.drain, Elements.fire, Elements.poison, Elements.shock);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());// +4 from str.
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.magic, 2.d4() + 4);
          K.Apply.HarmEntity(Elements.physical, 1.d8());
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d8());
        E.AddRetaliation(Chance.OneIn3, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 3.d4());
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      balrog = AddEntity(Kinds.demon, null, "balrog", E =>
      {
        E.Glyph = Glyphs.balrog;
        E.Sonic = Sonics.chant;
        E.Level = 35;
        E.Challenge = 1236;
        E.Difficulty = 38;
        E.Frequency = 1;
        E.Defence = new Defence(D: 28, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(32000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 12, CON: 20, INT: 19, WIS: 16, CHA: 23);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.expert, Skills.heavy_blade, Skills.whip, Skills.dual_wielding);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.drain, Elements.fire, Elements.poison);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d8()); // +6 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.weapon, Elements.fire, 4.d4());
        E.AddAttack(AttackTypes.weapon, Elements.fire, 4.d4());
        E.AddAttack(AttackTypes.weapon, Elements.fire, 4.d4());
        E.AddRetaliation(Chance.OneIn2, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.flame, Dice.One);
          R.Apply.HarmEntity(Elements.fire, 10.d3());
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      barbed_devil = AddEntity(Kinds.demon, null, "barbed devil", E =>
      {
        E.Glyph = Glyphs.barbed_devil;
        E.Sonic = Sonics.chant;
        E.Level = 28;
        E.Challenge = 1073;
        E.Difficulty = 30;
        E.Frequency = 2;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +3 from dex = 24.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 17, CON: 18, INT: 12, WIS: 14, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4()); // +3 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.sting, Elements.physical, 4.d3());
        E.AddAttack(AttackTypes.sting, Elements.physical, 4.d3());
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      barlgura = AddEntity(Kinds.demon, null, "bar-lgura", E =>
      {
        E.Glyph = Glyphs.barlgura;
        E.Sonic = Sonics.chant;
        E.Level = 32;
        E.Challenge = 1303;
        E.Difficulty = 35;
        E.Frequency = 1;
        E.Defence = new Defence(D: 26, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(22000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 23, DEX: 15, CON: 23, INT: 12, WIS: 16, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d12());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d12()); // +6 from str.
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      bearded_devil = AddEntity(Kinds.demon, null, "bearded devil", E =>
      {
        E.Glyph = Glyphs.bearded_devil;
        E.Sonic = Sonics.chant;
        E.Level = 29;
        E.Challenge = 1088;
        E.Difficulty = 31;
        E.Frequency = 1;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // +2 from dex = 26.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 15, CON: 15, INT: 9, WIS: 11, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5()); // +4 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      bone_devil = AddEntity(Kinds.demon, null, "bone devil", E =>
      {
        E.Glyph = Glyphs.bone_devil;
        E.Sonic = Sonics.chant;
        E.Level = 29;
        E.Challenge = 1435;
        E.Difficulty = 33;
        E.Frequency = 2;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // +3 from dex = 27.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(19000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 16, CON: 18, INT: 13, WIS: 14, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4()); // +4 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.sting, Elements.physical, 2.d4(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      chasme = AddEntity(Kinds.demon, null, "chasme", E =>
      {
        E.Glyph = Glyphs.chasme;
        E.Sonic = Sonics.chant;
        E.Level = 22;
        E.Challenge = 959;
        E.Difficulty = 27;
        E.Frequency = 1;
        E.Defence = new Defence(D: 27, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 10, CON: 19, INT: 18, WIS: 12, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d6());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d6());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +3 from str.
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.gas, 2.d4() + 4);
          K.Apply.ApplyTransient(Properties.sleeping, 1.d6());
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      Cthulhu = AddUniqueEntity(Kinds.demon, null, "Cthulhu", E =>
      {
        E.Glyph = Glyphs.Cthulhu;
        E.Sonic = Sonics.chant;
        E.Level = 90;
        E.Challenge = 20837;
        E.Difficulty = 95;
        E.Frequency = 0;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0); // +13 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(11000000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 27, DEX: 27, CON: 28, INT: 24, WIS: 26, CHA: 27);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.acid, Elements.disintegrate, Elements.poison, Elements.sleep, Elements.magical, Elements.drain, Elements.petrify);
        E.AddAttack(AttackTypes.spell, Elements.physical, 1.d7());
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d9());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d10()); // +13 from str.
        E.AddAttack(AttackTypes.grapple, Elements.physical, 3.d7(), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.AddAttack(AttackTypes.tentacle, Elements.physical, Dice.Fixed(+2), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.UnlessTargetResistant(Elements.poison, A => A.DecreaseAbility(Attributes.intelligence, Dice.One)));
        });
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.psychic, 2.d4() + 4)
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.confusion, 3.d4());
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      Death = AddUniqueEntity(Kinds.demon, null, "Death", E =>
      {
        E.Glyph = Glyphs.Death;
        E.Level = 45;
        E.Challenge = 4311;
        E.Difficulty = 50;
        E.Frequency = 0;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +7 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 24, CON: 26, INT: 25, WIS: 25, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.master, Skills.polearm);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.life_regeneration, Properties.mana_regeneration, Properties.vitality, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.magical, Elements.drain, Elements.petrify, Elements.poison, Elements.sleep);
        E.Startup.Loot.AddKit([Modifier.Plus5], Items.scythe);
        E.AddAttack(AttackTypes.touch, Elements.physical, 4.d6(), K =>
        {
          K.SetCast().Strike(Strikes.death, Dice.One);
          K.Apply.Death(Elements.magical, Kinds.Living.ToArray(), Strikes.death, Cause: null);
          K.Apply.DrainLife(Elements.drain, 4.d6());
        });
        E.AddAttack(AttackTypes.touch, Elements.physical, 4.d6(), K =>
        {
          K.SetCast().Strike(Strikes.death, Dice.One);
          K.Apply.Death(Elements.magical, Kinds.Living.ToArray(), Strikes.death, Cause: null);
          K.Apply.DrainLife(Elements.drain, 4.d6());
        });
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, 2.d4() + 4);
          K.Apply.DrainLife(Elements.drain, 4.d6());
        });
        E.Conveyance.Death(Elements.magical, Kinds.Living.ToArray(), Strikes.death, Cause: null);
        E.Conveyance.MajorProperty(Properties.teleport_control);
        E.SetCorpse(Chance.Always);
      });

      Famine = AddUniqueEntity(Kinds.demon, null, "Famine", E =>
      {
        E.Glyph = Glyphs.Famine;
        E.Level = 45;
        E.Challenge = 4311;
        E.Difficulty = 50;
        E.Frequency = 0;
        E.Defence = new Defence(D: 28, P: +0, S: +0, B: +0); // +7 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 28, DEX: 24, CON: 26, INT: 16, WIS: 16, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.life_regeneration, Properties.mana_regeneration, Properties.vitality, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.drain, Elements.petrify, Elements.poison, Elements.sleep, Elements.magical);
        E.AddAttack(AttackTypes.touch, Elements.physical, 5.d5());
        E.AddAttack(AttackTypes.touch, Elements.physical, 5.d5());
        E.AddAttack(AttackTypes.touch, Elements.physical, 5.d5());
        E.AddAttack(AttackTypes.touch, Elements.physical, 5.d5()); // +9 from str.
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, 2.d4() + 4);
          K.Apply.LoseNutrition(80.d3());
        });
        E.Conveyance.Death(Elements.magical, Kinds.Living.ToArray(), Strikes.death, Cause: null);
        E.Conveyance.MajorProperty(Properties.teleport_control);
        E.SetCorpse(Chance.Always);
      });

      Pestilence = AddUniqueEntity(Kinds.demon, null, "Pestilence", E =>
      {
        E.Glyph = Glyphs.Pestilence;
        E.Level = 45;
        E.Challenge = 4311;
        E.Difficulty = 50;
        E.Frequency = 0;
        E.Defence = new Defence(D: 28, P: +0, S: +0, B: +0); // +7 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(11000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 28, DEX: 24, CON: 26, INT: 16, WIS: 16, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.life_regeneration, Properties.mana_regeneration, Properties.vitality, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.sleep, Elements.magical, Elements.drain, Elements.petrify);
        E.AddAttack(AttackTypes.touch, Elements.physical, 5.d5());
        E.AddAttack(AttackTypes.touch, Elements.physical, 5.d5());
        E.AddAttack(AttackTypes.touch, Elements.physical, 5.d5());
        E.AddAttack(AttackTypes.touch, Elements.physical, 5.d5());
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, 2.d4() + 4);
          K.Apply.ApplyTransient(Properties.sickness, 10.d4());
        });
        E.Conveyance.Death(Elements.magical, Kinds.Living.ToArray(), Strikes.death, Cause: null);
        E.Conveyance.MajorProperty(Properties.teleport_control);
        E.SetCorpse(Chance.Always);
      });

      // TODO: War?

      demon_orc = AddEntity(Kinds.demon, Races.orc, "demon orc", E =>
      {
        E.Glyph = Glyphs.demon_orc;
        E.Sonic = Sonics.grunt;
        E.Level = 19;
        E.Challenge = 606;
        E.Difficulty = 21;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(22000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 19, INT: 8, WIS: 8, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.specialist, Skills.medium_armour, Skills.heavy_blade);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.fire);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.scimitar);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6()); // +4 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6());
        E.Conveyance.MajorResistance(Elements.fire);
        E.SetCorpse(Chance.OneIn3);
      });

      erinys = AddEntity(Kinds.demon, null, "erinys", E =>
      {
        E.Glyph = Glyphs.erinys;
        E.Sonic = Sonics.chant;
        E.Level = 34;
        E.Challenge = 1305;
        E.Difficulty = 37;
        E.Frequency = 1;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // +6 from dex = 30.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 24, DEX: 23, CON: 24, INT: 21, WIS: 20, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d6());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d6());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d6(), K => // +7 from str.
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      hezrou = AddEntity(Kinds.demon, null, "hezrou", E =>
      {
        E.Glyph = Glyphs.hezrou;
        E.Sonic = Sonics.chant;
        E.Level = 28;
        E.Challenge = 1334;
        E.Difficulty = 31;
        E.Frequency = 2;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 24, DEX: 17, CON: 20, INT: 5, WIS: 12, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d8()); // +7 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4());
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      horned_devil = AddEntity(Kinds.demon, null, "horned devil", E =>
      {
        E.Glyph = Glyphs.horned_devil;
        E.Sonic = Sonics.chant;
        E.Level = 29;
        E.Challenge = 1114;
        E.Difficulty = 32;
        E.Frequency = 2;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // +3 from dex = 27.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 17, CON: 21, INT: 12, WIS: 16, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4()); // +6 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d3());
        E.AddAttack(AttackTypes.sting, Elements.physical, 2.d3());
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      ice_devil = AddEntity(Kinds.demon, null, "ice devil", E =>
      {
        E.Glyph = Glyphs.ice_devil;
        E.Sonic = Sonics.freeze;
        E.Level = 11;
        E.Challenge = 296;
        E.Difficulty = 14;
        E.Frequency = 2;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0); // +2 from dex = 24.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(35000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 14, CON: 18, INT: 18, WIS: 15, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision);
        E.Startup.SetResistance(Elements.cold, Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2()); // +5 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.sting, Elements.cold, 2.d3());
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      incubus = AddEntity(Kinds.demon, null, "incubus", E =>
      {
        E.Glyph = Glyphs.incubus;
        E.Sonic = Sonics.sigh;
        E.Level = 13;
        E.Challenge = 220;
        E.Difficulty = 15;
        E.Frequency = 2;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex = 20.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 17, CON: 13, INT: 15, WIS: 12, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3() + 1, A => // -1 from str.
        {
          A.Apply.SpecialDisarm();
          A.Apply.ApplyTransient(Properties.silence, 4.d6() + 4);
          A.Apply.DecreaseKarma(5.d10());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3() + 1, A =>
        {
          A.Apply.SpecialDisarm();
          A.Apply.ApplyTransient(Properties.silence, 4.d6() + 4);
          A.Apply.DecreaseKarma(10.d10());
          //A.Apply.WhenChance(Chance.OneIn100, Z => Z.Afflict(Codex.Afflictions.crabs)); // funny but doesn't make sense.
        });
        E.Conveyance.TradeoffAbility(Attributes.charisma, Attributes.constitution);
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.SetCorpse(Chance.OneIn4);
      });

      Demogorgon = AddUniqueEntity(Kinds.demon, null, "Demogorgon", E =>
      {
        E.Glyph = Glyphs.Demogorgon;
        E.Level = 50;
        E.Challenge = 5549;
        E.Difficulty = 55;
        E.Frequency = 0;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +12 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(300000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 24, CON: 28, INT: 25, WIS: 27, CHA: 27);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.master, Skills.necromancy, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.vitality, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.finger_of_death);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d5()); // +5 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d5());
        E.AddAttack(AttackTypes.sting, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 10.d4());
        });
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.boost, 2.d4() + 4)
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.stunned, 2.d4());
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });
      
      Juiblex = AddUniqueEntity(Kinds.demon, null, "Juiblex", E =>
      {
        E.Glyph = Glyphs.Juiblex;
        E.Sonic = Sonics.burble;
        E.Level = 50;
        E.Challenge = 5135;
        E.Difficulty = 55;
        E.Frequency = 0;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(66600);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 18, CON: 26, INT: 8, WIS: 14, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.acid, Elements.fire, Elements.poison, Elements.drain, Elements.petrify, Elements.magical);
        E.SetEngulf(Strikes.acid, A => A.HarmEntity(Elements.acid, 4.d6()));
        E.AddAttack(AttackTypes.engulf, Elements.physical, 4.d7(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.swallowed, 4.d2());
          K.Apply.ApplyTransient(Properties.sickness, 2.d40());
          K.Apply.AfflictEntity(Codex.Afflictions.poisoning);
        });
        E.AddAttack(AttackTypes.spit, Elements.acid, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.acid, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.acid, 6.d6());
          K.Apply.CreateDevice(Codex.Devices.noxious_pool, Destruction: false);
        });
        E.Conveyance.Macro(Acidic);
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.Conveyance.AfflictEntity(Codex.Afflictions.poisoning);
        E.SetCorpse(Chance.Always);
      });

      Orcus = AddUniqueEntity(Kinds.demon, null, "Orcus", E =>
      {
        E.Glyph = Glyphs.Orcus;
        E.Level = 50;
        E.Challenge = 5177;
        E.Difficulty = 55;
        E.Frequency = 0;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +5 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(600000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 24, DEX: 21, CON: 26, INT: 28, WIS: 28, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.master, Skills.enchantment, Skills.necromancy, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.finger_of_death);
        E.Startup.AddGrimoire(Dice.One, Spells.fear);
        E.Startup.AddGrimoire(Dice.One, Spells.confusion);
        E.Startup.AddGrimoire(Dice.One, Spells.slow);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d13()); // +6 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d4(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      Yeenoghu = AddUniqueEntity(Kinds.demon, null, "Yeenoghu", E =>
      {
        E.Glyph = Glyphs.Yeenoghu;
        E.Sonic = Sonics.chant;
        E.Level = 50;
        E.Challenge = 5850;
        E.Difficulty = 55;
        E.Frequency = 0;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(22000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 14, CON: 26, INT: 22, WIS: 21, CHA: 26);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d7());
        E.AddAttack(AttackTypes.weapon, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.ApplyTransient(Properties.confusion, 2.d8());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.ApplyTransient(Properties.paralysis, 1.d6());
        });
        E.AddAttack(AttackTypes.spell, Elements.magical, 2.d6());
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });
      
      living_wall = AddEntity(Kinds.demon, null, "living wall", E =>
      {
        E.Glyph = Glyphs.living_wall;
        E.Sonic = Sonics.slime;
        E.Level = 10;
        E.Challenge = 82;
        E.Difficulty = 12;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // -2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S0_5;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack; // TODO: make living walls into a resident?
        E.Weight = Weight.FromUnits(200000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(24, 2.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 26, DEX: 6, CON: 16, INT: 1, WIS: 1, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.AddReaction(Chance.Always, Elements.digging, R => R.CloneTargetEntity(Dice.One));
        E.SetGender(Genders.neuter);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.SetConcealment(Mimicry: true);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.blindness);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.grapple, Elements.physical, 1.d12()); // +8 from str.
        E.AddRetaliation(Chance.OneIn3, AttackTypes.splash, R =>
        {
          R.Apply.CreateVolatile(Codex.Volatiles.blood, Dice.Fixed(10));
        });
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Dice.One, Chance.Always, Items.huge_chunk_of_meat);
      });

      marilith = AddEntity(Kinds.demon, null, "marilith", E =>
      {
        E.Glyph = Glyphs.marilith;
        E.Sonic = Sonics.chant;
        E.Level = 28;
        E.Challenge = 1075;
        E.Difficulty = 35;
        E.Frequency = 1;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +5 from dex = 28.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(60000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 20, CON: 20, INT: 18, WIS: 16, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.master, Skills.heavy_blade, Skills.dual_wielding);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d5()); // +4 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d5());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4()); // +6 from str.
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      Huhetotl = AddUniqueEntity(Kinds.demon, null, "Huhetotl", E =>
      {
        E.Glyph = Glyphs.Huhetotl;
        E.Sonic = Sonics.chant;
        E.Level = 10;
        E.Challenge = 333;
        E.Difficulty = 15;
        E.Frequency = 0;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 16, CON: 16, INT: 14, WIS: 16, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain, Elements.petrify, Elements.magical);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4(), K => // +4 from str.
        {
          K.Apply.CreateVolatile(Volatiles.blaze, 1.d100() + 50);
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4(), K =>
        {
          K.Apply.CreateVolatile(Volatiles.blaze, 1.d100() + 50);
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      Maugneshaagar = AddUniqueEntity(Kinds.demon, null, "Maugneshaagar", E =>
      {
        E.Glyph = Glyphs.Maugneshaagar;
        E.Level = 10;
        E.Challenge = 333;
        E.Difficulty = 15;
        E.Frequency = 0;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(21000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 16, CON: 18, INT: 14, WIS: 16, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.flight, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain, Elements.magical);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4(), K => // +5 from str.
        {
          K.Apply.ApplyTransient(Properties.hallucination, 4.d4());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4(), K =>
        {
          K.Apply.ApplyTransient(Properties.hallucination, 4.d4());
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      Nalzok = AddUniqueEntity(Kinds.demon, null, "Nalzok", E =>
      {
        E.Glyph = Glyphs.Nalzok;
        E.Level = 10;
        E.Challenge = 333;
        E.Difficulty = 15;
        E.Frequency = 0;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 18, CON: 18, INT: 14, WIS: 16, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.master, Skills.necromancy);
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain, Elements.petrify, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.drain_life);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4(), K => // +4 from str.
        {
          K.Apply.PlaceCurse(Dice.One, Sanctities.Cursed);
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4(), K =>
        {
          K.Apply.PlaceCurse(Dice.One, Sanctities.Cursed);
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      nabassu = AddEntity(Kinds.demon, null, "nabassu", E =>
      {
        E.Glyph = Glyphs.nabassu;
        E.Sonic = Sonics.chant;
        E.Level = 20;
        E.Challenge = 723;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(23000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 18, CON: 15, INT: 15, WIS: 14, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.expert, Skills.necromancy);
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.Startup.AddGrimoire(Dice.One, Spells.drain_life);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d6()); // +2 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d6());
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 3.d4());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d5());
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      nalfeshnee = AddEntity(Kinds.demon, null, "nalfeshnee", E =>
      {
        E.Glyph = Glyphs.nalfeshnee;
        E.Sonic = Sonics.chant;
        E.Level = 31;
        E.Challenge = 1069;
        E.Difficulty = 35;
        E.Frequency = 1;
        E.Defence = new Defence(D: 25, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 10, CON: 22, INT: 19, WIS: 12, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.master, Skills.necromancy, Skills.conjuration);
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.Startup.AddGrimoire(Dice.One, Spells.drain_life);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.AddAttack(AttackTypes.claw, Elements.physical, 6.d4()); // +5 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 6.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d4());
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      pit_fiend = AddEntity(Kinds.demon, null, "pit fiend", E =>
      {
        E.Glyph = Glyphs.pit_fiend;
        E.Sonic = Sonics.chant;
        E.Level = 33;
        E.Challenge = 1421;
        E.Difficulty = 36;
        E.Frequency = 2;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +2 from dex = 25.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 26, DEX: 14, CON: 24, INT: 22, WIS: 18, CHA: 24);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d2()); // +8 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.grapple, Elements.physical, 1.d4(), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.AddAttack(AttackTypes.grapple, Elements.physical, 1.d4(), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.AddAttack(AttackTypes.grapple, Elements.physical, Dice.Zero, A =>
        {
          A.Apply.ApplyTransient(Properties.stunned, 2.d2());
        });
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      sandestin = AddEntity(Kinds.demon, null, "sandestin", E =>
      {
        E.Glyph = Glyphs.sandestin;
        E.Sonic = Sonics.chant;
        E.Level = 21;
        E.Challenge = 702;
        E.Difficulty = 23;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 15, CON: 15, INT: 14, WIS: 11, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.petrify);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6());
        E.Conveyance.PolymorphEntity();
        E.SetCorpse(Chance.OneIn4);
      });

      spined_devil = AddEntity(Kinds.demon, null, "spined devil", E =>
      {
        E.Glyph = Glyphs.spined_devil;
        E.Sonic = Sonics.chant;
        E.Level = 26;
        E.Challenge = 1244;
        E.Difficulty = 29;
        E.Frequency = 2;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0); // +2 from dex = 24.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 15, CON: 12, INT: 11, WIS: 14, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.sting, Elements.physical, 3.d4());
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      succubus = AddEntity(Kinds.demon, null, "succubus", E =>
      {
        E.Glyph = Glyphs.succubus;
        E.Sonic = Sonics.sigh;
        E.Level = 13;
        E.Challenge = 220;
        E.Difficulty = 15;
        E.Frequency = 2;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex = 20.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(13000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 17, CON: 13, INT: 15, WIS: 12, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3() + 1, A => // -1 from str.
        {
          A.Apply.SpecialDisarm();
          A.Apply.ApplyTransient(Properties.silence, 4.d6() + 4);
          A.Apply.DecreaseKarma(5.d10());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3() + 1, A =>
        {
          A.Apply.SpecialDisarm();
          A.Apply.ApplyTransient(Properties.silence, 4.d6() + 4);
          A.Apply.DecreaseKarma(10.d10());
        });
        E.Conveyance.TradeoffAbility(Attributes.charisma, Attributes.constitution);
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.SetCorpse(Chance.OneIn4);
      });

      vrock = AddEntity(Kinds.demon, null, "vrock", E =>
      {
        E.Glyph = Glyphs.vrock;
        E.Sonic = Sonics.squawk;
        E.Level = 25;
        E.Challenge = 950;
        E.Difficulty = 28;
        E.Frequency = 2;
        E.Defence = new Defence(D: 25, P: +0, S: +0, B: +0); // +2 from dex = 27.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 23, DEX: 15, CON: 18, INT: 8, WIS: 13, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4()); // +6 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d6());
        E.Conveyance.ApplyTransient(Properties.rage, 4.d6());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      water_demon = AddEntity(Kinds.demon, null, "water demon", E =>
      {
        E.Glyph = Glyphs.water_demon;
        E.Sonic = Sonics.water_splash;
        E.Level = 8;
        E.Challenge = 148;
        E.Difficulty = 11;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +5 from dex.
        E.SetTerrain(Materials.water, Materials.air);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(21000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 20, CON: 16, INT: 12, WIS: 11, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3());
        E.AddReaction(Chance.OneIn2, Elements.water, A => A.HealEntity(4.d4(), Modifier.Zero));
        E.SetCorpse(Chance.Never);
      });
      #endregion

      #region devourer.
      disenchanter = AddEntity(Kinds.devourer, null, "disenchanter", E =>
      {
        E.Glyph = Glyphs.disenchanter;
        E.Level = 12;
        E.Challenge = 253;
        E.Difficulty = 14;
        E.Frequency = 2;
        E.Defence = new Defence(D: 30, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(24000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 13, CON: 10, INT: 3, WIS: 10, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4(), K => // +2 from str.
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.DisenchantItem(Dice.One));
        });
        E.AddRetaliation(Chance.OneIn4, AttackTypes.touch, R =>
        {
          // TODO: can't use cast, because it may not target the correct asset?
          R.Apply.DisenchantItem(Dice.One);
        });
        E.Conveyance.LoseTalent(Property: null);
        E.SetCorpse(Chance.Always);
      });

      disintegrator = AddEntity(Kinds.devourer, null, "disintegrator", E =>
      {
        E.Glyph = Glyphs.disintegrator;
        E.Level = 18;
        E.Challenge = 634;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex = 20.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(25000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d4());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 15, CON: 10, INT: 3, WIS: 10, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.tunnelling, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.disintegrate);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d5(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.HarmEntity(Elements.disintegrate, Dice.Zero));
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d5(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.HarmEntity(Elements.disintegrate, Dice.Zero));
        });
        E.AddRetaliation(Chance.OneIn4, AttackTypes.touch, R =>
        {
          // TODO: can't use cast, because it may not target the correct asset?
          R.Apply.HarmEntity(Elements.disintegrate, Dice.Zero);
        });
        E.Conveyance.MajorResistance(Elements.disintegrate);
        E.SetCorpse(Chance.Always);
      });

      //rust monster was in MM, but disenchanter was not, so I am making it up based on Pathfinder stat block -G
      rust_monster = AddEntity(Kinds.devourer, null, "rust monster", E =>
      {
        E.Glyph = Glyphs.rust_monster;
        E.Level = 5;
        E.Challenge = 55;
        E.Difficulty = 8;
        E.Frequency = 2;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.metalivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 12, CON: 13, INT: 2, WIS: 13, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.DestroyEquippedItem(Dice.One, StockArray: null, SanctityArray: null, Materials.RustMetals.ToArray()));
        });
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.DestroyEquippedItem(Dice.One, StockArray: null, SanctityArray: null, Materials.RustMetals.ToArray()));
        });
        E.AddRetaliation(Chance.OneIn4, AttackTypes.touch, R =>
        {
          // TODO: can't use cast, because it may not target the correct asset?
          R.Apply.DestroyEquippedItem(Dice.One, null, null, Materials.RustMetals.ToArray());
        });
        E.Conveyance.MajorResistance(Elements.acid);
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region dog.
      Cerberus = AddUniqueEntity(Kinds.dog, null, "Cerberus", E =>
      {
        E.Glyph = Glyphs.Cerberus;
        E.Level = 45;
        E.Challenge = 4453;
        E.Difficulty = 50;
        E.Frequency = 0;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(80000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 16, CON: 18, INT: 8, WIS: 16, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.disintegrate, Elements.fire, Elements.poison, Elements.sleep, Elements.petrify, Elements.magical);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d12());
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d12());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d12()); // +5 from str.
        E.AddAttack(AttackTypes.breath, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.fire, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.fire, 3.d8());
        });
        E.Conveyance.MajorResistance(Elements.fire);
        E.SetCorpse(Chance.Always);
      });

      coyote = AddEntity(Kinds.dog, null, "coyote", E =>
      {
        E.Glyph = Glyphs.coyote;
        E.Sonic = Sonics.howl;
        E.Level = 1;
        E.Challenge = 2;
        E.Difficulty = 2;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1 from DEX = 13.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(3000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 9, DEX: 13, CON: 9, INT: 3, WIS: 2, CHA: 4);
        E.LimitForm.Set(STR: 15, DEX: 20, CON: 12, INT: 5, WIS: 5, CHA: 7);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4());
        E.SetCorpse(Chance.OneIn3);
      });

      death_dog = AddEntity(Kinds.dog, null, "death dog", E =>
      {
        E.Glyph = Glyphs.death_dog;
        E.Sonic = Sonics.woof;
        E.Level = 23;
        E.Challenge = 556;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex = 20.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(5000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 14, CON: 14, INT: 3, WIS: 13, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.beatitude);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +3 from str.
        E.AddAttack(AttackTypes.grapple, Elements.physical, 2.d8(), A => // +3 from str.
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.SetCorpse(Chance.OneIn3);
      });

      dingo = AddEntity(Kinds.dog, null, "dingo", E =>
      {
        E.Glyph = Glyphs.dingo;
        E.Sonic = Sonics.howl;
        E.Level = 6;
        E.Challenge = 40;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2 from DEX = 15.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 15, CON: 13, INT: 4, WIS: 2, CHA: 7);
        E.LimitForm.Set(STR: 17, DEX: 20, CON: 15, INT: 5, WIS: 5, CHA: 10);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4());
        E.SetCorpse(Chance.OneIn3);
      });

      dingo_puppy = AddEntity(Kinds.dog, null, "dingo puppy", E =>
      {
        E.Glyph = Glyphs.dingo_puppy;
        E.Sonic = Sonics.howl;
        E.Level = 2;
        E.Challenge = 8;
        E.Difficulty = 3;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // -1 from DEX = 14.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 5, DEX: 9, CON: 6, INT: 3, WIS: 2, CHA: 8);
        E.LimitForm.Set(STR: 6, DEX: 12, CON: 7, INT: 4, WIS: 3, CHA: 10);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6() + 3); // -3 from STR.
        E.SetCorpse(Chance.OneIn3);
      });
      //scaled from 3rd Ed.
      //Using Mastiff for large dog
      dog = AddDomesticEntity(Kinds.dog, null, "dog", E =>
      {
        E.Glyph = Glyphs.dog;
        E.Sonic = Sonics.woof;
        E.Level = 4;
        E.Challenge = 20;
        E.Difficulty = 5;
        E.Frequency = 7;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2 from dex = 15.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 14, CON: 10, INT: 3, WIS: 12, CHA: 8);
        E.LimitForm.Set(STR: 15, DEX: 20, CON: 15, INT: 5, WIS: 15, CHA: 10);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.beatitude);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6());
        E.SetCorpse(Chance.Always);
      });

      fox = AddEntity(Kinds.dog, null, "fox", E =>
      {
        E.Glyph = Glyphs.fox;
        E.Sonic = Sonics.woof;
        E.Level = 0;
        E.Challenge = 4;
        E.Difficulty = 1;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(3000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d4());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 10, DEX: 15, CON: 11, INT: 3, WIS: 12, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3());
        E.SetCorpse(Chance.OneIn3);
      });

      hell_hound = AddEntity(Kinds.dog, null, "hell hound", E =>
      {
        E.Glyph = Glyphs.hell_hound;
        E.Sonic = Sonics.woof;
        E.Level = 20;
        E.Challenge = 604;
        E.Difficulty = 22;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetTerrain(Materials.air, Materials.fire);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 16, CON: 17, INT: 6, WIS: 14, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.beatitude);
        E.Startup.SetResistance(Elements.fire);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6()); // +3 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6());
        E.AddAttack(AttackTypes.breath, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.fire, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.fire, 5.d6());
        });
        E.Conveyance.MajorResistance(Elements.fire);
        E.SetCorpse(Chance.OneIn3);
      });

      hell_hound_pup = AddEntity(Kinds.dog, null, "hell hound pup", E =>
      {
        E.Glyph = Glyphs.hell_hound_pup;
        E.Sonic = Sonics.woof;
        E.Level = 12;
        E.Challenge = 240;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetTerrain(Materials.air, Materials.fire);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 14, CON: 15, INT: 5, WIS: 12, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.beatitude);
        E.Startup.SetResistance(Elements.fire);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d6()); // +2 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.breath, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.fire, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.fire, 3.d6());
        });
        E.Conveyance.MajorResistance(Elements.fire);
        E.SetCorpse(Chance.OneIn3);
      });

      jackal = AddEntity(Kinds.dog, null, "jackal", E =>
      {
        E.Glyph = Glyphs.jackal;
        E.Sonic = Sonics.howl;
        E.Level = 0;
        E.Challenge = 1;
        E.Difficulty = 1;
        E.Frequency = 4;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +2 from dex = 13.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(3000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d4());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 8, DEX: 15, CON: 11, INT: 3, WIS: 12, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3()); // -1 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      large_dingo = AddEntity(Kinds.dog, null, "large dingo", E =>
      {
        E.Glyph = Glyphs.large_dingo;
        E.Sonic = Sonics.howl;
        E.Level = 9;
        E.Challenge = 85;
        E.Difficulty = 10;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 17, CON: 14, INT: 6, WIS: 14, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6()); // +1 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6());
        E.SetCorpse(Chance.OneIn3);
      });
      // Now using Mastiff for here
      large_dog = AddDomesticEntity(Kinds.dog, null, "large dog", E =>
      {
        E.Glyph = Glyphs.large_dog;
        E.Sonic = Sonics.woof;
        E.Level = 6;
        E.Challenge = 40;
        E.Difficulty = 7;
        E.Frequency = 7;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +2 from DEX = 16.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 14, CON: 12, INT: 3, WIS: 12, CHA: 7);
        E.LimitForm.Set(STR: 20, DEX: 20, CON: 15, INT: 5, WIS: 15, CHA: 10);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.beatitude, Properties.searching);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +3 from STR.
        E.SetCorpse(Chance.Always);
      });

      little_dog = AddDomesticEntity(Kinds.dog, null, "little dog", E =>
      {
        E.Glyph = Glyphs.little_dog;
        E.Sonic = Sonics.woof;
        E.Level = 2;
        E.Challenge = 8;
        E.Difficulty = 3;
        E.Frequency = 7;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 11, CON: 9, INT: 3, WIS: 9, CHA: 5);
        E.LimitForm.Set(STR: 10, DEX: 15, CON: 12, INT: 5, WIS: 15, CHA: 12);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.beatitude);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6() + 1); // -1 from STR.
        E.SetCorpse(Chance.Always);
      });

      mist_wolf = AddEntity(Kinds.dog, null, "mist wolf", E =>
      {
        E.Glyph = Glyphs.mist_wolf;
        E.Sonic = Sonics.howl;
        E.Level = 30;
        E.Challenge = 1320;
        E.Difficulty = 32;
        E.Frequency = 1;
        E.Defence = new Defence(D: 28, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(8500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 15, CON: 14, INT: 3, WIS: 12, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.cold);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.cold, 2.d8(), K => // -2 from str.
        {
          K.Apply.ApplyTransient(Properties.slowness, 3.d3());
        });
        E.AddAttack(AttackTypes.bite, Elements.cold, 2.d8(), K => // -2 from str.
        {
          K.Apply.ApplyTransient(Properties.slowness, 3.d3());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10()); // +1 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10());
        E.SetCorpse(Chance.OneIn3);
      });

      pit_bull = AddDomesticEntity(Kinds.dog, null, "pit bull", E =>
      {
        E.Glyph = Glyphs.pit_bull;
        E.Sonic = Sonics.woof;
        E.Level = 11;
        E.Challenge = 175;
        E.Difficulty = 12;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(8000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 16, CON: 17, INT: 4, WIS: 13, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.beatitude);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d13()); // +3 from str.
        E.SetCorpse(Chance.Always);
      });

      rabid_wolf = AddEntity(Kinds.dog, null, "rabid wolf", E =>
      {
        E.Glyph = Glyphs.rabid_wolf;
        E.Sonic = Sonics.howl;
        E.Level = 17;
        E.Challenge = 405;
        E.Difficulty = 17;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +3 from DEX = 18.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 17, CON: 8, INT: 2, WIS: 5, CHA: 4);
        E.LimitForm.Set(STR: 20, DEX: 20, CON: 10, INT: 4, WIS: 10, CHA: 5);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.cannibalism);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d8(), K => // +2 from STR.
        {
          K.Apply.WhenChance(Chance.OneIn2, T => T.AfflictEntity(Codex.Afflictions.rabies));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d8(), K => // +2 from STR.
        {
          K.Apply.WhenChance(Chance.OneIn2, T => T.AfflictEntity(Codex.Afflictions.rabies));
        });
        E.SetCorpse(Chance.OneIn3);
        E.Conveyance.AfflictEntity(Codex.Afflictions.rabies);
      });
      //Modeled after 5ed shadow hound
      shadow_wolf = AddEntity(Kinds.dog, null, "shadow wolf", E =>
      {
        E.Glyph = Glyphs.shadow_wolf;
        E.Sonic = Sonics.howl;
        E.Level = 25;
        E.Challenge = 965;
        E.Difficulty = 27;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +2 from DEX = 23.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(5500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 15, CON: 13, INT: 3, WIS: 12, CHA: 6);
        E.LimitForm.Set(STR: 15, DEX: 20, CON: 15, INT: 5, WIS: 15, CHA: 10);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.invisibility);
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d4()); // +1 from STR.
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d4());
        E.SetCorpse(Chance.OneIn3);
      });

      warg = AddEntity(Kinds.dog, null, "warg", E =>
      {
        E.Glyph = Glyphs.warg;
        E.Sonic = Sonics.howl;
        E.Level = 9;
        E.Challenge = 78;
        E.Difficulty = 10;
        E.Frequency = 3;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +1 from dex = 17.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 13, CON: 13, INT: 7, WIS: 11, CHA: 8);
        E.LimitForm.Set(STR: 20, DEX: 15, CON: 15, INT: 10, WIS: 15, CHA: 10);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +3 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      winter_wolf = AddEntity(Kinds.dog, null, "winter wolf", E =>
      {
        E.Glyph = Glyphs.winter_wolf;
        E.Sonic = Sonics.howl;
        E.Level = 17;
        E.Challenge = 426;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +2 from dex = 23.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 15, CON: 12, INT: 3, WIS: 12, CHA: 6);
        E.LimitForm.Set(STR: 15, DEX: 20, CON: 15, INT: 5, WIS: 15, CHA: 10);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.cold);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6()); // +1 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6());
        E.AddAttack(AttackTypes.breath, Elements.cold, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.cold, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.cold, 6.d6());
        });
        E.Conveyance.MajorResistance(Elements.cold);
        E.SetCorpse(Chance.Always);
      });

      winter_wolf_cub = AddEntity(Kinds.dog, null, "winter wolf cub", E =>
      {
        E.Glyph = Glyphs.winter_wolf_cub;
        E.Sonic = Sonics.howl;
        E.Level = 10;
        E.Challenge = 185;
        E.Difficulty = 12;
        E.Frequency = 2;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // + 1 from dex = 15.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 12, CON: 10, INT: 3, WIS: 10, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.cold);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.breath, Elements.cold, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.cold, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.cold, 3.d6());
        });
        E.Conveyance.MajorResistance(Elements.cold);
        E.SetCorpse(Chance.OneIn3);
      });

      wolf = AddEntity(Kinds.dog, null, "wolf", E =>
      {
        E.Glyph = Glyphs.wolf;
        E.Sonic = Sonics.howl;
        E.Level = 7;
        E.Challenge = 54;
        E.Difficulty = 8;
        E.Frequency = 3;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +2 from dex = 16.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 15, CON: 12, INT: 3, WIS: 12, CHA: 6);
        E.LimitForm.Set(STR: 15, DEX: 20, CON: 15, INT: 5, WIS: 15, CHA: 10);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d3()); // +1 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      wolverine = AddEntity(Kinds.dog, null, "wolverine", E =>
      {
        E.Glyph = Glyphs.wolverine;
        E.Sonic = Sonics.howl;
        E.Level = 13;
        E.Challenge = 211;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +1 from DEX = 16.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(8500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 12, CON: 16, INT: 4, WIS: 9, CHA: 7);
        E.LimitForm.Set(STR: 15, DEX: 15, CON: 20, INT: 6, WIS: 11, CHA: 8);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region dragon.
      Defence NewDragonDefence(int Defence) => new Defence(Defence, P: +1, S: +0, B: +0);

      var DragonDiet = Diets.carnivore;
      var DragonStrategy = Strategy.Attack;

      var BabyDragonSize = Size.Medium;
      var BabyDragonWeight = Weight.FromUnits(50000);
      var BabyDragonSpeed = Speed.S5_0;
      var BabyDragonSonic = Sonics.squall;
      var BabyDragonLevel = 4;
      var BabyDragonDefence = NewDragonDefence(18);
      var BabyDragonFrequency = 2;
      var BabyDragonChallenge = 22;
      var BabyDragonDifficulty = 5;
      var BabyDragonLifeDice = 1.d8();
      var BabyDragonManaDice = 1.d4();

      var YoungDragonSize = Size.Large;
      var YoungDragonWeight = Weight.FromUnits(100000);
      var YoungDragonSpeed = Speed.S5_0;
      var YoungDragonSonic = Sonics.squall;
      var YoungDragonLifeBase = 36;
      var YoungDragonLifeDice = 1.d4();
      var YoungDragonManaBase = 18;
      var YoungDragonManaDice = 1.d2();

      var AdultDragonSize = Size.Huge;
      var AdultDragonWeight = Weight.FromUnits(200000);
      var AdultDragonSpeed = Speed.S5_0;
      var AdultDragonSonic = Sonics.roar;
      var AdultDragonLifeBase = 72;
      var AdultDragonLifeDice = 1.d4();
      var AdultDragonManaBase = 36;
      var AdultDragonManaDice = 1.d2();
      var AdultDragonDropScalesChance = Chance.OneIn3;

      var AncientDragonSpeed = Speed.S5_0;
      var AncientDragonSize = Size.Gargantuan;
      var AncientDragonWeight = Weight.FromUnits(300000);
      var AncientDragonSonic = Sonics.roar;
      var AncientDragonLifeBase = 144;
      var AncientDragonLifeDice = 1.d4();
      var AncientDragonManaBase = 72;
      var AncientDragonManaDice = 1.d2();
      var AncientDragonDropScalesChance = Chance.OneIn2;

      // baby.
      baby_black_dragon = AddEntity(Kinds.dragon, null, "baby black dragon", E =>
      {
        E.Glyph = Glyphs.baby_black_dragon;
        E.Sonic = BabyDragonSonic;
        E.Level = BabyDragonLevel;
        E.Challenge = BabyDragonChallenge + 2;
        E.Difficulty = BabyDragonDifficulty + 1;
        E.Frequency = BabyDragonFrequency;
        E.Defence = BabyDragonDefence; // +2 from Dex.
        E.SetDiet(DragonDiet);
        E.Speed = BabyDragonSpeed;
        E.Size = BabyDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = BabyDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(BabyDragonLifeDice);
        E.ManaAdvancement.Set(BabyDragonManaDice);
        E.DefaultForm.Set(STR: 15, DEX: 14, CON: 13, INT: 10, WIS: 11, CHA: 13);
        E.LimitForm.Set(STR: 20, DEX: 20, CON: 15, INT: 15, WIS: 15, CHA: 15);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.acid);
        E.Conveyance.MinorResistance(Elements.acid);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      baby_blue_dragon = AddEntity(Kinds.dragon, null, "baby blue dragon", E =>
      {
        E.Glyph = Glyphs.baby_blue_dragon;
        E.Sonic = BabyDragonSonic;
        E.Level = BabyDragonLevel;
        E.Challenge = BabyDragonChallenge;
        E.Difficulty = BabyDragonDifficulty;
        E.Frequency = BabyDragonFrequency;
        E.Defence = BabyDragonDefence;
        E.SetDiet(DragonDiet);
        E.Speed = BabyDragonSpeed;
        E.Size = BabyDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = BabyDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(BabyDragonLifeDice);
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 10, CON: 15, INT: 12, WIS: 11, CHA: 15);
        E.LimitForm.Set(STR: 20, DEX: 15, CON: 20, INT: 15, WIS: 15, CHA: 20);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.shock);
        E.Conveyance.MinorResistance(Elements.shock);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +3 from str.
        E.SetCorpse(Chance.Always);
      });

      baby_deep_dragon = AddEntity(Kinds.dragon, null, "baby deep dragon", E =>
      {
        E.Glyph = Glyphs.baby_deep_dragon;
        E.Sonic = BabyDragonSonic;
        E.Level = BabyDragonLevel;
        E.Challenge = BabyDragonChallenge;
        E.Difficulty = BabyDragonDifficulty;
        E.Frequency = BabyDragonFrequency;
        E.Defence = BabyDragonDefence;
        E.SetDiet(DragonDiet);
        E.Speed = BabyDragonSpeed;
        E.Size = BabyDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = BabyDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(BabyDragonLifeDice);
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 10, CON: 15, INT: 13, WIS: 11, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.drain, Elements.poison);
        E.Conveyance.MinorResistance(Elements.drain);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d9(), K => // +2 from str.
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.SetCorpse(Chance.Always);
      });

      baby_gold_dragon = AddEntity(Kinds.dragon, null, "baby gold dragon", E =>
      {
        E.Glyph = Glyphs.baby_gold_dragon;
        E.Sonic = BabyDragonSonic;
        E.Level = BabyDragonLevel;
        E.Challenge = BabyDragonChallenge + 2;
        E.Difficulty = BabyDragonDifficulty + 1;
        E.Frequency = BabyDragonFrequency;
        E.IsGuardian = true; // neutral/friendly dragon.
        E.Defence = BabyDragonDefence;
        E.SetDiet(DragonDiet);
        E.Speed = BabyDragonSpeed;
        E.Size = BabyDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = BabyDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(BabyDragonLifeDice);
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 10, CON: 17, INT: 12, WIS: 11, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.magical, Elements.petrify);
        E.Conveyance.MinorResistance(Elements.petrify);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d8()); // +4 from str.
        E.SetCorpse(Chance.Always);
      });

      baby_green_dragon = AddEntity(Kinds.dragon, null, "baby green dragon", E =>
      {
        E.Glyph = Glyphs.baby_green_dragon;
        E.Sonic = BabyDragonSonic;
        E.Level = BabyDragonLevel;
        E.Challenge = BabyDragonChallenge + 2;
        E.Difficulty = BabyDragonDifficulty + 1;
        E.Frequency = BabyDragonFrequency;
        E.Defence = BabyDragonDefence; // +1 from Dex.
        E.SetDiet(DragonDiet);
        E.Speed = BabyDragonSpeed;
        E.Size = BabyDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = BabyDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(BabyDragonLifeDice);
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 12, CON: 13, INT: 14, WIS: 11, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +2 from str.
        E.Conveyance.MinorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      baby_orange_dragon = AddEntity(Kinds.dragon, null, "baby orange dragon", E =>
      {
        E.Glyph = Glyphs.baby_orange_dragon;
        E.Sonic = BabyDragonSonic;
        E.Level = BabyDragonLevel;
        E.Challenge = BabyDragonChallenge;
        E.Difficulty = BabyDragonDifficulty;
        E.Frequency = BabyDragonFrequency;
        E.Defence = BabyDragonDefence;
        E.SetDiet(DragonDiet);
        E.Speed = BabyDragonSpeed;
        E.Size = BabyDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = BabyDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(BabyDragonLifeDice);
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 10, CON: 15, INT: 12, WIS: 11, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.sleep);
        E.Conveyance.MinorResistance(Elements.sleep);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      baby_red_dragon = AddEntity(Kinds.dragon, null, "baby red dragon", E =>
      {
        E.Glyph = Glyphs.baby_red_dragon;
        E.Sonic = BabyDragonSonic;
        E.Level = BabyDragonLevel;
        E.Challenge = BabyDragonChallenge;
        E.Difficulty = BabyDragonDifficulty;
        E.Frequency = BabyDragonFrequency;
        E.Defence = BabyDragonDefence;
        E.SetDiet(DragonDiet);
        E.Speed = BabyDragonSpeed;
        E.Size = BabyDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = BabyDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(BabyDragonLifeDice);
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 19, DEX: 10, CON: 17, INT: 12, WIS: 11, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.fire);
        E.Conveyance.MinorResistance(Elements.fire);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +4 from str.
        E.SetCorpse(Chance.Always);
      });

      baby_shimmering_dragon = AddEntity(Kinds.dragon, null, "baby shimmering dragon", E =>
      {
        E.Glyph = Glyphs.baby_shimmering_dragon;
        E.Sonic = BabyDragonSonic;
        E.Level = BabyDragonLevel;
        E.Challenge = BabyDragonChallenge + 2;
        E.Difficulty = BabyDragonDifficulty + 1;
        E.Frequency = BabyDragonFrequency;
        E.Defence = BabyDragonDefence; // +1 from dex.
        E.SetDiet(DragonDiet);
        E.Speed = BabyDragonSpeed;
        E.Size = BabyDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = BabyDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(BabyDragonLifeDice);
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 13, CON: 14, INT: 12, WIS: 11, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.magical);
        //E.Conveyance.MinorResistance(Elements.Magical);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      baby_silver_dragon = AddEntity(Kinds.dragon, null, "baby silver dragon", E =>
      {
        E.Glyph = Glyphs.baby_silver_dragon;
        E.Sonic = BabyDragonSonic;
        E.Level = BabyDragonLevel;
        E.Challenge = BabyDragonChallenge + 2;
        E.Difficulty = BabyDragonDifficulty + 1;
        E.Frequency = BabyDragonFrequency;
        E.IsGuardian = true; // neutral/friendly dragon.
        E.Defence = BabyDragonDefence;
        E.SetDiet(DragonDiet);
        E.Speed = BabyDragonSpeed;
        E.Size = BabyDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = BabyDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(BabyDragonLifeDice);
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 19, DEX: 10, CON: 17, INT: 12, WIS: 11, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.sleep);
        E.Conveyance.MinorResistance(Elements.sleep);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +4 from str.
        E.SetCorpse(Chance.Always);
      });

      baby_white_dragon = AddEntity(Kinds.dragon, null, "baby white dragon", E =>
      {
        E.Glyph = Glyphs.baby_white_dragon;
        E.Sonic = BabyDragonSonic;
        E.Level = BabyDragonLevel;
        E.Challenge = BabyDragonChallenge;
        E.Difficulty = BabyDragonDifficulty;
        E.Frequency = BabyDragonFrequency;
        E.Defence = BabyDragonDefence;
        E.SetDiet(DragonDiet);
        E.Speed = BabyDragonSpeed;
        E.Size = BabyDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = BabyDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(BabyDragonLifeDice);
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 10, CON: 14, INT: 5, WIS: 10, CHA: 11); // D&D lore - white dragons are stupid and evil.
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.cold);
        E.Conveyance.MinorResistance(Elements.cold);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      baby_yellow_dragon = AddEntity(Kinds.dragon, null, "baby yellow dragon", E =>
      {
        E.Glyph = Glyphs.baby_yellow_dragon;
        E.Sonic = BabyDragonSonic;
        E.Level = BabyDragonLevel;
        E.Challenge = BabyDragonChallenge;
        E.Difficulty = BabyDragonDifficulty;
        E.Frequency = BabyDragonFrequency;
        E.Defence = BabyDragonDefence;
        E.SetDiet(DragonDiet);
        E.Speed = BabyDragonSpeed;
        E.Size = BabyDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = BabyDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(BabyDragonLifeDice);
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 10, CON: 14, INT: 14, WIS: 12, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.disintegrate, Elements.petrify);
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.MinorResistance(Elements.petrify), F => F.MinorResistance(Elements.disintegrate));
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d6());
        E.SetCorpse(Chance.Always);
      });

      // young.
      young_black_dragon = AddEntity(Kinds.dragon, null, "young black dragon", E =>
      {
        E.Glyph = Glyphs.young_black_dragon;
        E.Sonic = YoungDragonSonic;
        E.Level = 12;
        E.Challenge = 294;
        E.Difficulty = 15;
        E.Frequency = 2;
        E.Defence = NewDragonDefence(20); // +3 from Dex.
        E.SetDiet(DragonDiet);
        E.Speed = YoungDragonSpeed;
        E.Size = YoungDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = YoungDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(YoungDragonLifeBase, YoungDragonLifeDice);
        E.ManaAdvancement.Set(YoungDragonManaBase, YoungDragonManaDice);
        E.DefaultForm.Set(STR: 17, DEX: 16, CON: 15, INT: 12, WIS: 13, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.acid);
        E.Conveyance.MinorResistance(Elements.acid);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +3 from str.
        E.AddAttack(AttackTypes.breath, Elements.acid, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.acid, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.acid, 3.d10());
        });
        E.SetCorpse(Chance.Always);
      });

      young_blue_dragon = AddEntity(Kinds.dragon, null, "young blue dragon", E =>
      {
        E.Glyph = Glyphs.young_blue_dragon;
        E.Sonic = YoungDragonSonic;
        E.Level = 12;
        E.Challenge = 298;
        E.Difficulty = 15;
        E.Frequency = 2;
        E.Defence = NewDragonDefence(20);
        E.SetDiet(DragonDiet);
        E.Speed = YoungDragonSpeed;
        E.Size = YoungDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = YoungDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(YoungDragonLifeBase, YoungDragonLifeDice);
        E.ManaAdvancement.Set(YoungDragonManaBase, YoungDragonManaDice);
        E.DefaultForm.Set(STR: 19, DEX: 12, CON: 17, INT: 14, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.shock);
        E.Conveyance.MinorResistance(Elements.shock);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +3 from str.
        E.AddAttack(AttackTypes.breath, Elements.shock, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.lightning, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.shock, 3.d6());
        });
        E.SetCorpse(Chance.Always);
      });

      young_deep_dragon = AddEntity(Kinds.dragon, null, "young deep dragon", E =>
      {
        E.Glyph = Glyphs.young_deep_dragon;
        E.Sonic = YoungDragonSonic;
        E.Level = 14;
        E.Challenge = 344;
        E.Difficulty = 17;
        E.Frequency = 2;
        E.Defence = NewDragonDefence(22);
        E.SetDiet(DragonDiet);
        E.Speed = YoungDragonSpeed;
        E.Size = YoungDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = YoungDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(YoungDragonLifeBase, YoungDragonLifeDice);
        E.ManaAdvancement.Set(YoungDragonManaBase, YoungDragonManaDice);
        E.DefaultForm.Set(STR: 17, DEX: 12, CON: 17, INT: 15, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.drain, Elements.poison);
        E.Conveyance.MinorResistance(Elements.drain);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d9(), K => // +3 from str.
        {
          K.Apply.WhenChance(Chance.OneIn6, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.breath, Elements.poison, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.poison, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.poison, 3.d10());
          K.Apply.WhenChance(Chance.OneIn6, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.SetCorpse(Chance.Always);
      });

      young_gold_dragon = AddEntity(Kinds.dragon, null, "young gold dragon", E =>
      {
        E.Glyph = Glyphs.young_gold_dragon;
        E.Sonic = YoungDragonSonic;
        E.Level = 15;
        E.Challenge = 336;
        E.Difficulty = 17;
        E.Frequency = 2;
        E.IsGuardian = true; // neutral/friendly dragon.
        E.Defence = NewDragonDefence(21);
        E.SetDiet(DragonDiet);
        E.Speed = YoungDragonSpeed;
        E.Size = YoungDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = YoungDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(YoungDragonLifeBase, YoungDragonLifeDice);
        E.ManaAdvancement.Set(YoungDragonManaBase, YoungDragonManaDice);
        E.DefaultForm.Set(STR: 20, DEX: 12, CON: 19, INT: 14, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.magical, Elements.petrify);
        E.Conveyance.MinorResistance(Elements.petrify);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d8()); // +4 from str.
        E.AddAttack(AttackTypes.breath, Elements.petrify, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.poison, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.petrify, 4.d6());
        });
        E.SetCorpse(Chance.Always);
      });

      young_green_dragon = AddEntity(Kinds.dragon, null, "young green dragon", E =>
      {
        E.Glyph = Glyphs.young_green_dragon;
        E.Sonic = YoungDragonSonic;
        E.Level = 12;
        E.Challenge = 285;
        E.Difficulty = 17;
        E.Frequency = 2;
        E.Defence = NewDragonDefence(21);
        E.SetDiet(DragonDiet);
        E.Speed = YoungDragonSpeed;
        E.Size = YoungDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = YoungDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(YoungDragonLifeBase, YoungDragonLifeDice);
        E.ManaAdvancement.Set(YoungDragonManaBase, YoungDragonManaDice);
        E.DefaultForm.Set(STR: 17, DEX: 14, CON: 15, INT: 16, WIS: 13, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +2 from str.
        E.AddAttack(AttackTypes.breath, Elements.poison, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.poison, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.poison, 4.d6());
          K.Apply.WhenChance(Chance.OneIn6, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.MinorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      young_orange_dragon = AddEntity(Kinds.dragon, null, "young orange dragon", E =>
      {
        E.Glyph = Glyphs.young_orange_dragon;
        E.Sonic = YoungDragonSonic;
        E.Level = 10;
        E.Challenge = 187;
        E.Difficulty = 11;
        E.Frequency = 2;
        E.Defence = NewDragonDefence(20);
        E.SetDiet(DragonDiet);
        E.Speed = YoungDragonSpeed;
        E.Size = YoungDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = YoungDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(YoungDragonLifeBase, YoungDragonLifeDice);
        E.ManaAdvancement.Set(YoungDragonManaBase, YoungDragonManaDice);
        E.DefaultForm.Set(STR: 17, DEX: 12, CON: 17, INT: 14, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.sleep);
        E.Conveyance.MinorResistance(Elements.sleep);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10()); // +3 from str.
        E.AddAttack(AttackTypes.breath, Elements.sleep, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.sleep, 1.d4() + 4);
          K.Apply.ApplyTransient(Properties.sleeping, 3.d15());
        });
        E.SetCorpse(Chance.Always);
      });

      young_red_dragon = AddEntity(Kinds.dragon, null, "young red dragon", E =>
      {
        E.Glyph = Glyphs.young_red_dragon;
        E.Sonic = YoungDragonSonic;
        E.Level = 12;
        E.Challenge = 298;
        E.Difficulty = 13;
        E.Frequency = 2;
        E.Defence = NewDragonDefence(20);
        E.SetDiet(DragonDiet);
        E.Speed = YoungDragonSpeed;
        E.Size = YoungDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = YoungDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(YoungDragonLifeBase, YoungDragonLifeDice);
        E.ManaAdvancement.Set(YoungDragonManaBase, YoungDragonManaDice);
        E.DefaultForm.Set(STR: 21, DEX: 12, CON: 19, INT: 14, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.fire);
        E.Conveyance.MinorResistance(Elements.fire);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +4 from str.
        E.AddAttack(AttackTypes.breath, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.fire, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.fire, 4.d6());
        });
        E.SetCorpse(Chance.Always);
      });

      young_shimmering_dragon = AddEntity(Kinds.dragon, null, "young shimmering dragon", E =>
      {
        E.Glyph = Glyphs.young_shimmering_dragon;
        E.Sonic = YoungDragonSonic;
        E.Level = 17;
        E.Challenge = 409;
        E.Difficulty = 19;
        E.Frequency = 2;
        E.Defence = NewDragonDefence(23); // +2 from dex.
        E.SetDiet(DragonDiet);
        E.Speed = YoungDragonSpeed;
        E.Size = YoungDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = YoungDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(YoungDragonLifeBase, YoungDragonLifeDice);
        E.ManaAdvancement.Set(YoungDragonManaBase, YoungDragonManaDice);
        E.DefaultForm.Set(STR: 17, DEX: 15, CON: 16, INT: 14, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.magical);
        //E.Conveyance.MinorResistance(Elements.Magical);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10()); // +3 from str.
        E.AddAttack(AttackTypes.breath, Elements.magical, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.magic_missile, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.magical, 4.d6());
        });
        E.SetCorpse(Chance.Always);
      });

      young_silver_dragon = AddEntity(Kinds.dragon, null, "young silver dragon", E =>
      {
        E.Glyph = Glyphs.young_silver_dragon;
        E.Sonic = YoungDragonSonic;
        E.Level = 17;
        E.Challenge = 564;
        E.Difficulty = 20;
        E.Frequency = 2;
        E.IsGuardian = true; // neutral/friendly dragon.
        E.Defence = NewDragonDefence(21);
        E.SetDiet(DragonDiet);
        E.Speed = YoungDragonSpeed;
        E.Size = YoungDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = YoungDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(YoungDragonLifeBase, YoungDragonLifeDice);
        E.ManaAdvancement.Set(YoungDragonManaBase, YoungDragonManaDice);
        E.DefaultForm.Set(STR: 21, DEX: 12, CON: 19, INT: 14, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.sleep);
        E.Conveyance.MinorResistance(Elements.sleep);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +5 from str.
        E.AddAttack(AttackTypes.breath, Elements.force, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.force, 1.d4() + 4)
           .SetObjects()
           .SetPenetrates()
           .SetAudibility(10);
          K.Apply.HarmEntity(Elements.force, 4.d6());
          K.Apply.Shout(Dice.Fixed(10), A => A.ApplyTransient(Properties.deafness, 3.d6() + 3));
        });
        E.SetCorpse(Chance.Always);
      });

      young_white_dragon = AddEntity(Kinds.dragon, null, "young white dragon", E =>
      {
        E.Glyph = Glyphs.young_white_dragon;
        E.Sonic = YoungDragonSonic;
        E.Level = 12;
        E.Challenge = 198;
        E.Difficulty = 13;
        E.Frequency = 2;
        E.Defence = NewDragonDefence(20);
        E.SetDiet(DragonDiet);
        E.Speed = YoungDragonSpeed;
        E.Size = YoungDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = YoungDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(YoungDragonLifeBase, YoungDragonLifeDice);
        E.ManaAdvancement.Set(YoungDragonManaBase, YoungDragonManaDice);
        E.DefaultForm.Set(STR: 16, DEX: 12, CON: 16, INT: 7, WIS: 12, CHA: 13); // D&D lore - white dragons are stupid and evil.
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.cold);
        E.Conveyance.MinorResistance(Elements.cold);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +2 from str.
        E.AddAttack(AttackTypes.breath, Elements.cold, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.cold, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.cold, 3.d6());
        });
        E.SetCorpse(Chance.Always);
      });

      young_yellow_dragon = AddEntity(Kinds.dragon, null, "young yellow dragon", E =>
      {
        E.Glyph = Glyphs.young_yellow_dragon;
        E.Sonic = YoungDragonSonic;
        E.Level = 12;
        E.Challenge = 310;
        E.Difficulty = 15;
        E.Frequency = 2;
        E.Defence = NewDragonDefence(20);
        E.SetDiet(DragonDiet);
        E.Speed = YoungDragonSpeed;
        E.Size = YoungDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = YoungDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(YoungDragonLifeBase, YoungDragonLifeDice);
        E.ManaAdvancement.Set(YoungDragonManaBase, YoungDragonManaDice);
        E.DefaultForm.Set(STR: 17, DEX: 12, CON: 16, INT: 16, WIS: 14, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.disintegrate, Elements.petrify);
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.MinorResistance(Elements.petrify), F => F.MinorResistance(Elements.disintegrate));
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.breath, Elements.disintegrate, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.disintegration, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.disintegrate, 3.d6());
        });
        E.SetCorpse(Chance.Always);
      });

      // adult.
      adult_black_dragon = AddEntity(Kinds.dragon, null, "adult black dragon", E =>
      {
        E.Glyph = Glyphs.adult_black_dragon;
        E.Sonic = AdultDragonSonic;
        E.Level = 20;
        E.Challenge = 894;
        E.Difficulty = 25;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(23); // +2 from dex = 25.
        E.SetDiet(DragonDiet);
        E.Speed = AdultDragonSpeed;
        E.Size = AdultDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AdultDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AdultDragonLifeBase, AdultDragonLifeDice);
        E.ManaAdvancement.Set(AdultDragonManaBase, AdultDragonManaDice);
        E.DefaultForm.Set(STR: 23, DEX: 14, CON: 21, INT: 14, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.enchantment, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.see_invisible, Properties.flight);
        E.Startup.SetResistance(Elements.acid);
        E.Startup.AddGrimoire(Dice.One, Spells.fear);
        E.AddAttack(AttackTypes.breath, Elements.acid, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.acid, 1.d5() + 5);  //Not sure if this works
          K.Apply.HarmEntity(Elements.acid, 4.d10());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +6 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AdultDragonDropScalesChance, Dice.One, Items.black_dragon_scales);
        E.Conveyance.MajorResistance(Elements.acid);
      });

      adult_blue_dragon = AddEntity(Kinds.dragon, null, "adult blue dragon", E =>
      {
        E.Glyph = Glyphs.adult_blue_dragon;
        E.Sonic = AdultDragonSonic;
        E.Level = 20;
        E.Challenge = 598;
        E.Difficulty = 23;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(24);
        E.SetDiet(DragonDiet);
        E.Speed = AdultDragonSpeed;
        E.Size = AdultDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AdultDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AdultDragonLifeBase, AdultDragonLifeDice);
        E.ManaAdvancement.Set(AdultDragonManaBase, AdultDragonManaDice);
        E.DefaultForm.Set(STR: 25, DEX: 10, CON: 23, INT: 16, WIS: 15, CHA: 19);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.expert, Skills.clerical);
        E.Startup.SetTalent(Properties.dark_vision, Properties.see_invisible, Properties.flight);
        E.Startup.SetResistance(Elements.shock);
        E.Startup.AddGrimoire(Dice.One, Spells.extra_healing);
        E.AddAttack(AttackTypes.breath, Elements.shock, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.lightning, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.shock, 4.d6());
        });
        // +7 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8());  // +7 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.Conveyance.MajorResistance(Elements.shock);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AdultDragonDropScalesChance, Dice.One, Items.blue_dragon_scales);
      });

      adult_deep_dragon = AddEntity(Kinds.dragon, null, "adult deep dragon", E =>
      {
        E.Glyph = Glyphs.adult_deep_dragon;
        E.Sonic = AdultDragonSonic;
        E.Level = 22;
        E.Challenge = 944;
        E.Difficulty = 27;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(26);
        E.SetDiet(DragonDiet);
        E.Speed = AdultDragonSpeed;
        E.Size = AdultDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AdultDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AdultDragonLifeBase, AdultDragonLifeDice);
        E.ManaAdvancement.Set(AdultDragonManaBase, AdultDragonManaDice);
        E.DefaultForm.Set(STR: 22, DEX: 11, CON: 21, INT: 16, WIS: 15, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.expert, Skills.transmutation);
        E.Startup.SetTalent(Properties.see_invisible, Properties.flight);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.Startup.AddGrimoire(Dice.One, Spells.toxic_spray);
        E.AddAttack(AttackTypes.breath, Elements.poison, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.poison, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.poison, 4.d10());
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 8.d4());
          K.Apply.ApplyTransient(Properties.silence, 4.d6());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d10()); // +6 from str.
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.poison));
          Table.Add(1, A => A.MajorResistance(Elements.drain));
        }));
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AdultDragonDropScalesChance, Dice.One, Items.deep_dragon_scales);
      });

      adult_gold_dragon = AddEntity(Kinds.dragon, null, "adult gold dragon", E =>
      {
        E.Glyph = Glyphs.adult_gold_dragon;
        E.Sonic = AdultDragonSonic;
        E.Level = 23;
        E.Challenge = 936;
        E.Difficulty = 27;
        E.Frequency = 3;
        E.IsGuardian = true; // neutral/friendly dragon.
        E.Defence = NewDragonDefence(25);
        E.SetDiet(DragonDiet);
        E.Speed = AdultDragonSpeed;
        E.Size = AdultDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AdultDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AdultDragonLifeBase, AdultDragonLifeDice);
        E.ManaAdvancement.Set(AdultDragonManaBase, AdultDragonManaDice);
        E.DefaultForm.Set(STR: 25, DEX: 10, CON: 25, INT: 16, WIS: 13, CHA: 21);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.abjuration, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.flight);
        E.Startup.SetResistance(Elements.magical, Elements.petrify);
        E.Startup.AddGrimoire(Dice.One, Spells.deflection);
        E.AddAttack(AttackTypes.breath, Elements.petrify, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.poison, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.petrify, 5.d6());
          K.Apply.WhenChance(Chance.OneIn4, T => T.ApplyTransient(Properties.petrifying, 4.d4()));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8()); // +7 from str.
        E.Conveyance.MajorResistance(Elements.petrify);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AdultDragonDropScalesChance, Dice.One, Items.gold_dragon_scales);
      });

      adult_green_dragon = AddEntity(Kinds.dragon, null, "adult green dragon", E =>
      {
        E.Glyph = Glyphs.adult_green_dragon;
        E.Sonic = AdultDragonSonic;
        E.Level = 20;
        E.Challenge = 785;
        E.Difficulty = 27;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(23); // +1 from dex.
        E.SetDiet(DragonDiet);
        E.Speed = AdultDragonSpeed;
        E.Size = AdultDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AdultDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AdultDragonLifeBase, AdultDragonLifeDice);
        E.ManaAdvancement.Set(AdultDragonManaBase, AdultDragonManaDice);
        E.DefaultForm.Set(STR: 24, DEX: 12, CON: 21, INT: 18, WIS: 13, CHA: 19);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.master, Skills.conjuration);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.AddAttack(AttackTypes.breath, Elements.poison, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.poison, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.poison, 5.d6());
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d12());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4()); // +7 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AdultDragonDropScalesChance, Dice.One, Items.green_dragon_scales);
      });

      adult_orange_dragon = AddEntity(Kinds.dragon, null, "adult orange dragon", E =>
      {
        E.Glyph = Glyphs.adult_orange_dragon;
        E.Sonic = AdultDragonSonic;
        E.Level = 18;
        E.Challenge = 557;
        E.Difficulty = 21;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(24);
        E.SetDiet(DragonDiet);
        E.Speed = AdultDragonSpeed;
        E.Size = AdultDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AdultDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AdultDragonLifeBase, AdultDragonLifeDice);
        E.ManaAdvancement.Set(AdultDragonManaBase, AdultDragonManaDice);
        E.DefaultForm.Set(STR: 23, DEX: 11, CON: 21, INT: 14, WIS: 13, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.specialist, Skills.enchantment);
        E.Startup.SetTalent(Properties.see_invisible, Properties.flight);
        E.Startup.SetResistance(Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.slow);
        E.AddAttack(AttackTypes.breath, Elements.sleep, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.sleep, 1.d5() + 5);
          K.Apply.ApplyTransient(Properties.sleeping, 4.d25());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d7());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3()); // +6 from str.
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AdultDragonDropScalesChance, Dice.One, Items.orange_dragon_scales);
      });

      adult_red_dragon = AddEntity(Kinds.dragon, null, "adult red dragon", E =>
      {
        E.Glyph = Glyphs.adult_red_dragon;
        E.Sonic = AdultDragonSonic;
        E.Level = 20;
        E.Challenge = 598;
        E.Difficulty = 23;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(24);
        E.SetDiet(DragonDiet);
        E.Speed = AdultDragonSpeed;
        E.Size = AdultDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AdultDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AdultDragonLifeBase, AdultDragonLifeDice);
        E.ManaAdvancement.Set(AdultDragonManaBase, AdultDragonManaDice);
        E.DefaultForm.Set(STR: 27, DEX: 10, CON: 25, INT: 16, WIS: 13, CHA: 21);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.master, Skills.conjuration);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.fire);
        E.Startup.AddGrimoire(Dice.One, Spells.flaming_sphere);
        E.AddAttack(AttackTypes.breath, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.fire, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.fire, 6.d6());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +8 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.Conveyance.MajorResistance(Elements.fire);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AdultDragonDropScalesChance, Dice.One, Items.red_dragon_scales);
      });

      adult_shimmering_dragon = AddEntity(Kinds.dragon, null, "adult shimmering dragon", E =>
      {
        E.Glyph = Glyphs.adult_shimmering_dragon;
        E.Sonic = AdultDragonSonic;
        E.Level = 25;
        E.Challenge = 1109;
        E.Difficulty = 29;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(26); // +2 from dex.
        E.SetDiet(DragonDiet);
        E.Speed = AdultDragonSpeed;
        E.Size = AdultDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AdultDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AdultDragonLifeBase, AdultDragonLifeDice);
        E.ManaAdvancement.Set(AdultDragonManaBase, AdultDragonManaDice);
        E.DefaultForm.Set(STR: 21, DEX: 15, CON: 22, INT: 14, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.abjuration, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.flight, Properties.displacement);
        E.Startup.SetResistance(Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.invisibility);
        E.AddAttack(AttackTypes.breath, Elements.magical, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.magic_missile, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.magical, 6.d6());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5()); // +5 from str.
        //E.Conveyance.MajorResistance(Elements.Magical);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AdultDragonDropScalesChance, Dice.One, Items.shimmering_dragon_scales);
      });

      adult_silver_dragon = AddEntity(Kinds.dragon, null, "adult silver dragon", E =>
      {
        E.Glyph = Glyphs.adult_silver_dragon;
        E.Sonic = AdultDragonSonic;
        E.Level = 25;
        E.Challenge = 1264;
        E.Difficulty = 30;
        E.Frequency = 3;
        E.IsGuardian = true; // neutral/friendly dragon.
        E.Defence = NewDragonDefence(25);
        E.SetDiet(DragonDiet);
        E.Speed = AdultDragonSpeed;
        E.Size = AdultDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AdultDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AdultDragonLifeBase, AdultDragonLifeDice);
        E.ManaAdvancement.Set(AdultDragonManaBase, AdultDragonManaDice);
        E.DefaultForm.Set(STR: 27, DEX: 10, CON: 25, INT: 16, WIS: 13, CHA: 21);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.abjuration, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.see_invisible, Properties.flight, Properties.reflection);
        E.Startup.SetResistance(Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.haste);
        E.AddAttack(AttackTypes.breath, Elements.force, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.force, 1.d5() + 5)
           .SetObjects()
           .SetPenetrates()
           .SetAudibility(10);
          K.Apply.HarmEntity(Elements.force, 6.d6());
          K.Apply.Shout(Dice.Fixed(10), A => A.ApplyTransient(Properties.deafness, 6.d6() + 6));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +8 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8());
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AdultDragonDropScalesChance, Dice.One, Items.silver_dragon_scales);
      });

      adult_white_dragon = AddEntity(Kinds.dragon, null, "adult white dragon", E =>
      {
        E.Glyph = Glyphs.adult_white_dragon;
        E.Sonic = AdultDragonSonic;
        E.Level = 20;
        E.Challenge = 598;
        E.Difficulty = 23;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(24);
        E.SetDiet(DragonDiet);
        E.Speed = AdultDragonSpeed;
        E.Size = AdultDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AdultDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AdultDragonLifeBase, AdultDragonLifeDice);
        E.ManaAdvancement.Set(AdultDragonManaBase, AdultDragonManaDice);
        E.DefaultForm.Set(STR: 22, DEX: 10, CON: 22, INT: 8, WIS: 12, CHA: 12); // D&D lore - white dragons are stupid and evil.
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.master, Skills.conjuration);
        E.Startup.SetTalent(Properties.dark_vision, Properties.see_invisible, Properties.flight);
        E.Startup.SetResistance(Elements.cold);
        E.Startup.AddGrimoire(Dice.One, Spells.freezing_sphere);
        E.AddAttack(AttackTypes.breath, Elements.cold, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.cold, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.cold, 4.d6());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +6 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.Conveyance.MajorResistance(Elements.cold);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AdultDragonDropScalesChance, Dice.One, Items.white_dragon_scales);
      });

      adult_yellow_dragon = AddEntity(Kinds.dragon, null, "adult yellow dragon", E =>
      {
        E.Glyph = Glyphs.adult_yellow_dragon;
        E.Sonic = AdultDragonSonic;
        E.Level = 20;
        E.Challenge = 910;
        E.Difficulty = 25;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(24);
        E.SetDiet(DragonDiet);
        E.Speed = AdultDragonSpeed;
        E.Size = AdultDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AdultDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AdultDragonLifeBase, AdultDragonLifeDice);
        E.ManaAdvancement.Set(AdultDragonManaBase, AdultDragonManaDice);
        E.DefaultForm.Set(STR: 21, DEX: 10, CON: 22, INT: 17, WIS: 15, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.master, Skills.enchantment);
        E.Startup.SetTalent(Properties.see_invisible, Properties.flight);
        E.Startup.SetResistance(Elements.disintegrate, Elements.petrify);
        E.Startup.AddGrimoire(Dice.One, Spells.confusion);
        E.AddAttack(AttackTypes.breath, Elements.disintegrate, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.disintegration, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.disintegrate, 4.d6());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d18());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3()); // +5 from str.
        E.Conveyance.MajorResistance(Elements.disintegrate);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AdultDragonDropScalesChance, Dice.One, Items.yellow_dragon_scales);
      });

      // ancient.
      ancient_black_dragon = AddEntity(Kinds.dragon, null, "ancient black dragon", E =>
      {
        E.Glyph = Glyphs.ancient_black_dragon;
        E.Sonic = AncientDragonSonic;
        E.Level = 30;
        E.Challenge = 1894;
        E.Difficulty = 35;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(27); // +2 from dex = 25.
        E.SetDiet(DragonDiet);
        E.Speed = AncientDragonSpeed;
        E.Size = AncientDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AncientDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AncientDragonLifeBase, AncientDragonLifeDice);
        E.ManaAdvancement.Set(AncientDragonManaBase, AncientDragonManaDice);
        E.DefaultForm.Set(STR: 25, DEX: 16, CON: 23, INT: 16, WIS: 15, CHA: 19);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.enchantment, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.jumping, Properties.dark_vision, Properties.see_invisible);
        E.Startup.SetResistance(Elements.acid);
        E.Startup.AddGrimoire(Dice.One, Spells.fear);
        E.AddAttack(AttackTypes.breath, Elements.acid, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.acid, 1.d5() + 5);  //Not sure if this works
          K.Apply.HarmEntity(Elements.acid, 8.d10());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +6 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AncientDragonDropScalesChance, Dice.One, Items.black_dragon_scales);
        E.Conveyance.MajorResistance(Elements.acid);
      });

      ancient_blue_dragon = AddEntity(Kinds.dragon, null, "ancient blue dragon", E =>
      {
        E.Glyph = Glyphs.ancient_blue_dragon;
        E.Sonic = AncientDragonSonic;
        E.Level = 30;
        E.Challenge = 1598;
        E.Difficulty = 33;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(28);
        E.SetDiet(DragonDiet);
        E.Speed = AncientDragonSpeed;
        E.Size = AncientDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AncientDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AncientDragonLifeBase, AncientDragonLifeDice);
        E.ManaAdvancement.Set(AncientDragonManaBase, AncientDragonManaDice);
        E.DefaultForm.Set(STR: 27, DEX: 12, CON: 25, INT: 18, WIS: 17, CHA: 21);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.expert, Skills.clerical);
        E.Startup.SetTalent(Properties.jumping, Properties.dark_vision, Properties.see_invisible);
        E.Startup.SetResistance(Elements.shock);
        E.Startup.AddGrimoire(Dice.One, Spells.extra_healing);
        E.AddAttack(AttackTypes.breath, Elements.shock, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.lightning, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.shock, 8.d6());
          K.Apply.WhenChance(Chance.OneIn5, T => T.CreateVolatile(Volatiles.electricity, 1.d100() + 150));
        });
        // +7 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8());  // +7 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.Conveyance.MajorResistance(Elements.shock);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AncientDragonDropScalesChance, Dice.One, Items.blue_dragon_scales);
      });

      ancient_deep_dragon = AddEntity(Kinds.dragon, null, "ancient deep dragon", E =>
      {
        E.Glyph = Glyphs.ancient_deep_dragon;
        E.Sonic = AncientDragonSonic;
        E.Level = 34;
        E.Challenge = 1944;
        E.Difficulty = 37;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(30);
        E.SetDiet(DragonDiet);
        E.Speed = AncientDragonSpeed;
        E.Size = AncientDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AncientDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AncientDragonLifeBase, AncientDragonLifeDice);
        E.ManaAdvancement.Set(AncientDragonManaBase, AncientDragonManaDice);
        E.DefaultForm.Set(STR: 24, DEX: 13, CON: 23, INT: 18, WIS: 17, CHA: 22);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.expert, Skills.transmutation);
        E.Startup.SetTalent(Properties.jumping, Properties.see_invisible);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.Startup.AddGrimoire(Dice.One, Spells.toxic_spray);
        E.AddAttack(AttackTypes.breath, Elements.poison, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.poison, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.poison, 8.d10());
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 8.d4());
          K.Apply.ApplyTransient(Properties.silence, 4.d6());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d10()); // +6 from str.
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.poison));
          Table.Add(1, A => A.MajorResistance(Elements.drain));
        }));
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AncientDragonDropScalesChance, Dice.One, Items.deep_dragon_scales);
      });

      ancient_gold_dragon = AddEntity(Kinds.dragon, null, "ancient gold dragon", E =>
      {
        E.Glyph = Glyphs.ancient_gold_dragon;
        E.Sonic = AncientDragonSonic;
        E.Level = 38;
        E.Challenge = 1936;
        E.Difficulty = 40;
        E.Frequency = 3;
        E.IsGuardian = true; // neutral/friendly dragon.
        E.Defence = NewDragonDefence(29);
        E.SetDiet(DragonDiet);
        E.Speed = AncientDragonSpeed;
        E.Size = AncientDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AncientDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AncientDragonLifeBase, AncientDragonLifeDice);
        E.ManaAdvancement.Set(AncientDragonManaBase, AncientDragonManaDice);
        E.DefaultForm.Set(STR: 27, DEX: 12, CON: 27, INT: 18, WIS: 15, CHA: 23);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.abjuration, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.jumping, Properties.see_invisible);
        E.Startup.SetResistance(Elements.magical, Elements.petrify);
        E.Startup.AddGrimoire(Dice.One, Spells.deflection);
        E.AddAttack(AttackTypes.breath, Elements.petrify, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.poison, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.petrify, 10.d6());
          K.Apply.ApplyTransient(Properties.petrifying, 4.d4());
          K.Apply.WhenChance(Chance.OneIn4, T => T.IncarcerateEntity(Elements.petrify, Codex.Blocks.trophy));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8()); // +7 from str.
        E.Conveyance.MajorResistance(Elements.petrify);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AncientDragonDropScalesChance, Dice.One, Items.gold_dragon_scales);
      });

      ancient_green_dragon = AddEntity(Kinds.dragon, null, "ancient green dragon", E =>
      {
        E.Glyph = Glyphs.ancient_green_dragon;
        E.Sonic = AncientDragonSonic;
        E.Level = 30;
        E.Challenge = 1785;
        E.Difficulty = 36;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(27); // +1 from dex.
        E.SetDiet(DragonDiet);
        E.Speed = AncientDragonSpeed;
        E.Size = AncientDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AncientDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AncientDragonLifeBase, AncientDragonLifeDice);
        E.ManaAdvancement.Set(AncientDragonManaBase, AncientDragonManaDice);
        E.DefaultForm.Set(STR: 26, DEX: 14, CON: 23, INT: 20, WIS: 15, CHA: 21);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.master, Skills.conjuration);
        E.Startup.SetTalent(Properties.jumping, Properties.see_invisible, Properties.dark_vision);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.AddAttack(AttackTypes.breath, Elements.poison, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.poison, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.poison, 10.d6());
          K.Apply.WhenChance(Chance.OneIn2, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d12());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4()); // +7 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AncientDragonDropScalesChance, Dice.One, Items.green_dragon_scales);
      });

      ancient_orange_dragon = AddEntity(Kinds.dragon, null, "ancient orange dragon", E =>
      {
        E.Glyph = Glyphs.ancient_orange_dragon;
        E.Sonic = AncientDragonSonic;
        E.Level = 28;
        E.Challenge = 1557;
        E.Difficulty = 31;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(28);
        E.SetDiet(DragonDiet);
        E.Speed = AncientDragonSpeed;
        E.Size = AncientDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AncientDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AncientDragonLifeBase, AncientDragonLifeDice);
        E.ManaAdvancement.Set(AncientDragonManaBase, AncientDragonManaDice);
        E.DefaultForm.Set(STR: 25, DEX: 13, CON: 23, INT: 16, WIS: 15, CHA: 22);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.specialist, Skills.enchantment);
        E.Startup.SetTalent(Properties.jumping, Properties.see_invisible);
        E.Startup.SetResistance(Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.slow);
        E.AddAttack(AttackTypes.breath, Elements.sleep, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.sleep, 1.d5() + 5);
          K.Apply.ApplyTransient(Properties.sleeping, 8.d25());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d7());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3()); // +6 from str.
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AncientDragonDropScalesChance, Dice.One, Items.orange_dragon_scales);
      });

      ancient_red_dragon = AddEntity(Kinds.dragon, null, "ancient red dragon", E =>
      {
        E.Glyph = Glyphs.ancient_red_dragon;
        E.Sonic = AncientDragonSonic;
        E.Level = 30;
        E.Challenge = 1598;
        E.Difficulty = 33;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(28);
        E.SetDiet(DragonDiet);
        E.Speed = AncientDragonSpeed;
        E.Size = AncientDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AncientDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AncientDragonLifeBase, AncientDragonLifeDice);
        E.ManaAdvancement.Set(AncientDragonManaBase, AncientDragonManaDice);
        E.DefaultForm.Set(STR: 29, DEX: 12, CON: 27, INT: 18, WIS: 15, CHA: 23);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.master, Skills.conjuration);
        E.Startup.SetTalent(Properties.jumping, Properties.see_invisible, Properties.dark_vision);
        E.Startup.SetResistance(Elements.fire);
        E.Startup.AddGrimoire(Dice.One, Spells.flaming_sphere);
        E.AddAttack(AttackTypes.breath, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.fire, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.fire, 12.d6());
          K.Apply.WhenChance(Chance.OneIn5, T => T.CreateVolatile(Volatiles.blaze, 1.d100() + 150));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +8 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.Conveyance.MajorResistance(Elements.fire);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AncientDragonDropScalesChance, Dice.One, Items.red_dragon_scales);
      });

      ancient_shimmering_dragon = AddEntity(Kinds.dragon, null, "ancient shimmering dragon", E =>
      {
        E.Glyph = Glyphs.ancient_shimmering_dragon;
        E.Sonic = AncientDragonSonic;
        E.Level = 35;
        E.Challenge = 2109;
        E.Difficulty = 37;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(30); // +2 from dex.
        E.SetDiet(DragonDiet);
        E.Speed = AncientDragonSpeed;
        E.Size = AncientDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AncientDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AncientDragonLifeBase, AncientDragonLifeDice);
        E.ManaAdvancement.Set(AncientDragonManaBase, AncientDragonManaDice);
        E.DefaultForm.Set(STR: 23, DEX: 17, CON: 24, INT: 16, WIS: 15, CHA: 19);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.abjuration, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.jumping, Properties.see_invisible, Properties.displacement);
        E.Startup.SetResistance(Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.invisibility);
        E.AddAttack(AttackTypes.breath, Elements.magical, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.magic_missile, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.magical, 12.d6());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5()); // +5 from str.
        //E.Conveyance.MajorResistance(Elements.Magical);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AncientDragonDropScalesChance, Dice.One, Items.shimmering_dragon_scales);
      });

      ancient_silver_dragon = AddEntity(Kinds.dragon, null, "ancient silver dragon", E =>
      {
        E.Glyph = Glyphs.ancient_silver_dragon;
        E.Sonic = AncientDragonSonic;
        E.Level = 37;
        E.Challenge = 2264;
        E.Difficulty = 39;
        E.Frequency = 3;
        E.IsGuardian = true; // neutral/friendly dragon.
        E.Defence = NewDragonDefence(29);
        E.SetDiet(DragonDiet);
        E.Speed = AncientDragonSpeed;
        E.Size = AncientDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AncientDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AncientDragonLifeBase, AncientDragonLifeDice);
        E.ManaAdvancement.Set(AncientDragonManaBase, AncientDragonManaDice);
        E.DefaultForm.Set(STR: 29, DEX: 12, CON: 27, INT: 18, WIS: 15, CHA: 23);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.abjuration, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.jumping, Properties.dark_vision, Properties.see_invisible, Properties.reflection);
        E.Startup.SetResistance(Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.haste);
        E.AddAttack(AttackTypes.breath, Elements.force, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.force, 1.d5() + 5)
           .SetObjects()
           .SetPenetrates()
           .SetAudibility(10);
          K.Apply.HarmEntity(Elements.force, 12.d6());
          K.Apply.Shout(Dice.Fixed(10), A => A.ApplyTransient(Properties.deafness, 12.d6() + 12));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +8 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8());
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AncientDragonDropScalesChance, Dice.One, Items.silver_dragon_scales);
      });

      ancient_white_dragon = AddEntity(Kinds.dragon, null, "ancient white dragon", E =>
      {
        E.Glyph = Glyphs.ancient_white_dragon;
        E.Sonic = AncientDragonSonic;
        E.Level = 30;
        E.Challenge = 1598;
        E.Difficulty = 33;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(28);
        E.SetDiet(DragonDiet);
        E.Speed = AncientDragonSpeed;
        E.Size = AncientDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AncientDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AncientDragonLifeBase, AncientDragonLifeDice);
        E.ManaAdvancement.Set(AncientDragonManaBase, AncientDragonManaDice);
        E.DefaultForm.Set(STR: 24, DEX: 12, CON: 24, INT: 10, WIS: 14, CHA: 14); // D&D lore - white dragons are stupid and evil.
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.master, Skills.conjuration);
        E.Startup.SetTalent(Properties.jumping, Properties.dark_vision, Properties.see_invisible);
        E.Startup.SetResistance(Elements.cold);
        E.Startup.AddGrimoire(Dice.One, Spells.freezing_sphere);
        E.AddAttack(AttackTypes.breath, Elements.cold, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.cold, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.cold, 8.d6());
          K.Apply.WhenChance(Chance.OneIn5, T => T.CreateVolatile(Volatiles.freeze, 1.d100() + 150));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +6 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.Conveyance.MajorResistance(Elements.cold);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AncientDragonDropScalesChance, Dice.One, Items.white_dragon_scales);
      });

      ancient_yellow_dragon = AddEntity(Kinds.dragon, null, "ancient yellow dragon", E =>
      {
        E.Glyph = Glyphs.ancient_yellow_dragon;
        E.Sonic = AncientDragonSonic;
        E.Level = 30;
        E.Challenge = 1910;
        E.Difficulty = 35;
        E.Frequency = 3;
        E.Defence = NewDragonDefence(28);
        E.SetDiet(DragonDiet);
        E.Speed = AncientDragonSpeed;
        E.Size = AncientDragonSize;
        E.Strategy = DragonStrategy;
        E.Weight = AncientDragonWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(AncientDragonLifeBase, AncientDragonLifeDice);
        E.ManaAdvancement.Set(AncientDragonManaBase, AncientDragonManaDice);
        E.DefaultForm.Set(STR: 23, DEX: 12, CON: 24, INT: 19, WIS: 17, CHA: 19);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetSkill(Qualifications.master, Skills.enchantment);
        E.Startup.SetTalent(Properties.jumping, Properties.see_invisible);
        E.Startup.SetResistance(Elements.disintegrate, Elements.petrify);
        E.Startup.AddGrimoire(Dice.One, Spells.confusion);
        E.AddAttack(AttackTypes.breath, Elements.disintegrate, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.disintegration, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.disintegrate, 8.d6());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d18());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3()); // +5 from str.
        E.Conveyance.MajorResistance(Elements.disintegrate);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(AncientDragonDropScalesChance, Dice.One, Items.yellow_dragon_scales);
      });

      //Homebrew Tiamat! XD Also give us the hands...... :(
      chromatic_dragon = AddEntity(Kinds.dragon, null, "chromatic dragon", E =>
      {
        E.Glyph = Glyphs.chromatic_dragon;
        E.Sonic = Sonics.roar;
        E.Level = 32;
        E.Challenge = 1446;
        E.Difficulty = 33;
        E.Frequency = 1;
        E.Defence = NewDragonDefence(27);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits((long)(AncientDragonWeight.GetUnits() * 1.5F));
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 27, DEX: 10, CON: 30, INT: 26, WIS: 26, CHA: 28);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.enchantment, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control);
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.disintegrate, Elements.petrify, Elements.shock, Elements.fire, Elements.poison, Elements.sleep, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.fear);
        E.AddAttack(AttackTypes.breath, Elements.magical, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.magic_missile, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.magical, 6.d8());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8()); // +8 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8()); // +8 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +8 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +8 from str.
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.fire));
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.sleep));
          Table.Add(1, A => A.MajorResistance(Elements.disintegrate));
          Table.Add(1, A => A.MajorResistance(Elements.shock));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      //Not Sure what to do with this
      dragon_king = AddEntity(Kinds.dragon, null, "dragon king", E =>
      {
        E.Glyph = Glyphs.dragon_king;
        E.Sonic = Sonics.roar;
        E.Level = 39;
        E.Challenge = 1713;
        E.Difficulty = 38;
        E.Frequency = 1;
        E.Defence = NewDragonDefence(30); // +2 from str = 32.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits((long)(AdultDragonWeight.GetUnits() * 1.5F));
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(96, 1.d8());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 30, DEX: 14, CON: 26, INT: 18, WIS: 16, CHA: 28);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.flight, Properties.polymorph_control);
        E.Startup.SetResistance(Elements.fire, Elements.magical);
        E.AddAttack(AttackTypes.breath, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.fire, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.fire, 6.d8());
        });
        E.AddAttack(AttackTypes.breath, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.fire, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.fire, 3.d6());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d10()); // +10 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          // 0..1 of each.
          A.Apply.SummonEntity(1.d2() - 1, adult_red_dragon);
          A.Apply.SummonEntity(1.d2() - 1, adult_blue_dragon);
          A.Apply.SummonEntity(1.d2() - 1, adult_green_dragon);
          A.Apply.SummonEntity(1.d2() - 1, adult_black_dragon);
          A.Apply.SummonEntity(1.d2() - 1, adult_white_dragon);
        });
        E.Conveyance.MajorResistance(Elements.fire);
        E.SetCorpse(Chance.Always);
      });

      hydra = AddEntity(Kinds.dragon, null, "hydra", E =>
      {
        E.Glyph = Glyphs.hydra;
        E.Sonic = Sonics.roar;
        E.Level = 34;
        E.Challenge = 1350;
        E.Difficulty = 36;
        E.Frequency = 1;
        E.Defence = new Defence(D: 27, P: +0, S: +0, B: +0); // +1 from dex = 28.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1200000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(52, 1.d12());
        E.ManaAdvancement.Set(52, 1.d6());
        E.DefaultForm.Set(STR: 28, DEX: 12, CON: 24, INT: 2, WIS: 10, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetTalent(Properties.see_invisible, Properties.life_regeneration, Properties.polymorph_control);
        E.Startup.SetResistance(Elements.poison, Elements.petrify, Elements.magical);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10()); // +9 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10());
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.MinorProperty(Properties.life_regeneration);
        E.SetCorpse(Chance.Always);
      });

      Ixoth = AddUniqueEntity(Kinds.dragon, null, "Ixoth", E =>
      {
        E.Glyph = Glyphs.Ixoth;
        E.Sonic = Sonics.roar;
        E.Level = 35;
        E.Challenge = 3500;
        E.Difficulty = 40;
        E.Frequency = 0;
        E.Defence = new Defence(D: 30, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1400000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(60, 15.d4());
        E.ManaAdvancement.Set(30, 15.d2());
        E.DefaultForm.Set(STR: 26, DEX: 12, CON: 24, INT: 10, WIS: 11, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour, Skills.evocation, Skills.enchantment, Skills.necromancy, Skills.abjuration, Skills.clerical, Skills.conjuration, Skills.transmutation, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.flight, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.fire, Elements.petrify, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.Startup.AddGrimoire(Dice.One, Spells.poison_blast);
        E.Startup.AddGrimoire(Dice.One, Spells.acid_stream);
        E.Startup.AddGrimoire(Dice.One, Spells.toxic_spray);
        E.Startup.AddGrimoire(Dice.One, Spells.fear);
        E.Startup.AddGrimoire(Dice.One, Spells.drain_life);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.Startup.AddGrimoire(Dice.One, Spells.polymorph);
        E.Startup.AddGrimoire(Dice.One, Spells.teleport_away);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_object);
        E.AddAttack(AttackTypes.breath, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.fire, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.fire, 8.d6() + 8);
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d8()); // +8 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d8());
        E.Conveyance.MajorResistance(Elements.fire);
        E.SetCorpse(Chance.Always);
      });

      wyvern = AddEntity(Kinds.dragon, null, "wyvern", E =>
      {
        E.Glyph = Glyphs.wyvern;
        E.Sonic = Sonics.squall;
        E.Level = 16;
        E.Challenge = 530;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(70000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(72, 1.d4());
        E.ManaAdvancement.Set(36, 1.d2());
        E.DefaultForm.Set(STR: 19, DEX: 10, CON: 16, INT: 5, WIS: 12, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.flight);
        E.Startup.SetResistance(Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.sting, Elements.physical, 4.d5(), K => // +4 from str.
        {
          K.Apply.WhenChance(Chance.OneIn4, T =>
          {
            T.Macro(MinorPoison(Attributes.strength));
            T.AfflictEntity(Codex.Afflictions.poisoning);
          });
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d8());
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region dwarf.
      duergar = AddEntity(Kinds.dwarf, Races.dwarf, "duergar", E =>
      {
        E.Glyph = Glyphs.duergar;
        E.Level = 11;
        E.Challenge = 224;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1 from dex = 13.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_2;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 12, CON: 11, INT: 12, WIS: 11, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_blade, Skills.light_armour, Skills.heavy_armour, Skills.medium_armour, Skills.axe, Skills.pick);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.OneIn7, Items.dwarvish_cloak);
        E.Startup.Loot.AddKit(Chance.OneIn7, Items.iron_shoes);
        E.Startup.Loot.AddKit(Chance.OneIn4, Items.dwarvish_short_sword);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.axe);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.dwarvish_iron_helm);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.dwarvish_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.dwarvish_roundshield);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.dwarvish_mattock);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d10()); // +1 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      dwarf_king = AddEntity(Kinds.dwarf, Races.dwarf, "dwarf king", E =>
      {
        E.Glyph = Glyphs.dwarf_king;
        E.Level = 20;
        E.Challenge = 668;
        E.Difficulty = 21;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +3 from dex = 16.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 16, CON: 14, INT: 12, WIS: 12, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.pick, Skills.medium_blade, Skills.axe, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality, Properties.searching);
        E.Startup.Loot.AddKit(Chance.OneIn7, Items.dwarvish_cloak);
        E.Startup.Loot.AddKit(Chance.OneIn7, Items.iron_shoes);
        E.Startup.Loot.AddKit(Chance.OneIn4, Items.dwarvish_short_sword);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.axe);
        E.Startup.Loot.AddKit(Chance.OneIn4, Items.dwarvish_iron_helm);
        E.Startup.Loot.AddKit(Chance.Always, Items.dwarvish_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.dwarvish_roundshield);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.dwarvish_mattock);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d8()); // +3 from str.
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d2(), dwarf_warrior);
          A.Apply.SummonEntity(1.d2() - 1, dwarf_lord); // 0..1
        });
        E.SetCorpse(Chance.OneIn3);
      });

      dwarf_lord = AddEntity(Kinds.dwarf, Races.dwarf, "dwarf lord", E =>
      {
        E.Glyph = Glyphs.dwarf_lord;
        E.Level = 14;
        E.Challenge = 257;
        E.Difficulty = 16;
        E.Frequency = 3;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +1 from dex = 12.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 12, CON: 11, INT: 12, WIS: 11, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.pick, Skills.medium_blade, Skills.axe, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality, Properties.searching);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_cloak);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.iron_shoes);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_short_sword);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.axe);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_iron_helm);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.dwarvish_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_roundshield);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_mattock);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6()); // +3 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      dwarf_thief = AddEntity(Kinds.dwarf, Races.dwarf, "dwarf thief", E =>
      {
        E.Glyph = Glyphs.dwarf_thief;
        E.Level = 8;
        E.Challenge = 78;
        E.Difficulty = 10;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +3 from dex = 13.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_2;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(13000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 16, CON: 8, INT: 11, WIS: 8, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.pick, Skills.medium_blade, Skills.axe, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality, Properties.searching);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_cloak);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_short_sword);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_roundshield);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // +2 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.StealCarriedItem(Properties.fear, 6.d6() + 6);
        });
        E.SetCorpse(Chance.OneIn3);
      });

      dwarf_warrior = AddEntity(Kinds.dwarf, Races.dwarf, "dwarf warrior", E =>
      {
        E.Glyph = Glyphs.dwarf_warrior;
        E.Level = 11;
        E.Challenge = 204;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_2;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 11, CON: 12, INT: 8, WIS: 10, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.pick, Skills.medium_blade, Skills.axe, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality, Properties.searching);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_cloak);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.iron_shoes);
        E.Startup.Loot.AddKit(Chance.OneIn5, Items.dwarvish_short_sword);
        E.Startup.Loot.AddKit(Chance.OneIn5, Items.axe);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_iron_helm);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.dwarvish_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_roundshield);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_mattock);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5()); // +3 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      Thorin = AddUniqueEntity(Kinds.dwarf, Races.dwarf, "Thorin", E =>
      {
        E.Glyph = Glyphs.Thorin;
        E.Level = 20;
        E.Challenge = 963;
        E.Difficulty = 22;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_2;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(17000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 14, CON: 15, INT: 13, WIS: 11, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.pick, Skills.medium_blade, Skills.axe, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality, Properties.searching, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical);
        E.Startup.Loot.AddKit(Chance.OneIn7, Items.dwarvish_cloak);
        E.Startup.Loot.AddKit(Chance.Always, Sanctities.Blessed, Modifier.Plus3, Items.dwarvish_iron_helm);
        E.Startup.Loot.AddKit(Chance.Always, Sanctities.Blessed, Modifier.Plus3, Items.dwarvish_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn7, Items.iron_shoes);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.mithril_battleaxe);
        E.Startup.Loot.AddKit(Chance.OneIn4, Items.dwarvish_short_sword);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.dwarvish_roundshield);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.dwarvish_mattock);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d9()); // +3 from str.
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region marine.
      // Lovecraftian.
      deep_one = AddEntity(Kinds.marine, null, "deep one", E =>
      {
        //E.Description = "They are intelligent ocean-dwelling creatures, and are fishy/froggy humanoids in appearance.";
        E.Glyph = Glyphs.deep_one;
        E.Sonic = Sonics.cackle;
        E.Level = 16;
        E.Challenge = 418;
        E.Difficulty = 18;
        E.Frequency = 2;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +3 from dex = 17.
        E.SetTerrain(Materials.water, Materials.air);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 16, CON: 16, INT: 8, WIS: 12, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.cold, Elements.poison);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d6());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d6());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +2 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      deeper_one = AddEntity(Kinds.marine, null, "deeper one", E =>
      {
        E.Glyph = Glyphs.deeper_one;
        E.Sonic = Sonics.cackle;
        E.Level = 23;
        E.Challenge = 848;
        E.Difficulty = 26;
        E.Frequency = 2;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetTerrain(Materials.water, Materials.air);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 17, CON: 19, INT: 8, WIS: 12, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.cold, Elements.poison);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d6()); // +4 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      deepest_one = AddEntity(Kinds.marine, null, "deepest one", E =>
      {
        E.Glyph = Glyphs.deepest_one;
        E.Sonic = Sonics.cackle;
        E.Level = 30;
        E.Challenge = 1008;
        E.Difficulty = 33;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetTerrain(Materials.water, Materials.air);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 18, CON: 22, INT: 9, WIS: 12, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.cold, Elements.poison);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d13());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d13());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d12()); // +5 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      electric_eel = AddEntity(Kinds.marine, null, "electric eel", E =>
      {
        E.Glyph = Glyphs.electric_eel;
        E.Sonic = Sonics.electricity;
        E.Level = 7;
        E.Challenge = 67;
        E.Difficulty = 10;
        E.Frequency = 10;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.SetTerrain(Materials.water);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 15, CON: 16, INT: 4, WIS: 8, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetResistance(Elements.shock);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.shock, 3.d8()); // +1 from str.
        E.Conveyance.MajorResistance(Elements.shock);
        E.SetCorpse(Chance.Always);
      });

      giant_crab = AddEntity(Kinds.marine, null, "giant crab", E =>
      {
        E.Glyph = Glyphs.giant_crab;
        E.Level = 12;
        E.Challenge = 217;
        E.Difficulty = 14;
        E.Frequency = 10;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +2 from dex = 22.
        E.SetDiet(Diets.omnivore);
        E.SetTerrain(Materials.water, Materials.air);
        E.Speed = Speed.S3_7;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(70000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 13, INT: 3, WIS: 5, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.expert, Skills.swimming);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d10()); // +4 from str.
        E.SetCorpse(Chance.Always);
      });

      giant_eel = AddEntity(Kinds.marine, null, "giant eel", E =>
      {
        E.Glyph = Glyphs.giant_eel;
        E.Level = 14;
        E.Challenge = 305;
        E.Difficulty = 16;
        E.Frequency = 10;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.SetTerrain(Materials.water);
        E.Speed = Speed.S2_5;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(80000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 14, CON: 13, INT: 4, WIS: 8, CHA: 4);
        E.LimitForm.Set(STR: 20, DEX: 20, CON: 20, INT: 10, WIS: 10, CHA: 10);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6()); // +3 from str.
        E.AddAttack(AttackTypes.grapple, Elements.physical, 1.d3(), A => // +3 from str.
        {
          A.Apply.GrappleEntity(1.d6());
        });
        E.SetCorpse(Chance.Always);
      });

      giant_frog = AddEntity(Kinds.marine, null, "giant frog", E =>
      {
        E.Glyph = Glyphs.giant_frog;
        E.Level = 9;
        E.Challenge = 105;
        E.Difficulty = 11;
        E.Frequency = 10;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.SetTerrain(Materials.water, Materials.air);
        E.Speed = Speed.S5_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(40000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 13, CON: 11, INT: 2, WIS: 10, CHA: 3);
        E.LimitForm.Set(STR: 20, DEX: 20, CON: 20, INT: 10, WIS: 10, CHA: 10);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.expert, Skills.swimming);
        E.Startup.SetTalent(Properties.slippery, Properties.jumping);
        E.SetEngulf(Strikes.acid, A => A.HarmEntity(Elements.acid, 1.d6()));
        E.AddAttack(AttackTypes.engulf, Elements.physical, 1.d6(), K => // +1 from str.
        {
          K.SetCast().Strike(Strikes.venom, Dice.Fixed(2));
          K.Apply.EngulfEntity(Engulfments.engulfed, 1.d4() + 1);
        });
        E.SetCorpse(Chance.Always);
      });

      jellyfish = AddEntity(Kinds.marine, null, "jellyfish", E =>
      {
        E.Glyph = Glyphs.jellyfish;
        E.Level = 5;
        E.Challenge = 49;
        E.Difficulty = 7;
        E.Frequency = 10;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.SetTerrain(Materials.water);
        E.Speed = Speed.S2_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(800);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 11, CON: 9, INT: 1, WIS: 3, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent(Properties.slippery);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.sting, Elements.physical, 3.d4(), K => // -1 from str.
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      kraken = AddEntity(Kinds.marine, null, "kraken", E =>
      {
        E.Glyph = Glyphs.kraken;
        E.Level = 20;
        E.Challenge = 447;
        E.Difficulty = 22;
        E.Frequency = 10;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.carnivore);
        E.SetTerrain(Materials.water);
        E.Speed = Speed.S2_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(300000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 13, CON: 18, INT: 8, WIS: 11, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.expert, Skills.swimming);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d5());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d5());
        E.AddAttack(AttackTypes.grapple, Elements.physical, 1.d9(), A => // +3 from str.
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 5.d4());
        E.SetCorpse(Chance.Always);
      });

      piranha = AddEntity(Kinds.marine, null, "piranha", E =>
      {
        E.Glyph = Glyphs.piranha;
        E.Level = 7;
        E.Challenge = 46;
        E.Difficulty = 8;
        E.Frequency = 10;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +2 from dex = 18.
        E.SetDiet(Diets.carnivore);
        E.SetTerrain(Materials.water);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(600);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 15, CON: 13, INT: 3, WIS: 1, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d11()); // +1 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      seal = AddDomesticEntity(Kinds.marine, null, "seal", E =>
      {
        E.Glyph = Glyphs.seal;
        E.Sonic = Sonics.arf;
        E.Level = 10;
        E.Challenge = 125;
        E.Difficulty = 12;
        E.Frequency = 10;
        E.Defence = new Defence(D: 18, P: +2, S: +2, B: -2);
        E.SetTerrain(Materials.water, Materials.air);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Escape;
        E.Weight = Weight.FromUnits(88000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(16, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 5, CON: 20, INT: 5, WIS: 5, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(Stocks.food);
        E.Chemistry.SetWeakness(Elements.fire);
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetResistance(Elements.cold);
        E.Startup.SetTalent(Properties.slippery, Properties.free_action);
        E.AddAttack(AttackTypes.slap, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.slap, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6());
        E.SetCorpse(Chance.Always);
      });

      shark = AddEntity(Kinds.marine, null, "shark", E =>
      {
        E.Glyph = Glyphs.shark;
        E.Level = 18;
        E.Challenge = 482;
        E.Difficulty = 20;
        E.Frequency = 10;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex = 21.
        E.SetDiet(Diets.carnivore);
        E.SetTerrain(Materials.water);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 13, CON: 18, INT: 3, WIS: 5, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 6.d5()); // +5 from str.
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region elemental.
      animate_object = AddEntity(Kinds.elemental, null, "animate object", E =>
      {
        E.Glyph = Glyphs.animate_object;
        E.Level = 0;
        E.Challenge = 0;
        E.Difficulty = 0;
        E.Frequency = 0;
        E.IsAnimate = true;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.ether,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 11, CON: 11, INT: 11, WIS: 11, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.unarmed_combat); // animate objects do not have any declared attacks, so we need at least unarmed combat skill to attack competently.
        E.Startup.SetTalent(Properties.flight);
        E.SetCorpse(Chance.Never);
      });

      water_sphere = AddEntity(Kinds.elemental, null, "water sphere", E =>
      {
        E.Glyph = Glyphs.water_sphere;
        E.Sonic = Sonics.water_splash;
        E.Level = 3;
        E.Challenge = 24;
        E.Difficulty = 5;
        E.Frequency = 2;
        E.Defence = NewEyeDefence(11); // +1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100000);
        E.Figure.Set
        (
          Material: Materials.water,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 12, CON: 18, INT: 7, WIS: 8, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.levitation, Properties.life_regeneration);
        //E.Startup.SetResistance(Elements.water);
        E.AddAttack(AttackTypes.blast, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Explosion(Explosions.watery, Dice.Zero);
          K.Apply.HarmEntity(Elements.water, 2.d6());
          K.Apply.WhenChance(Chance.OneIn2, T => T.ConvertGround(FromGround: null, ToGround: Codex.Grounds.water, Locality.Square)); // TODO: would prefer this only happened on one square instead of 9?
        });
        E.Chemistry.SetWeakness(Elements.fire);
        E.AddReaction(Chance.Always, Elements.water, A => A.HealEntity(4.d6(), Modifier.Zero));
        E.SetCorpse(Chance.Never);
      });

      flame_sphere = AddEntity(Kinds.elemental, null, "flame sphere", E =>
      {
        E.Glyph = Glyphs.flame_sphere;
        E.Sonic = Sonics.burn;
        E.Level = 5;
        E.Challenge = 54;
        E.Difficulty = 7;
        E.Frequency = 2;
        E.Defence = NewEyeDefence(11); // +3 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.fire,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 16, CON: 8, INT: 7, WIS: 8, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.levitation, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.fire);
        E.AddAttack(AttackTypes.blast, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Explosion(Explosions.fiery, Dice.Zero);
          K.Apply.HarmEntity(Elements.fire, 3.d6());
          K.Apply.WhenChance(Chance.OneIn5, T => T.CreateVolatile(Volatiles.blaze, 1.d50() + 50));
        });
        E.Chemistry.SetWeakness(Elements.cold, Elements.water);
        E.AddReaction(Chance.Always, Elements.fire, A => A.HealEntity(4.d6(), Modifier.Zero));
        E.SetCorpse(Chance.Never);
      });

      frost_sphere = AddEntity(Kinds.elemental, null, "frost sphere", E =>
      {
        E.Glyph = Glyphs.frost_sphere;
        E.Sonic = Sonics.freeze;
        E.Level = 7;
        E.Challenge = 80;
        E.Difficulty = 9;
        E.Frequency = 2;
        E.Defence = NewEyeDefence(13); // +3 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100);
        E.Figure.Set
        (
          Material: Materials.ice,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 16, CON: 8, INT: 7, WIS: 8, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.levitation);
        E.Startup.SetResistance(Elements.cold, Elements.sleep);
        E.AddAttack(AttackTypes.blast, Elements.cold, Dice.Zero, K =>
        {
          K.SetCast().Explosion(Explosions.frosty, Dice.Zero);
          K.Apply.HarmEntity(Elements.cold, 3.d9());
          K.Apply.UnlessTargetResistant(Elements.cold, T => T.ApplyTransient(Properties.paralysis, 1.d3() + 3));
          K.Apply.WhenChance(Chance.OneIn5, T => T.CreateVolatile(Volatiles.freeze, 1.d50() + 50));
        });
        E.Chemistry.SetWeakness(Elements.fire);
        E.AddReaction(Chance.Always, Elements.cold, A => A.HealEntity(4.d6(), Modifier.Zero));
        E.SetCorpse(Chance.Never);
      });

      earth_sphere = AddEntity(Kinds.elemental, null, "earth sphere", E =>
      {
        E.Glyph = Glyphs.earth_sphere;
        E.Sonic = Sonics.broken_boulder;
        E.Level = 9;
        E.Challenge = 54;
        E.Difficulty = 11;
        E.Frequency = 2;
        E.Defence = NewEyeDefence(21); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(45000);
        E.Figure.Set
        (
          Material: Materials.stone,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 08, CON: 16, INT: 7, WIS: 8, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.levitation, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.drain);
        E.AddAttack(AttackTypes.blast, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Explosion(Explosions.muddy, Dice.Zero); // TODO: 'water crash' is probably not the right sfx.
          K.Apply.HarmEntity(Elements.physical, 4.d6());
          K.Apply.Digging(Elements.digging);
          K.Apply.WhenChance(Chance.OneIn2, T => T.ConvertGround(FromGround: Codex.Grounds.water, ToGround: Codex.Grounds.dirt, Locality.Square)); // TODO: would prefer this only happened on one square instead of 9?
        });
        E.Chemistry.SetWeakness(Elements.disintegrate, Elements.digging);
        E.AddReaction(Chance.Always, Elements.petrify, A => A.HealEntity(4.d6(), Modifier.Zero));
        E.DropLoot.AddKit(4.d4() + 1, Items.rock);
        E.SetCorpse(Chance.Never);
      });

      shock_sphere = AddEntity(Kinds.elemental, null, "shock sphere", E =>
      {
        E.Glyph = Glyphs.shock_sphere;
        E.Sonic = Sonics.electricity;
        E.Level = 11;
        E.Challenge = 156;
        E.Difficulty = 13;
        E.Frequency = 2;
        E.Defence = NewEyeDefence(15); // +3 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.electricity,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 16, CON: 8, INT: 7, WIS: 8, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.levitation);
        E.Startup.SetResistance(Elements.shock);
        E.AddAttack(AttackTypes.blast, Elements.shock, Dice.Zero, K =>
        {
          K.SetCast().Explosion(Explosions.electric, Dice.Zero);
          K.Apply.HarmEntity(Elements.shock, 5.d6());
          K.Apply.WhenChance(Chance.OneIn5, T => T.CreateVolatile(Volatiles.electricity, 1.d50() + 50));
        });
        E.SetCorpse(Chance.Never);
      });

      air_elemental = AddEntity(Kinds.elemental, null, "air elemental", E =>
      {
        E.Glyph = Glyphs.air_elemental;
        E.Sonic = Sonics.gas;
        E.Level = 18;
        E.Challenge = 505;
        E.Difficulty = 20;
        E.Frequency = 2;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // 5+ from dex = 22
        E.SetDiet(Diets.inediate);
        E.SetTerrain(Materials.air);
        E.Speed = Speed.S7_5;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.air,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 20, CON: 14, INT: 6, WIS: 10, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.vitality, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.poison, Elements.petrify);
        E.SetEngulf(Strikes.force, A => A.HarmEntity(Elements.physical, 1.d12()));
        E.AddAttack(AttackTypes.engulf, Elements.physical, 1.d12(), K => // +2 from str.
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 1.d6() + 2);
        });
        E.AddAttack(AttackTypes.engulf, Elements.physical, 1.d12(), K => // +2 from str.
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 1.d6() + 2);
        });
        E.SetCorpse(Chance.Never);
      });

      ice_elemental = AddEntity(Kinds.elemental, null, "ice elemental", E =>
      {
        E.Glyph = Glyphs.ice_elemental;
        E.Sonic = Sonics.freeze;
        E.Level = 20;
        E.Challenge = 605;
        E.Difficulty = 22;
        E.Frequency = 2;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex = 21
        E.SetTerrain(Materials.air, Materials.ice, Materials.water);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(120000);
        E.Figure.Set
        (
          Material: Materials.ice,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 12, CON: 16, INT: 6, WIS: 10, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.free_action, Properties.slippery, Properties.vitality, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.claw, Elements.cold, 5.d5());
        E.AddAttack(AttackTypes.claw, Elements.cold, 5.d5());
        E.AddRetaliation(Chance.OneIn3, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.frost, Dice.One);
          R.Apply.HarmEntity(Elements.cold, 10.d4());
          R.Apply.WhenChance(Chance.OneIn4, T => T.CreateVolatile(Volatiles.freeze, 1.d50() + 50));
        });
        E.AddReaction(Chance.Always, Elements.cold, A => A.HealEntity(4.d8(), Modifier.Zero));
        E.SetCorpse(Chance.Never);
      });

      earth_elemental = AddEntity(Kinds.elemental, null, "earth elemental", E =>
      {
        E.Glyph = Glyphs.earth_elemental;
        E.Sonic = Sonics.scrape;
        E.Level = 16;
        E.Challenge = 405;
        E.Difficulty = 18;
        E.Frequency = 2;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // -1 from dex = 20
        E.SetTerrain(Materials.air);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(90000);
        E.Figure.Set
        (
          Material: Materials.stone,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 8, CON: 20, INT: 5, WIS: 10, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality, Properties.life_regeneration, Properties.phasing);
        E.Startup.SetResistance(Elements.cold, Elements.fire, Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.punch, Elements.physical, 6.d6()); // +5 from strength.
        E.SetCorpse(Chance.Never);
      });

      fire_elemental = AddEntity(Kinds.elemental, null, "fire elemental", E =>
      {
        E.Glyph = Glyphs.fire_elemental;
        E.Sonic = Sonics.burn;
        E.Level = 14;
        E.Challenge = 327;
        E.Difficulty = 16;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +3 from dex = 18
        E.SetTerrain(Materials.air, Materials.fire, Materials.lava);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.fire,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 17, CON: 16, INT: 6, WIS: 10, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.vitality, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.claw, Elements.fire, 5.d4());
        E.AddAttack(AttackTypes.claw, Elements.fire, 5.d4());
        E.AddRetaliation(Chance.OneIn3, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.flame, Dice.One);
          R.Apply.HarmEntity(Elements.fire, 10.d4());
          R.Apply.WhenChance(Chance.OneIn4, T => T.CreateVolatile(Volatiles.blaze, 1.d50() + 50));
        });
        E.AddReaction(Chance.Always, Elements.fire, A => A.HealEntity(4.d8(), Modifier.Zero));
        E.SetCorpse(Chance.Never);
      });

      stalker = AddEntity(Kinds.elemental, null, "stalker", E =>
      {
        E.Glyph = Glyphs.stalker;
        E.Level = 8;
        E.Challenge = 65;
        E.Difficulty = 9;
        E.Frequency = 3;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +4 from dex = 17
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(9000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 19, CON: 14, INT: 10, WIS: 15, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.invisibility);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4()); // +3 from strength.
        E.Conveyance.ApplyTransient(Properties.invisibility, 1.d100() + 50);
        E.Conveyance.ApplyTransient(Properties.stunned, Dice.Fixed(+60));
        E.SetCorpse(Chance.Always);
      });

      water_elemental = AddEntity(Kinds.elemental, null, "water elemental", E =>
      {
        E.Glyph = Glyphs.water_elemental;
        E.Sonic = Sonics.water_splash;
        E.Level = 12;
        E.Challenge = 226;
        E.Difficulty = 14;
        E.Frequency = 2;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +2 from dex = 18
        E.SetTerrain(Materials.water, Materials.air);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200000);
        E.Figure.Set
        (
          Material: Materials.water,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 18, INT: 5, WIS: 10, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent(Properties.vitality, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d6(), A => A.Apply.SpecialDisarm()); // +4 from str.
        E.AddReaction(Chance.Always, Elements.water, A => A.HealEntity(4.d6(), Modifier.Zero));
        E.SetCorpse(Chance.Never);
      });

      dao = AddEntity(Kinds.elemental, null, "dao", E =>
      {
        E.Glyph = Glyphs.dao;
        E.Sonic = Sonics.chant;
        E.Level = 7;
        E.Challenge = 55;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +1 from dex = 16.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(19000);
        E.Figure.Set
        (
          Material: Materials.stone,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 23, DEX: 12, CON: 24, INT: 12, WIS: 13, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.phasing);
        E.Startup.SetResistance(Elements.petrify, Elements.poison);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5()); // +6 from str.
        E.SetCorpse(Chance.Never);
      });

      djinni = AddEntity(Kinds.elemental, null, "djinni", E =>
      {
        E.Glyph = Glyphs.djinni;
        E.Level = 17;
        E.Challenge = 455;
        E.Difficulty = 18;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex = 20.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 15, CON: 22, INT: 15, WIS: 16, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.phasing, Properties.free_action, Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6()); // +5 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6()); // +5 from str.
        E.SetCorpse(Chance.Never);
      });

      efreeti = AddEntity(Kinds.elemental, null, "efreeti", E =>
      {
        E.Glyph = Glyphs.efreeti;
        E.Sonic = Sonics.burn;
        E.Level = 37;
        E.Challenge = 2055;
        E.Difficulty = 38;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +1 from dex = 16.
        E.SetTerrain(Materials.fire, Materials.air);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.fire,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 12, CON: 24, INT: 16, WIS: 15, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.shock, Elements.fire, Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4()); // +6 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4()); // +6 from str.
        E.AddRetaliation(Chance.OneIn3, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.flame, Dice.One);
          R.Apply.HarmEntity(Elements.fire, 4.d8() + 4);
          R.Apply.WhenChance(Chance.OneIn2, T => T.CreateVolatile(Volatiles.blaze, 1.d100() + 50));
        });
        E.Chemistry.SetWeakness(Elements.cold, Elements.water);
        E.SetCorpse(Chance.Never);
      });

      marid = AddEntity(Kinds.elemental, null, "marid", E =>
      {
        E.Glyph = Glyphs.marid;
        E.Sonic = Sonics.chant;
        E.Level = 27;
        E.Challenge = 979;
        E.Difficulty = 28;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +4 from dex = 25.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 18, CON: 26, INT: 18, WIS: 17, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 7.d3()); // +6 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 7.d3());
        E.AddReaction(Chance.OneIn2, Elements.water, A => A.HealEntity(4.d4(), Modifier.Zero));
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });
      #endregion

      #region elf.
      drow = AddEntity(Kinds.elf, Races.elf, "drow", E =>
      {
        E.Glyph = Glyphs.drow;
        E.Level = 10;
        E.Challenge = 225;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false, // drow are not infravisible.
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 16, CON: 12, INT: 15, WIS: 15, CHA: 13);
        E.LimitForm.Set(STR: 18, DEX: 18, CON: 16, INT: 20, WIS: 20, CHA: 18);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.bow, Skills.light_armour, Skills.light_blade, Skills.medium_blade, Skills.necromancy, Skills.literacy);
        E.Startup.SetTalent(Properties.dark_vision, Properties.see_invisible); // drow do not have darkvision in Nethack lore, but it doesn't make sense.
        E.Startup.SetResistance(Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.darkness);
        E.Startup.Loot.AddKit(Chance.Always, Items.dark_elven_bow);
        E.Startup.Loot.AddKit(Chance.Always, 3.d6(), Items.dark_elven_arrow);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dark_elven_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.dark_elven_short_sword);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.dark_elven_dagger);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4(), K =>
        {
          K.Apply.ApplyTransient(Properties.sleeping, 2.d4());
        });
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.OneIn3);
      });

      Earendil = AddUniqueEntity(Kinds.elf, Races.elf, "Earendil", E =>
      {
        E.Glyph = Glyphs.Earendil;
        E.Level = 20;
        E.Challenge = 963;
        E.Difficulty = 22;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 24, CON: 14, INT: 20, WIS: 20, CHA: 22);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.sleep, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8());
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.Always);
      });

      elf_king = AddEntity(Kinds.elf, Races.elf, "elf king", E =>
      {
        E.Glyph = Glyphs.elf_king;
        E.Level = 22;
        E.Challenge = 713;
        E.Difficulty = 24;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 19, DEX: 19, CON: 15, INT: 16, WIS: 15, CHA: 23);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.spear, Skills.light_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision);
        E.Startup.SetResistance(Elements.sleep);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, Dice.One, Sanctities.Blessed, Modifier.Plus1to3, [Items.elven_spear]);
        E.Startup.Loot.AddKit(Chance.Always, Items.elven_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn5, Dice.One, Stocks.wand);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d2() - 1, green_elf);
          A.Apply.SummonEntity(1.d2() - 1, grey_elf);
          A.Apply.SummonEntity(1.d2() - 1, high_elf);
          A.Apply.SummonEntity(1.d2() - 1, woodland_elf);
        });
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.OneIn3);
      });

      elf_lord = AddEntity(Kinds.elf, Races.elf, "elf lord", E =>
      {
        E.Glyph = Glyphs.elf_lord;
        E.Level = 20;
        E.Challenge = 636;
        E.Difficulty = 22;
        E.Frequency = 2;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(11000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 15, CON: 13, INT: 15, WIS: 15, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.heavy_blade, Skills.light_blade);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision);
        E.Startup.SetResistance(Elements.sleep);
        E.Startup.Loot.AddKit(Modifier.Plus0to3, Items.elven_broadsword);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.elven_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6()); // +3 from str.
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.OneIn3);
      });

      Elwing = AddUniqueEntity(Kinds.elf, Races.elf, "Elwing", E =>
      {
        E.Glyph = Glyphs.Elwing;
        E.Level = 20;
        E.Challenge = 963;
        E.Difficulty = 22;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(11000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 24, CON: 14, INT: 20, WIS: 20, CHA: 22);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.sleep, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8());
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.Always);
      });

      green_elf = AddEntity(Kinds.elf, Races.elf, "green elf", E =>
      {
        E.Glyph = Glyphs.green_elf;
        E.Level = 10;
        E.Challenge = 189;
        E.Difficulty = 12;
        E.Frequency = 3;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 13, CON: 11, INT: 14, WIS: 15, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_armour, Skills.light_armour, Skills.light_blade, Skills.heavy_blade, Skills.literacy, Skills.bow);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision);
        E.Startup.SetResistance(Elements.sleep);
        E.Startup.Loot.AddKit(Chance.Always, Items.elven_bow);
        E.Startup.Loot.AddKit(Chance.Always, 4.d6(), Items.elven_arrow);
        E.Startup.Loot.AddKit(Chance.OneIn5, Items.elven_broadsword);
        E.Startup.Loot.AddKit(Chance.OneIn5, Items.elven_shield);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.elven_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.elven_leather_helm);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.elven_dagger);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.elven_cloak);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8()); // +1 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8());
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.OneIn3);
      });

      grey_elf = AddEntity(Kinds.elf, Races.elf, "grey elf", E =>
      {
        E.Glyph = Glyphs.grey_elf;
        E.Level = 14;
        E.Challenge = 242;
        E.Difficulty = 16;
        E.Frequency = 3;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +1 from dex = 14.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 13, CON: 12, INT: 14, WIS: 15, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_blade, Skills.light_armour, Skills.medium_blade, Skills.enchantment, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision);
        E.Startup.SetResistance(Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn5, Items.elven_short_sword);
        E.Startup.Loot.AddKit(Chance.OneIn10, 2.d4(), Items.elven_dagger);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.elven_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn10, 5.d100(), Items.gold_coin);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4()); // +1 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4());
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.OneIn3);
      });

      high_elf = AddEntity(Kinds.elf, Races.elf, "high elf", E =>
      {
        E.Glyph = Glyphs.high_elf;
        E.Level = 17;
        E.Challenge = 427;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(11000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 15, CON: 12, INT: 15, WIS: 15, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_blade, Skills.light_armour, Skills.medium_armour, Skills.spear, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision);
        E.Startup.SetResistance(Elements.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn5, Items.elven_shield);
        E.Startup.Loot.AddKit(Chance.OneIn5, Items.elven_spear);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.elven_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.elven_leather_helm);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.elven_cloak);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.elven_boots);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d3()); // +3 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d3());
        E.AddAttack(AttackTypes.spell, Elements.physical, 2.d16());
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.OneIn3);
      });

      woodland_elf = AddEntity(Kinds.elf, Races.elf, "woodland elf", E =>
      {
        E.Glyph = Glyphs.woodland_elf;
        E.Level = 7;
        E.Challenge = 60;
        E.Difficulty = 9;
        E.Frequency = 3;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(9000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 13, CON: 10, INT: 13, WIS: 13, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.bow, Skills.light_armour, Skills.light_blade);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision);
        E.Startup.SetResistance(Elements.sleep);
        E.Startup.Loot.AddKit(Chance.Always, Items.elven_bow);
        E.Startup.Loot.AddKit(Chance.Always, 3.d6(), Items.elven_arrow);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.elven_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.elven_dagger);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.elven_boots);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d7()); // +1 from dex.
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region eye.
      Defence NewEyeDefence(int Defence) => new Defence(Defence, P: -1, S: +0, B: +1);

      beholder = AddEntity(Kinds.eye, null, "beholder", E =>
      {
        E.Glyph = Glyphs.beholder;
        E.Level = 32;
        E.Challenge = 1508;
        E.Difficulty = 34;
        E.Frequency = 1;
        E.Defence = NewEyeDefence(26); // +1 from dex=27.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(25000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 13, CON: 15, INT: 14, WIS: 11, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.levitation, Properties.life_regeneration, Properties.clarity);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6()); // +2 from str.
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.magic, 2.d4() + 4)
           .SetReflects();
          K.Apply.HarmEntity(Elements.physical, 4.d9());
        });
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.psychic, 2.d4() + 4)
           .SetReflects();
          K.Apply.ApplyTransient(Properties.stunned, 3.d3());
        });
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.psychic, 2.d4() + 4)
           .SetReflects();
          K.Apply.ApplyTransient(Properties.confusion, 3.d3());
        });
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.gas, 2.d4() + 4)
           .SetReflects();
          K.Apply.ApplyTransient(Properties.sleeping, 5.d4());
        });
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.death, 2.d4() + 4)
           .SetReflects();
          K.Apply.Death(Elements.magical, Kinds.Living.ToArray(), Strikes.death, Cause: null);
        });
        E.Conveyance.MajorProperty(Properties.hallucination);
        E.SetCorpse(Chance.Always);
      });

      blinking_eye = AddEntity(Kinds.eye, null, "blinking eye", E =>
      {
        E.Glyph = Glyphs.blinking_eye;
        E.Level = 7;
        E.Challenge = 76;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = NewEyeDefence(16); // +2 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 15, CON: 11, INT: 4, WIS: 6, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.blinking, Properties.levitation, Properties.life_regeneration);
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.boost, 2.d4() + 4)
           .SetObjects()
           .SetReflects()
           .SetBeholds();
          K.Apply.TeleportEntity(Properties.teleportation);
          K.Apply.TeleportFloorItem();
          K.Apply.ApplyTransient(Properties.teleportation, 50.d3());
        });
        E.Conveyance.MajorProperty(Properties.blinking);
        E.SetCorpse(Chance.OneIn3);
      });

      bloodshot_eye = AddEntity(Kinds.eye, null, "bloodshot eye", E =>
      {
        E.Glyph = Glyphs.bloodshot_eye;
        E.Level = 21;
        E.Challenge = 406;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.Defence = NewEyeDefence(13); // +3 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 16, CON: 8, INT: 4, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.levitation, Properties.life_regeneration);
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.psychic, 2.d4() + 4)
           .SetReflects()
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.stunned, 5.d3()); // TODO: rage instead?
        });
        E.Conveyance.ApplyTransient(Properties.hallucination, Dice.Fixed(+200));
        E.Conveyance.PunishEntity(Codex.Punishments.psychosis);
        E.SetCorpse(Chance.OneIn3);
      });

      floating_eye = AddEntity(Kinds.eye, null, "floating eye", E =>
      {
        E.Glyph = Glyphs.floating_eye;
        E.Level = 2;
        E.Challenge = 7;
        E.Difficulty = 3;
        E.Frequency = 6;
        E.Defence = NewEyeDefence(8); // +3 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S1_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: true,
          Voice: false,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 16, CON: 6, INT: 7, WIS: 6, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.levitation, Properties.life_regeneration);
        E.AddLivingRetaliation(Chance.OneIn3, AttackTypes.gaze, R =>
        {
          R.SetCast().Strike(Strikes.spirit, Dice.One)
           .SetReflects()
           .SetBeholds();
          R.Apply.ApplyTransient(Properties.paralysis, 3.d70());
        });
        E.Conveyance.MajorProperty(Properties.telepathy);
        E.SetCorpse(Chance.OneIn3);
      });

      gas_spore = AddEntity(Kinds.eye, null, "gas spore", E =>
      {
        E.Glyph = Glyphs.gas_spore;
        E.Level = 1;
        E.Challenge = 6;
        E.Difficulty = 2;
        E.Frequency = 1;
        E.Defence = NewEyeDefence(15); // -5 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 5, DEX: 1, CON: 3, INT: 1, WIS: 1, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.levitation);
        E.Startup.SetResistance(Elements.sleep);
        E.AddDyingRetaliation(Chance.Always, AttackTypes.blast, R =>
        {
          R.SetCast().Explosion(Explosions.acid, Dice.Zero);
          R.Apply.HarmEntity(Elements.physical, 4.d6());
        });
        E.SetCorpse(Chance.Never);
      });

      glowing_eye = AddEntity(Kinds.eye, null, "glowing eye", E =>
      {
        E.Glyph = Glyphs.glowing_eye;
        E.Level = 5;
        E.Challenge = 34;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = NewEyeDefence(13); // +3 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 16, CON: 8, INT: 4, WIS: 6, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.levitation, Properties.life_regeneration);
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.flash, 2.d4() + 4)
           .SetReflects()
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.blindness, 3.d4());
        });
        E.AddLivingRetaliation(Chance.OneIn3, AttackTypes.gaze, R =>
        {
          R.SetCast().Strike(Strikes.flash, Dice.One)
           .SetReflects()
           .SetBeholds();
          R.Apply.ApplyTransient(Properties.blindness, 3.d70());
        });
        E.AddDyingRetaliation(Chance.Always, AttackTypes.blast, R =>
        {
          R.SetCast().Explosion(Explosions.light, Dice.Zero);
          R.Apply.Light(true, Locality.Area);
          R.Apply.ApplyTransient(Properties.blindness, 3.d70());
        });
        E.Conveyance.TradeoffAbility(Attributes.wisdom, Attributes.strength);
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region feline.
      caterwaul = AddEntity(Kinds.cat, null, "caterwaul", E =>
      {
        E.Glyph = Glyphs.caterwaul;
        E.Sonic = Sonics.meow;
        E.Level = 6;
        E.Challenge = 42;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S7_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 16, CON: 10, INT: 5, WIS: 14, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.stealth);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6());
        E.AddAttack(AttackTypes.shriek, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.shriek, 4.d2() + 1)
           .SetTerminates();
          K.Apply.Alert(2.d6() + 2);
          K.Apply.Shout(Dice.Fixed(10), A => A.HarmEntity(Elements.physical, 1.d4() + 1));
        });
        E.SetCorpse(Chance.OneIn3);
      });

      displacer_beast = AddEntity(Kinds.cat, null, "displacer beast", E =>
      {
        E.Glyph = Glyphs.displacer_beast;
        E.Sonic = Sonics.growl;
        E.Level = 30;
        E.Challenge = 1450;
        E.Difficulty = 32;
        E.Frequency = 1;
        E.Defence = new Defence(D: 26, P: +0, S: +0, B: +0); // +2 from dex, +2 from displacement = 30.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(23000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 15, CON: 16, INT: 6, WIS: 12, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.stealth, Properties.displacement);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d5()); // +4 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d5());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8());
        E.SetCorpse(Chance.Always);
        E.Conveyance.MinorProperty(Properties.displacement);
      });

      hellcat = AddEntity(Kinds.cat, null, "hellcat", E =>
      {
        E.Glyph = Glyphs.hellcat;
        E.Sonic = Sonics.meow;
        E.Level = 19;
        E.Challenge = 531;
        E.Difficulty = 21;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +3 from dex = 22.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(24000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 19, DEX: 17, CON: 15, INT: 10, WIS: 14, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.fire);
        E.Startup.SetTalent(Properties.stealth, Properties.beatitude);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4()); // +4 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d3());
        E.AddAttack(AttackTypes.bite, Elements.fire, 6.d5());
        E.SetCorpse(Chance.Always);
      });

      housecat = AddDomesticEntity(Kinds.cat, null, "housecat", E =>
      {
        E.Glyph = Glyphs.housecat;
        E.Sonic = Sonics.meow;
        E.Level = 4;
        E.Challenge = 20;
        E.Difficulty = 5;
        E.Frequency = 7;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2 DEX
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 16, CON: 12, INT: 3, WIS: 12, CHA: 7);
        E.LimitForm.Set(STR: 20, DEX: 20, CON: 20, INT: 10, WIS: 20, CHA: 20);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.stealth, Properties.beatitude);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6());
        E.AddReaction(Chance.OneIn2, Elements.water, A => A.ApplyTransient(Properties.fear, 2.d6() + 2));
        E.SetCorpse(Chance.Always);
      });

      jaguar = AddEntity(Kinds.cat, null, "jaguar", E =>
      {
        E.Glyph = Glyphs.jaguar;
        E.Sonic = Sonics.growl;
        E.Level = 16;
        E.Challenge = 374;
        E.Difficulty = 18;
        E.Frequency = 2;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(9500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 15, CON: 10, INT: 3, WIS: 14, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.stealth, Properties.beatitude);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d3()); // +2 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d3());
        E.AddAttack(AttackTypes.bite, Elements.physical, 5.d2());
        E.SetCorpse(Chance.Always);
      });

      kamadan = AddEntity(Kinds.cat, null, "kamadan", E =>
      {
        E.Glyph = Glyphs.kamadan;
        E.Sonic = Sonics.growl;
        E.Level = 9;
        E.Challenge = 161;
        E.Difficulty = 12;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +2 from dex = 19.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 15, CON: 15, INT: 5, WIS: 12, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.stealth);
        E.Startup.SetResistance(Elements.sleep);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d5()); // +4 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d5());
        //E.AddAttack(AttackTypes.Bite, Elements.Physical, 1.d3());
        E.AddAttack(AttackTypes.breath, Elements.sleep, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.sleep, 1.d5() + 5);
          K.Apply.ApplyTransient(Properties.sleeping, 1.d6());
        });
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.Always);
      });

      kitten = AddDomesticEntity(Kinds.cat, null, "kitten", E =>
      {
        E.Glyph = Glyphs.kitten;
        E.Sonic = Sonics.meow;
        E.Level = 2;
        E.Challenge = 8;
        E.Difficulty = 3;
        E.Frequency = 7;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +2 DEX
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(1500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 14, CON: 10, INT: 3, WIS: 12, CHA: 7);
        E.LimitForm.Set(STR: 20, DEX: 20, CON: 20, INT: 10, WIS: 20, CHA: 20);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.stealth, Properties.beatitude);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6());
        E.AddReaction(Chance.Always, Elements.water, A => A.ApplyTransient(Properties.fear, 2.d6() + 2));
        E.SetCorpse(Chance.Always);
      });

      large_cat = AddDomesticEntity(Kinds.cat, null, "large cat", E =>
      {
        E.Glyph = Glyphs.large_cat;
        E.Sonic = Sonics.meow;
        E.Level = 6;
        E.Challenge = 40;
        E.Difficulty = 7;
        E.Frequency = 7;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +2 DEX
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 18, CON: 14, INT: 3, WIS: 12, CHA: 7);
        E.LimitForm.Set(STR: 20, DEX: 20, CON: 20, INT: 10, WIS: 20, CHA: 20);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.stealth, Properties.beatitude, Properties.searching);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4());
        E.AddReaction(Chance.OneIn4, Elements.water, A => A.ApplyTransient(Properties.fear, 2.d6() + 2));
        E.SetCorpse(Chance.Always);
      });

      lynx = AddEntity(Kinds.cat, null, "lynx", E =>
      {
        E.Glyph = Glyphs.lynx;
        E.Sonic = Sonics.growl;
        E.Level = 11;
        E.Challenge = 208;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 17, CON: 10, INT: 3, WIS: 14, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.stealth, Properties.beatitude);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5()); // +1 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d7());
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d3());
        E.SetCorpse(Chance.OneIn3);
      });

      panther = AddEntity(Kinds.cat, null, "panther", E =>
      {
        E.Glyph = Glyphs.panther;
        E.Sonic = Sonics.growl;
        E.Level = 7;
        E.Challenge = 45;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 15, CON: 10, INT: 3, WIS: 14, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.stealth, Properties.beatitude);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d2()); // +2 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d5());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d8());
        E.SetCorpse(Chance.Always);
      });

      sabretoothed_cat = AddEntity(Kinds.cat, null, "sabre-toothed cat", E =>
      {
        E.Glyph = Glyphs.sabretoothed_cat;
        E.Sonic = Sonics.growl;
        E.Level = 23;
        E.Challenge = 691;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 16, CON: 15, INT: 3, WIS: 12, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.stealth, Properties.beatitude);
        E.AddAttack(AttackTypes.claw, Elements.physical, 7.d3()); // +4 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 5.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 6.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d7());
        E.SetCorpse(Chance.Always);
      });

      tiger = AddEntity(Kinds.cat, null, "tiger", E =>
      {
        E.Glyph = Glyphs.tiger;
        E.Sonic = Sonics.growl;
        E.Level = 12;
        E.Challenge = 252;
        E.Difficulty = 15;
        E.Frequency = 2;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2 from dex = 15.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(50000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 15, CON: 14, INT: 3, WIS: 12, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.stealth, Properties.beatitude);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d2()); // +3 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d6());
        E.AddAttack(AttackTypes.bite, Elements.physical, 5.d3());
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region fungus.
      black_mould = AddEntity(Kinds.fungus, null, "black mould", E =>
      {
        E.Glyph = Glyphs.black_mould;
        E.Sonic = Sonics.burble;
        E.Level = 6;
        E.Challenge = 61;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -5 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 2, DEX: 1, CON: 12, INT: 1, WIS: 3, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddRetaliation(Chance.Always, AttackTypes.spore, R =>
        {
          R.SetCast().Strike(Strikes.venom, Dice.One);
          R.Apply.HarmEntity(Elements.poison, 7.d4());
          R.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddRetaliation(Chance.OneIn2, AttackTypes.spore, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 1.d8());
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      brown_mould = AddEntity(Kinds.fungus, null, "brown mould", E =>
      {
        E.Glyph = Glyphs.brown_mould;
        E.Sonic = Sonics.burble;
        E.Level = 1;
        E.Challenge = 4;
        E.Difficulty = 2;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -5 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 3, DEX: 1, CON: 10, INT: 1, WIS: 2, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.AddReaction(Chance.Always, Elements.cold, A =>
        {
          A.HealEntity(6.d6(), Modifier.Zero);
          A.CloneTargetEntity(Dice.One);
        });
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.cold, Elements.poison);
        E.AddRetaliation(Chance.OneIn3, AttackTypes.spore, R =>
        {
          R.SetCast().Strike(Strikes.frost, Dice.One);
          R.Apply.HarmEntity(Elements.cold, 2.d6());
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.SetCorpse(Chance.OneIn3);
      });

      disgusting_mould = AddEntity(Kinds.fungus, null, "disgusting mould", E =>
      {
        E.Glyph = Glyphs.disgusting_mould;
        E.Sonic = Sonics.burble;
        E.Level = 5;
        E.Challenge = 46;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -5 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 2, DEX: 1, CON: 11, INT: 1, WIS: 3, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddRetaliation(Chance.Always, AttackTypes.spore, R =>
        {
          R.SetCast().Strike(Strikes.venom, Dice.One);
          R.Apply.HarmEntity(Elements.poison, 1.d8());
          R.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddRetaliation(Chance.OneIn2, AttackTypes.spore, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 2.d4());
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      green_mould = AddEntity(Kinds.fungus, null, "green mould", E =>
      {
        E.Glyph = Glyphs.green_mould;
        E.Sonic = Sonics.burble;
        E.Level = 1;
        E.Challenge = 4;
        E.Difficulty = 2;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -5 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 3, DEX: 1, CON: 10, INT: 1, WIS: 2, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.acid, Elements.petrify);
        E.AddRetaliation(Chance.OneIn2, AttackTypes.spore, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 2.d4());
        });
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.OneIn3);
      });

      lichen = AddEntity(Kinds.fungus, null, "lichen", E =>
      {
        E.Glyph = Glyphs.lichen;
        E.Sonic = Sonics.burble;
        E.Level = 0;
        E.Challenge = 1;
        E.Difficulty = 1;
        E.Frequency = 4;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -5 from dex.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,

          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d4());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 1, DEX: 1, CON: 5, INT: 1, WIS: 1, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.SetCorpse(Chance.OneIn3);
      });

      red_mould = AddEntity(Kinds.fungus, null, "red mould", E =>
      {
        E.Glyph = Glyphs.red_mould;
        E.Sonic = Sonics.burble;
        E.Level = 1;
        E.Challenge = 4;
        E.Difficulty = 2;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -5 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 3, DEX: 1, CON: 10, INT: 1, WIS: 2, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.fire, Elements.poison);
        E.AddRetaliation(Chance.OneIn3, AttackTypes.spore, R =>
        {
          R.SetCast().Strike(Strikes.flame, Dice.One);
          R.Apply.HarmEntity(Elements.fire, 2.d4());
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.fire));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.SetCorpse(Chance.OneIn3);
      });

      shrieker = AddEntity(Kinds.fungus, null, "shrieker", E =>
      {
        E.Glyph = Glyphs.shrieker;
        E.Sonic = Sonics.shriek;
        E.Level = 3;
        E.Challenge = 10;
        E.Difficulty = 2;
        E.Frequency = 2;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -5 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 1, DEX: 1, CON: 10, INT: 1, WIS: 3, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
        E.AddAttack(AttackTypes.shriek, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.shriek, Dice.Zero)
           .SetTerminates();
          K.Apply.Alert(2.d6() + 2);
          K.Apply.Shout(Dice.Fixed(10), A => A.ApplyTransient(Properties.deafness, 4.d6() + 4));
        });
      });

      violet_fungus = AddEntity(Kinds.fungus, null, "violet fungus", E =>
      {
        E.Glyph = Glyphs.violet_fungus;
        E.Sonic = Sonics.burble;
        E.Level = 3;
        E.Challenge = 19;
        E.Difficulty = 5;
        E.Frequency = 2;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -5 from dex = 13.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 3, DEX: 1, CON: 10, INT: 1, WIS: 3, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.touch, Elements.physical, 1.d4());
        E.Conveyance.ApplyTransient(Properties.hallucination, Dice.Fixed(+200));
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      yellow_mould = AddEntity(Kinds.fungus, null, "yellow mould", E =>
      {
        E.Glyph = Glyphs.yellow_mould;
        E.Sonic = Sonics.burble;
        E.Level = 1;
        E.Challenge = 3;
        E.Difficulty = 2;
        E.Frequency = 2;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -5 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 3, DEX: 1, CON: 10, INT: 1, WIS: 2, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddRetaliation(Chance.OneIn3, AttackTypes.spore, R =>
        {
          R.SetCast().Strike(Strikes.psychic, Dice.One);
          R.Apply.ApplyTransient(Properties.stunned, 2.d4());
        });
        E.Conveyance.ApplyTransient(Properties.hallucination, Dice.Fixed(+200));
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region ghost.
      banshee = AddEntity(Kinds.ghost, null, "banshee", E =>
      {
        E.Glyph = Glyphs.banshee;
        E.Sonic = Sonics.moan;
        E.Level = 21;
        E.Challenge = 678;
        E.Difficulty = 24;
        E.Frequency = 1;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // +3 from dex = 27.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.ether,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 16, CON: 10, INT: 10, WIS: 12, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight, Properties.vitality, Properties.phasing);
        E.Startup.SetResistance(Elements.cold, Elements.disintegrate, Elements.poison, Elements.drain, Elements.sleep, Elements.petrify);
        E.AddAttack(AttackTypes.touch, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.shriek, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.wail, Dice.Zero)
           .SetTerminates(); // zero range so don't strike your steed.
          K.Apply.Alert(3.d6() + 3);
          K.Apply.Shout(Dice.Fixed(10), A => A.WhenTargetHasProperty(Properties.fear, 
            T => T.Death(Elements.magical, Kinds.Living.ToArray(), Strikes.death, DeathSupport.fright), 
            F => F.WhenTargetKind(Kinds.Living, W => W.ApplyTransient(Properties.fear, 3.d4() + 3))));
        });
        E.SetCorpse(Chance.Never);
      });

      ghost = AddEntity(Kinds.ghost, null, "ghost", E =>
      {
        E.Glyph = Glyphs.ghost;
        E.Sonic = Sonics.moan;
        E.Level = 10;
        E.Challenge = 178;
        E.Difficulty = 12;
        E.Frequency = 0; // graveyard zoo.
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // +1 from dex = 25.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.ether,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 7, DEX: 13, CON: 10, INT: 10, WIS: 12, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight, Properties.vitality, Properties.phasing);
        E.Startup.SetResistance(Elements.cold, Elements.disintegrate, Elements.poison, Elements.drain, Elements.sleep, Elements.petrify);
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.One);
        E.SetCorpse(Chance.Never);
      });

      shade = AddEntity(Kinds.ghost, null, "shade", E =>
      {
        E.Glyph = Glyphs.shade;
        E.Sonic = Sonics.moan;
        E.Level = 12;
        E.Challenge = 309;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.ether,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 7, DEX: 11, CON: 11, INT: 11, WIS: 13, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight, Properties.vitality, Properties.phasing);
        E.Startup.SetResistance(Elements.cold, Elements.disintegrate, Elements.poison, Elements.drain, Elements.sleep, Elements.petrify);
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.ApplyTransient(Properties.paralysis, 2.d6());
        });
        E.AddAttack(AttackTypes.touch, Elements.physical, 3.d3(), K => // -2 from str.
        {
          K.Apply.ApplyTransient(Properties.slowness, 1.d6());
        });
        E.SetCorpse(Chance.Never);
      });

      shadow = AddEntity(Kinds.ghost, null, "shadow", E =>
      {
        E.Glyph = Glyphs.shadow;
        E.Sonic = Sonics.moan;
        E.Level = 4;
        E.Challenge = 67;
        E.Difficulty = 6;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +2 from dex = 16.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.ether,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 14, CON: 13, INT: 6, WIS: 10, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.flight, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.disintegrate, Elements.poison, Elements.drain, Elements.sleep, Elements.petrify);
        E.AddAttack(AttackTypes.touch, Elements.physical, 1.d4(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.touch, Elements.cold, 1.d4());
        E.SetCorpse(Chance.Never);
      });
      #endregion

      #region giant.
      var GiantWeight = Weight.FromUnits(110000);

      cyclops = AddEntity(Kinds.giant, Races.giant, "cyclops", E =>
      {
        E.Glyph = Glyphs.cyclops;
        E.Sonic = Sonics.grumble;
        E.Level = 23;
        E.Challenge = 1005;
        E.Difficulty = 28;
        E.Frequency = 1;
        E.Defence = new Defence(D: 26, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S4_5;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d10());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 11, CON: 20, INT: 8, WIS: 6, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.club);
        E.Startup.SetTalent(Properties.dark_vision, Properties.clarity, Properties.free_action);
        E.Startup.SetResistance(Elements.petrify);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 12.d5()); // +6 from str.
        E.AddAttack(AttackTypes.kick, Elements.physical, 8.d4());
        E.Conveyance.TradeoffAbility(Attributes.strength, Attributes.intelligence);
        E.SetCorpse(Chance.Always);
      });

      ettin = AddEntity(Kinds.giant, Races.ettin, "ettin", E =>
      {
        E.Glyph = Glyphs.ettin;
        E.Sonic = Sonics.grumble;
        E.Level = 22;
        E.Challenge = 658;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.Defence = new Defence(D: 26, P: +0, S: +0, B: +0); // -1 from dex = 25.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_7;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(93000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 8, CON: 17, INT: 6, WIS: 10, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.club, Skills.dual_wielding);
        E.Startup.SetTalent(Properties.dark_vision);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d5()); // +5 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d5());
        E.AddAttack(AttackTypes.kick, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.kick, Elements.physical, 2.d8());
        E.SetCorpse(Chance.Always);
      });

      Father_Dagon = AddUniqueEntity(Kinds.giant, Races.giant, "Father Dagon", E =>
      {
        E.Glyph = Glyphs.Father_Dagon;
        E.Sonic = Sonics.grumble;
        E.Level = 80;
        E.Challenge = 12388;
        E.Difficulty = 85;
        E.Frequency = 0;
        E.Defence = new Defence(D: 27, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S5_0;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2000000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 30, DEX: 16, CON: 30, INT: 16, WIS: 18, CHA: 24);
        E.LimitForm.Set(STR: 30, DEX: 20, CON: 30, INT: 20, WIS: 20, CHA: 25);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetTalent(Properties.dark_vision, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.magical);
        E.AddAttack(AttackTypes.claw, Elements.physical, 6.d11());
        E.AddAttack(AttackTypes.claw, Elements.physical, 6.d11());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d12()); // +10 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      Mother_Hydra = AddUniqueEntity(Kinds.giant, Races.giant, "Mother Hydra", E =>
      {
        E.Glyph = Glyphs.Mother_Hydra;
        E.Sonic = Sonics.grumble;
        E.Level = 80;
        E.Challenge = 12802;
        E.Difficulty = 85;
        E.Frequency = 0;
        E.Defence = new Defence(D: 29, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S5_0;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(3000000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 30, DEX: 17, CON: 30, INT: 16, WIS: 18, CHA: 25);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent(Properties.dark_vision, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.magical);
        E.AddAttack(AttackTypes.claw, Elements.physical, 5.d16());
        E.AddAttack(AttackTypes.claw, Elements.physical, 5.d11());
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d12()); // +10 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      fire_giant = AddEntity(Kinds.giant, Races.giant, "fire giant", E =>
      {
        E.Glyph = Glyphs.fire_giant;
        E.Sonic = Sonics.grumble;
        E.Level = 15;
        E.Challenge = 414;
        E.Difficulty = 17;
        E.Frequency = 2;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -1 from dex = 15.
        E.SetTerrain(Materials.air, Materials.fire);
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = GiantWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 25, DEX: 9, CON: 23, INT: 10, WIS: 14, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.fire);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d5()); // +7 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d5());
        E.Conveyance.MajorResistance(Elements.fire);
        E.Conveyance.TradeoffAbility(Attributes.strength, Attributes.intelligence);
        E.SetCorpse(Chance.Always);
      });

      frost_giant = AddEntity(Kinds.giant, Races.giant, "frost giant", E =>
      {
        E.Glyph = Glyphs.frost_giant;
        E.Sonic = Sonics.grumble;
        E.Level = 17;
        E.Challenge = 441;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -1 from dex = 17.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = GiantWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 23, DEX: 9, CON: 21, INT: 9, WIS: 10, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.cold);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4()); // +6 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.Conveyance.MajorResistance(Elements.cold);
        E.Conveyance.TradeoffAbility(Attributes.strength, Attributes.intelligence);
        E.SetCorpse(Chance.Always);
      });

      giant_king = AddEntity(Kinds.giant, Races.giant, "giant king", E =>
      {
        E.Glyph = Glyphs.giant_king;
        E.Sonic = Sonics.grumble;
        E.Level = 30;
        E.Challenge = 1300;
        E.Difficulty = 32;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_7;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits((long)(GiantWeight.GetUnits() * 1.5F));
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 30, DEX: 15, CON: 27, INT: 15, WIS: 13, CHA: 24);
        E.LimitForm.Set(STR: 30, DEX: 20, CON: 30, INT: 20, WIS: 20, CHA: 25);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.petrify, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6()); // +10 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          // 0..1 of each.
          A.Apply.SummonEntity(1.d2() - 1, hill_giant);
          A.Apply.SummonEntity(1.d2() - 1, frost_giant);
          A.Apply.SummonEntity(1.d2() - 1, fire_giant);
          A.Apply.SummonEntity(1.d2() - 1, storm_giant);
          A.Apply.SummonEntity(1.d2() - 1, stone_giant);
        });
        E.Conveyance.MajorResistance(Elements.fire);
        E.Conveyance.TradeoffAbility(Attributes.strength, Attributes.intelligence);
        E.SetCorpse(Chance.Always);
      });

      hill_giant = AddEntity(Kinds.giant, Races.giant, "hill giant", E =>
      {
        E.Glyph = Glyphs.hill_giant;
        E.Sonic = Sonics.grumble;
        E.Level = 12;
        E.Challenge = 229;
        E.Difficulty = 14;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // -1 from dex = 14.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = GiantWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 8, CON: 19, INT: 5, WIS: 9, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4()); // +5 from str.
        E.Conveyance.TradeoffAbility(Attributes.strength, Attributes.intelligence);
        E.SetCorpse(Chance.Always);
      });

      stone_giant = AddEntity(Kinds.giant, Races.giant, "stone giant", E =>
      {
        E.Glyph = Glyphs.stone_giant;
        E.Sonic = Sonics.grumble;
        E.Level = 10;
        E.Challenge = 91;
        E.Difficulty = 11;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +2 from dex = 17.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = GiantWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 23, DEX: 15, CON: 20, INT: 10, WIS: 12, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.club, Skills.dual_wielding);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.stone_club);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.stone_club);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4()); // +6 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4());
        E.Conveyance.MajorResistance(Elements.petrify);
        E.Conveyance.TradeoffAbility(Attributes.strength, Attributes.intelligence);
        E.SetCorpse(Chance.Always);
      });

      storm_giant = AddEntity(Kinds.giant, Races.giant, "storm giant", E =>
      {
        E.Glyph = Glyphs.storm_giant;
        E.Sonic = Sonics.grumble;
        E.Level = 21;
        E.Challenge = 659;
        E.Difficulty = 24;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +2 from dex = 22.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = GiantWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 29, DEX: 14, CON: 20, INT: 16, WIS: 18, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.shock);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d5()); // +9 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d5());
        E.Conveyance.MajorResistance(Elements.shock);
        E.Conveyance.TradeoffAbility(Attributes.strength, Attributes.intelligence);
        E.SetCorpse(Chance.Always);
      });
      //titan is not included in MM, stat was added based on comparing 3.5 stats with storm giant
      titan = AddEntity(Kinds.giant, Races.giant, "titan", E =>
      {
        E.Glyph = Glyphs.titan;
        E.Sonic = Sonics.grumble;
        E.Level = 26;
        E.Challenge = 1143;
        E.Difficulty = 29;
        E.Frequency = 1;
        E.Defence = new Defence(D: 28, P: +0, S: +0, B: +0); // +1 from dex = 29.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S5_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(180000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 30, DEX: 12, CON: 29, INT: 20, WIS: 22, CHA: 24);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.enchantment, Skills.literacy);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.AddGrimoire(Dice.One, Spells.fear);
        E.Startup.AddGrimoire(Dice.One, Spells.slow);
        E.Startup.AddGrimoire(Dice.One, Spells.poison_blast);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d6()); // +10 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d6());
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region gnoll.
      //gnolls have 1/2 CR, srsly? -G
      gnoll = AddEntity(Kinds.gnoll, Races.gnoll, "gnoll", E =>
      {
        E.Glyph = Glyphs.gnoll;
        E.Sonic = Sonics.grunt;
        E.Level = 17;
        E.Challenge = 385;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +1 from dex = 17.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 12, CON: 11, INT: 6, WIS: 10, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5()); // +2 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      gnoll_chieftain = AddEntity(Kinds.gnoll, Races.gnoll, "gnoll chieftain", E =>
      {
        E.Glyph = Glyphs.gnoll_chieftain;
        E.Sonic = Sonics.grunt;
        E.Level = 28;
        E.Challenge = 956;
        E.Difficulty = 31;
        E.Frequency = 1;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +2 from dex = 25.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 14, CON: 13, INT: 8, WIS: 11, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5()); // +3 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d2() - 1, gnoll_warrior);
          A.Apply.SummonEntity(1.d3(), gnoll);
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      gnoll_shaman = AddEntity(Kinds.gnoll, Races.gnoll, "gnoll shaman", E =>
      {
        E.Glyph = Glyphs.gnoll_shaman;
        E.Sonic = Sonics.grunt;
        E.Level = 18;
        E.Challenge = 441;
        E.Difficulty = 22;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +1 from dex = 20.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 12, CON: 11, INT: 6, WIS: 14, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.enchantment, Skills.transmutation, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(1.d2() + 1, Spells.fear, Spells.fireball, Spells.confusion, Spells.cone_of_cold, Spells.polymorph, Spells.animate_object);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5(), A => A.Apply.ApplyTransient(Properties.rage, 3.d6())); // +2 from str.
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      gnoll_warrior = AddEntity(Kinds.gnoll, Races.gnoll, "gnoll warrior", E =>
      {
        E.Glyph = Glyphs.gnoll_warrior;
        E.Sonic = Sonics.grunt;
        E.Level = 24;
        E.Challenge = 647;
        E.Difficulty = 26;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex = 20.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 15, INT: 6, WIS: 10, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision);
        // TODO: crossbows.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5()); // +4 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region gnome.
      gnome_thief = AddEntity(Kinds.gnome, Races.gnome, "gnome thief", E =>
      {
        E.Glyph = Glyphs.gnome_thief;
        E.Level = 1;
        E.Challenge = 11;
        E.Difficulty = 3;
        E.Frequency = 1;
        E.Defence = new Defence(D: 8, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(6500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 14, CON: 8, INT: 11, WIS: 8, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.light_blade, Skills.whip);
        E.Startup.SetTalent(Properties.dark_vision, Properties.slow_digestion, Properties.appraisal);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.bullwhip);
        E.Startup.Loot.AddKit(Chance.OneIn5, 2.d6(), [Items.dagger, Items.silver_dagger, Items.mithril_dagger]);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.leather_cloak);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.leather_armour);
        E.Startup.Loot.AddKit(Chance.OneIn5, 10.d6(), Items.gold_coin);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d5()); // +1 from str.
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.StealCarriedItem(Properties.fear, 6.d6() + 6);
        });
        E.SetCorpse(Chance.OneIn3);
      });

      gnome_lord = AddEntity(Kinds.gnome, Races.gnome, "gnome lord", E =>
      {
        E.Glyph = Glyphs.gnome_lord;
        E.Level = 3;
        E.Challenge = 15;
        E.Difficulty = 4;
        E.Frequency = 2;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(7000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 12, CON: 11, INT: 11, WIS: 10, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_blade, Skills.light_armour, Skills.medium_armour, Skills.medium_blade, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.slow_digestion, Properties.appraisal);
        E.Startup.Loot.AddKit(Chance.OneIn8, Items.silver_short_sword);
        E.Startup.Loot.AddKit(Chance.OneIn4, Items.short_sword);
        E.Startup.Loot.AddKit(Chance.OneIn8, Items.small_shield);
        E.Startup.Loot.AddKit(Chance.OneIn8, Items.helmet);
        E.Startup.Loot.AddKit(Chance.OneIn8, Items.scale_mail);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8()); // +1 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      gnome_warrior = AddEntity(Kinds.gnome, Races.gnome, "gnome warrior", E =>
      {
        E.Glyph = Glyphs.gnome_warrior;
        E.Level = 5;
        E.Challenge = 31;
        E.Difficulty = 6;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(7500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 11, CON: 13, INT: 9, WIS: 9, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.axe, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.slow_digestion, Properties.appraisal);
        E.Startup.Loot.AddKit(Chance.OneIn5, [Items.axe, Items.silver_axe]);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.small_shield);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.helmet);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.scale_mail);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d10()); // +2 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      gnome_king = AddEntity(Kinds.gnome, Races.gnome, "gnome king", E =>
      {
        E.Glyph = Glyphs.gnome_king;
        E.Level = 17;
        E.Challenge = 524;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1 from dex = 13.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(7500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 13, CON: 16, INT: 12, WIS: 13, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_blade, Skills.light_armour, Skills.medium_armour, Skills.medium_blade, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.slow_digestion, Properties.appraisal);
        E.Startup.SetResistance(Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d10()); // +2 from str.
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d2() - 1, gnome_lord);
          A.Apply.SummonEntity(1.d2(), gnome_warrior);
          A.Apply.SummonEntity(1.d2() - 1, gnome_thief);
          //A.Apply.SummonEntity(1.d2() - 1, gnomish_wizard); // exploit fix.
        });
        E.SetCorpse(Chance.OneIn3);
      });

      gnomish_wizard = AddEntity(Kinds.gnome, Races.gnome, "gnomish wizard", E =>
      {
        E.Glyph = Glyphs.gnomish_wizard;
        E.Level = 3;
        E.Challenge = 23;
        E.Difficulty = 5;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(7000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 11, DEX: 12, CON: 10, INT: 13, WIS: 16, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.enchantment, Skills.literacy);
        E.Startup.SetTalent(Properties.dark_vision, Properties.slow_digestion, Properties.appraisal);
        E.Startup.Loot.AddKit(Chance.OneIn5, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(Dice.One, Spells.slow);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6());
        E.SetCorpse(Chance.OneIn3);
      });

      deep_gnome = AddEntity(Kinds.gnome, Races.gnome, "deep gnome", E =>
      {
        E.Glyph = Glyphs.deep_gnome;
        E.Level = 10;
        E.Challenge = 151;
        E.Difficulty = 12;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(7500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 12, CON: 10, INT: 11, WIS: 11, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.pick, Skills.sling, Skills.crossbow);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.OneIn5, Items.pickaxe);
        E.Startup.Loot.AddKit(Chance.Always, Items.crossbow);
        E.Startup.Loot.AddKit(Chance.OneIn20, 2.d6(), Items.silver_crossbow_bolt);
        E.Startup.Loot.AddKit(Chance.Always, 3.d6(), Items.crossbow_bolt);
        E.Startup.Loot.AddKit(Chance.OneIn10, 1.d3(), Stocks.gem);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d11()); // +1 from str.
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region golem.
      clay_golem = AddEntity(Kinds.golem, null, "clay golem", E =>
      {
        E.Glyph = Glyphs.clay_golem;
        E.Level = 17;
        E.Challenge = 425;
        E.Difficulty = 18;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -1 from dex = 17.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(80000);
        E.Figure.Set
        (
          Material: Materials.clay,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(50, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 20, DEX: 9, CON: 18, INT: 3, WIS: 8, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.SetConcealment(Codex.Blocks.clay_boulder);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 5.d6()); // +5 from str.
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, 5.d5(), Items.rock);
        E.DropLoot.AddKit(Chance.OneIn4, Items.magic_figurine);
      });

      crystal_golem = AddEntity(Kinds.golem, null, "crystal golem", E =>
      {
        E.Glyph = Glyphs.crystal_golem;
        E.Level = 32;
        E.Challenge = 1182;
        E.Difficulty = 36;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100000);
        E.Figure.Set
        (
          Material: Materials.crystal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(200, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 26, DEX: 9, CON: 22, INT: 3, WIS: 9, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Codex.Blocks.crystal_boulder);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.magical, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 6.d14()); // +8 from str.
        E.AddAttack(AttackTypes.breath, Elements.magical, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.magic_missile, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.magical, 6.d8());
        });
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, Dice.One, Items.crystal_ball);
      });

      flesh_golem = AddEntity(Kinds.golem, null, "flesh golem", E =>
      {
        E.Glyph = Glyphs.flesh_golem;
        E.Level = 14;
        E.Challenge = 184;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // -1 from dex = 16.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(50000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(80, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 19, DEX: 9, CON: 18, INT: 6, WIS: 10, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.AddReaction(Chance.Always, Elements.shock, A => A.HealEntity(4.d6(), Modifier.Zero));
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6()); // +4 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.AddRetaliation(Chance.OneIn3, AttackTypes.splash, R =>
        {
          R.Apply.CreateVolatile(Codex.Volatiles.blood, Dice.Fixed(10));
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.fire));
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.sleep));
          Table.Add(1, A => A.MajorResistance(Elements.shock));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(1.d3(), Chance.Always, Items.huge_chunk_of_meat);
      });

      Doctor_Frankenstein = AddUniqueEntity(Kinds.human, Races.human, "Doctor Frankenstein", E =>
      {
        E.Glyph = Glyphs.Doctor_Frankenstein;
        E.Level = 18;
        E.Challenge = 710;
        E.Difficulty = 30;
        E.Frequency = 0;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // +6 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 22, CON: 17, INT: 21, WIS: 18, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.teleportation, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.shock, Elements.poison, Elements.sleep, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d11()); // +3 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2(), K =>
        {
          K.Apply.TeleportEntity(Properties.teleportation);
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.teleportation, 1.d500() + 750));
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      Frankensteins_Monster = AddUniqueEntity(Kinds.golem, null, "Frankenstein's Monster", E =>
      {
        E.Glyph = Glyphs.Frankensteins_Monster;
        E.Level = 18;
        E.Challenge = 715;
        E.Difficulty = 30;
        E.Frequency = 0;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(300, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 18, DEX: 15, CON: 25, INT: 7, WIS: 5, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.poison, Elements.drain, Elements.sleep, Elements.magical);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d9());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d9());
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.sleep));
          Table.Add(1, A => A.MajorResistance(Elements.shock));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.Conveyance.HarmEntity(Elements.necrotic, 1.d8());
        E.SetCorpse(Chance.Always);
      });

      glass_golem = AddEntity(Kinds.golem, null, "glass golem", E =>
      {
        E.Glyph = Glyphs.glass_golem;
        E.Level = 19;
        E.Challenge = 456;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(90000);
        E.Figure.Set
        (
          Material: Materials.glass,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(100, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 22, DEX: 9, CON: 18, INT: 3, WIS: 9, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.reflection, Properties.vitality);
        E.Startup.SetResistance(Elements.acid, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d7());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d7()); // +6 from str.
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.OneIn2, 1.d3() - 1, Items.black_glass_bauble);
        E.DropLoot.AddKit(Chance.OneIn2, 1.d3() - 1, Items.blue_glass_bauble);
        E.DropLoot.AddKit(Chance.OneIn2, 1.d3() - 1, Items.green_glass_bauble);
        E.DropLoot.AddKit(Chance.OneIn2, 1.d3() - 1, Items.orange_glass_bauble);
        E.DropLoot.AddKit(Chance.OneIn2, 1.d3() - 1, Items.red_glass_bauble);
        E.DropLoot.AddKit(Chance.OneIn2, 1.d3() - 1, Items.violet_glass_bauble);
        E.DropLoot.AddKit(Chance.OneIn2, 1.d3() - 1, Items.white_glass_bauble);
        E.DropLoot.AddKit(Chance.OneIn2, 1.d3() - 1, Items.yellow_glass_bauble);
        E.DropLoot.AddKit(Chance.OneIn2, 1.d3() - 1, Items.yellowish_brown_glass_bauble);
      });

      gold_golem = AddEntity(Kinds.golem, null, "gold golem", E =>
      {
        E.Glyph = Glyphs.gold_golem;
        E.Level = 9;
        E.Challenge = 84;
        E.Difficulty = 10;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(140000);
        E.Figure.Set
        (
          Material: Materials.gold,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(30, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 16, DEX: 10, CON: 13, INT: 3, WIS: 8, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Codex.Blocks.gold_boulder);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.acid, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d7());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d7()); // +3 from str.
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, 20.d6(), Items.gold_coin);
      });

      iron_golem = AddEntity(Kinds.golem, null, "iron golem", E =>
      {
        E.Glyph = Glyphs.iron_golem;
        E.Level = 20;
        E.Challenge = 635;
        E.Difficulty = 24;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -1 from dex = 17.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(120000);
        E.Figure.Set
        (
          Material: Materials.iron,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(140, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 24, DEX: 9, CON: 20, INT: 3, WIS: 11, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.AddReaction(Chance.Always, Elements.water, A => A.HarmEntity(Elements.physical, 8.d6()));
        E.AddReaction(Chance.Always, Elements.fire, A => A.HealEntity(8.d6(), Modifier.Zero));
        E.AddReaction(Chance.Always, Elements.shock, A => A.ApplyTransient(Properties.slowness, 4.d6()));
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d8()); // +7 from str.
        E.AddAttack(AttackTypes.breath, Elements.poison, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.poison, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.poison, 4.d8());
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(1.d3(), Chance.Always, Items.iron_chain); 
        //E.DropLoot.AddKit(1.d3(), Chance.Always, Items.iron_rod); // TODO: iron rod.
      });

      leather_golem = AddEntity(Kinds.golem, null, "leather golem", E =>
      {
        E.Glyph = Glyphs.leather_golem;
        E.Level = 11;
        E.Challenge = 169;
        E.Difficulty = 12;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(60000);
        E.Figure.Set
        (
          Material: Materials.leather,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(40, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 15, DEX: 9, CON: 12, INT: 3, WIS: 11, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4()); // +2 from str.
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.OneIn2, Dice.One, Items.leather_cloak);
        E.DropLoot.AddKit(Chance.OneIn2, Dice.One, Items.leather_gloves);
        E.DropLoot.AddKit(Chance.OneIn2, Dice.One, Items.leather_armour);
        E.DropLoot.AddKit(Chance.OneIn2, Dice.One, Items.alchemy_smock);
        E.DropLoot.AddKit(Chance.OneIn2, Dice.One, Items.elven_leather_helm);
      });

      paper_golem = AddEntity(Kinds.golem, null, "paper golem", E =>
      {
        E.Glyph = Glyphs.paper_golem;
        E.Level = 3;
        E.Challenge = 10;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(40000);
        E.Figure.Set
        (
          Material: Materials.paper,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(18, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 14, DEX: 9, CON: 12, INT: 3, WIS: 9, CHA: 2);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Chemistry.SetWeakness(Elements.fire);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3()); // +2 from str.
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(1.d3() + 2, Chance.Always, Items.scroll_of_blank_paper);
      });

      pearl_golem = AddEntity(Kinds.golem, null, "pearl golem", E =>
      {
        E.Glyph = Glyphs.pearl_golem;
        E.Level = 24;
        E.Challenge = 695;
        E.Difficulty = 26;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -1 from dex = 17.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(120000);
        E.SetTerrain(Materials.water, Materials.air);
        E.Figure.Set
        (
          Material: Materials.gemstone,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(145, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 26, DEX: 9, CON: 18, INT: 3, WIS: 15, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.AddReaction(Chance.Always, Elements.water, A => A.ApplyTransient(Properties.invisibility, 4.d6()));
        E.AddReaction(Chance.Always, Elements.shock, A => A.ApplyTransient(Properties.confusion, 4.d6()));
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetTalent(Properties.vitality, Properties.slippery);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d8()); // +8 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d8()); // +8 from str.
        E.SetCorpse(Chance.Never);
        //E.DropLoot.AddKit(1.d3(), Chance.Always, Items.pearl); // TODO: need to add 'pearl'.
      });

      plastic_golem = AddEntity(Kinds.golem, null, "plastic golem", E =>
      {
        E.Glyph = Glyphs.plastic_golem;
        E.Level = 5;
        E.Challenge = 23;
        E.Difficulty = 6;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(95000);
        E.Figure.Set
        (
          Material: Materials.plastic,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(30, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 16, DEX: 9, CON: 14, INT: 3, WIS: 11, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3()); // +3 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, Dice.One, Items.plastic_sword);
      });

      rope_golem = AddEntity(Kinds.golem, null, "rope golem", E =>
      {
        E.Glyph = Glyphs.rope_golem;
        E.Level = 7;
        E.Challenge = 62;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(80000);
        E.Figure.Set
        (
          Material: Materials.cloth,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(40, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 18, DEX: 8, CON: 14, INT: 3, WIS: 10, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2()); // +4 from str.
        E.AddAttack(AttackTypes.grapple, Elements.physical, Dice.Fixed(+6), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.SetCorpse(Chance.Never);
      });

      diamond_golem = AddEntity(Kinds.golem, null, "diamond golem", E =>
      {
        E.Glyph = Glyphs.diamond_golem;
        E.Level = 28;
        E.Challenge = 839;
        E.Difficulty = 30;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(110000);
        E.Figure.Set
        (
          Material: Materials.gemstone,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(170, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 26, DEX: 9, CON: 22, INT: 3, WIS: 9, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.magical, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d10());
        E.AddAttack(AttackTypes.breath, Elements.magical, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.magic_missile, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.magical, 8.d8());
        });
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, Dice.One, Items.diamond);
      });

      emerald_golem = AddEntity(Kinds.golem, null, "emerald golem", E =>
      {
        E.Glyph = Glyphs.emerald_golem;
        E.Level = 23;
        E.Challenge = 601;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(110000);
        E.Figure.Set
        (
          Material: Materials.gemstone,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(160, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 26, DEX: 9, CON: 22, INT: 3, WIS: 9, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 6.d6()); // +8 from str.
        E.AddAttack(AttackTypes.breath, Elements.poison, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.poison, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.poison, 7.d7());
        });
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, Dice.One, Items.emerald);
      });

      ruby_golem = AddEntity(Kinds.golem, null, "ruby golem", E =>
      {
        E.Glyph = Glyphs.ruby_golem;
        E.Level = 26;
        E.Challenge = 731;
        E.Difficulty = 28;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100000);
        E.Figure.Set
        (
          Material: Materials.gemstone,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(150, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 26, DEX: 9, CON: 22, INT: 3, WIS: 9, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d14()); // +8 from str.
        E.AddAttack(AttackTypes.breath, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.fire, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.fire, 5.d6());
        });
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, Dice.One, Items.ruby);
      });

      sapphire_golem = AddEntity(Kinds.golem, null, "sapphire golem", E =>
      {
        E.Glyph = Glyphs.sapphire_golem;
        E.Level = 30;
        E.Challenge = 1014;
        E.Difficulty = 32;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(110000);
        E.Figure.Set
        (
          Material: Materials.gemstone,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(180, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 26, DEX: 9, CON: 22, INT: 3, WIS: 9, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 6.d9()); // +8 from str.
        E.AddAttack(AttackTypes.breath, Elements.shock, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.lightning, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.shock, 7.d7());
        });
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, Dice.One, Items.sapphire);
      });

      topaz_golem = AddEntity(Kinds.golem, null, "topaz golem", E =>
      {
        E.Glyph = Glyphs.topaz_golem;
        E.Level = 21;
        E.Challenge = 501;
        E.Difficulty = 23;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100000);
        E.Figure.Set
        (
          Material: Materials.gemstone,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(150, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 26, DEX: 9, CON: 22, INT: 3, WIS: 9, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d12()); // +8 from str.
        E.AddAttack(AttackTypes.breath, Elements.cold, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.cold, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.cold, 5.d5());
        });
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, Dice.One, Items.topaz);
      });

      snow_golem = AddEntity(Kinds.golem, null, "snow golem", E =>
      {
        E.Glyph = Glyphs.snow_golem;
        E.Level = 12;
        E.Challenge = 199;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(60000);
        E.Figure.Set
        (
          Material: Materials.ice,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(50, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 16, DEX: 9, CON: 12, INT: 3, WIS: 11, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.slippery);
        E.Startup.SetResistance(Elements.poison, Elements.sleep, Elements.cold);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d3());
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d3()); // +3 from str.
        E.AddAttack(AttackTypes.breath, Elements.cold, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.cold, 1.d3() + 3)
           .SetReflects(false);
          K.Apply.HarmEntity(Elements.cold, 4.d4());
          K.Apply.UnlessTargetResistant(Elements.cold, T => T.ApplyTransient(Properties.paralysis, 1.d3() + 3));
        });
        E.Chemistry.SetWeakness(Elements.fire);
        E.AddReaction(Chance.Always, Elements.cold, A => A.HealEntity(4.d4(), Modifier.Zero));
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, Dice.One, Items.carrot);
      });

      mithril_golem = AddEntity(Kinds.golem, null, "mithril golem", E =>
      {
        E.Glyph = Glyphs.mithril_golem;
        E.Level = 30;
        E.Challenge = 1112;
        E.Difficulty = 34;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(120000);
        E.Figure.Set
        (
          Material: Materials.mithril,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(190, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 27, DEX: 9, CON: 22, INT: 3, WIS: 9, CHA: 2);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 6.d8());
        E.AddAttack(AttackTypes.breath, Elements.cold, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.cold, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.cold, 5.d8());
        });
        E.AddRetaliation(Chance.OneIn2, AttackTypes.touch, R =>
        {
          // TODO: can't use cast, because strikes do not correctly target the source asset.
          //R.SetCast().Strike(Strikes.magic, Dice.One);
          R.Apply.DisenchantItem(Dice.One);
        });
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, Dice.One, Items.mithril_long_sword);
      });

      adamantine_golem = AddEntity(Kinds.golem, null, "adamantine golem", E =>
      {
        E.Glyph = Glyphs.adamantine_golem;
        E.Level = 36;
        E.Challenge = 1212;
        E.Difficulty = 38;
        E.Frequency = 1;
        E.Defence = new Defence(D: 35, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(120000);
        E.Figure.Set
        (
          Material: Materials.adamantine,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(500, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 29, DEX: 9, CON: 29, INT: 3, WIS: 9, CHA: 2);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality, Properties.free_action, Properties.clarity);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.acid, Elements.poison, Elements.sleep, Elements.magical, Elements.force);
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, Dice.One, Items.adamantine_long_sword);
      });

      stone_golem = AddEntity(Kinds.golem, null, "stone golem", E =>
      {
        E.Glyph = Glyphs.stone_golem;
        E.Level = 21;
        E.Challenge = 673;
        E.Difficulty = 22;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -1 from dex = 15.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(120000);
        E.Figure.Set
        (
          Material: Materials.stone,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(90, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 22, DEX: 9, CON: 20, INT: 3, WIS: 11, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Codex.Blocks.stone_boulder);
        E.Startup.SetSkill(Qualifications.proficient, Skills.sling);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.sleep, Elements.petrify);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d8()); // +6 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d8());
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(Chance.Always, 1.d8() + 4, Items.flint);
      });

      straw_golem = AddEntity(Kinds.golem, null, "straw golem", E =>
      {
        E.Glyph = Glyphs.straw_golem;
        E.Level = 3;
        E.Challenge = 10;
        E.Difficulty = 3;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.vegetable, // straw.
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(25, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 8, DEX: 8, CON: 10, INT: 3, WIS: 13, CHA: 2);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d2());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d2()); // -1 from str.
        E.SetCorpse(Chance.Never);
      });

      wax_golem = AddEntity(Kinds.golem, null, "wax golem", E =>
      {
        E.Glyph = Glyphs.wax_golem;
        E.Level = 6;
        E.Challenge = 47;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(28000);
        E.Figure.Set
        (
          Material: Materials.wax,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(25, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 14, DEX: 10, CON: 16, INT: 3, WIS: 10, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d2()); // +2 from str.
        E.AddAttack(AttackTypes.touch, Elements.fire, 1.d4());
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(1.d4(), Chance.Always, Items.wax_candle);
        E.DropLoot.AddKit(1.d2() - 1, Chance.Always, Items.magic_candle);
      });

      wood_golem = AddEntity(Kinds.golem, null, "wood golem", E =>
      {
        E.Glyph = Glyphs.wood_golem;
        E.Level = 14;
        E.Challenge = 310;
        E.Difficulty = 16;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.wood,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(70, Dice.Zero);
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 14, DEX: 9, CON: 12, INT: 3, WIS: 9, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(GolemGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4()); // +2 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4());
        E.SetCorpse(Chance.Never);
        E.DropLoot.AddKit(2.d4(), Chance.Always, Items.quarterstaff);
      });
      #endregion

      #region gremlin.
      gremlin = AddEntity(Kinds.gremlin, null, "gremlin", E =>
      {
        E.Glyph = Glyphs.gremlin;
        E.Sonic = Sonics.cackle;
        E.Level = 4;
        E.Challenge = 29;
        E.Difficulty = 6;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 16, CON: 12, INT: 14, WIS: 12, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.AddReaction(Chance.Always, Elements.water, A => A.CloneTargetEntity(1.d3()));
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3()); // -1 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d2(), K =>
        {
          K.Apply.PlaceCurse(Dice.One, Sanctities.Cursed);
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      gargoyle = AddEntity(Kinds.gremlin, null, "gargoyle", E =>
      {
        E.Glyph = Glyphs.gargoyle;
        E.Sonic = Sonics.cackle;
        E.Level = 16;
        E.Challenge = 398;
        E.Difficulty = 18;
        E.Frequency = 2;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(22000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 11, CON: 16, INT: 6, WIS: 11, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.SetConcealment(Codex.Blocks.statue);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison, Elements.sleep, Elements.petrify);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d5()); // +3 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d5());
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d3());
        E.SetCorpse(Chance.OneIn3);
      });

      winged_gargoyle = AddEntity(Kinds.gremlin, null, "winged gargoyle", E =>
      {
        E.Glyph = Glyphs.winged_gargoyle;
        E.Sonic = Sonics.cackle;
        E.Level = 23;
        E.Challenge = 649;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +1 from dex = 24.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 13, CON: 16, INT: 6, WIS: 11, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.SetConcealment(Codex.Blocks.statue);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.poison, Elements.sleep, Elements.petrify);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6()); // +6 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4());
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region human.
      merchant = AddEntity(Kinds.human, Races.human, "merchant", E =>
      {
        E.Glyph = Glyphs.merchant;
        E.Level = 24;
        E.Challenge = 666;
        E.Difficulty = 28;
        E.Frequency = 0;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 15, CON: 16, INT: 17, WIS: 14, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient); // TODO: bartering?
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(30.d100() + 1000, Items.gold_coin);
        E.Startup.Loot.AddKit(Chance.Always, Items.skeleton_key);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4()); // +5 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d3(), guard);
        });
        E.AddDyingRetaliation(Chance.Always, AttackTypes.spell, A =>
        {
          A.SetCast().Strike(Strikes.psychic, Dice.Fixed(10));
          A.Apply.PunishEntity(Codex.Punishments.wanted);
        });
        E.SetCorpse(Chance.Always);
      });

      holy_cleric = AddEntity(Kinds.human, Races.human, "holy cleric", E =>
      {
        E.Glyph = Glyphs.holy_cleric;
        E.Level = 12;
        E.Challenge = 234;
        E.Difficulty = 15;
        E.Frequency = 0; // shrine cleric.
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 12, CON: 18, INT: 12, WIS: 22, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.clerical, Skills.conjuration, Skills.necromancy, Skills.mace, Skills.light_armour, Skills.literacy);
        E.Startup.SetResistance(Elements.shock);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, [Items.silver_mace, Items.mace]);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.Startup.AddGrimoire(Dice.One, Spells.extra_healing);
        E.Startup.AddGrimoire(Dice.One, Spells.raise_dead);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d10());
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d4());
        E.AddDyingRetaliation(Chance.Always, AttackTypes.spell, A =>
        {
          A.SetCast().Strike(Strikes.psychic, Dice.Fixed(10));
          A.Apply.PunishEntity(Codex.Punishments.shunning);
        });
        E.SetCorpse(Chance.Always);
      });

      dark_cleric = AddEntity(Kinds.human, Races.human, "dark cleric", E =>
      {
        E.Glyph = Glyphs.dark_cleric;
        E.Level = 12;
        E.Challenge = 234;
        E.Difficulty = 15;
        E.Frequency = 0; // shrine cleric.
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 12, CON: 18, INT: 12, WIS: 22, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.clerical, Skills.conjuration, Skills.mace, Skills.light_armour, Skills.literacy, Skills.necromancy);
        E.Startup.SetResistance(Elements.shock);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, [Items.silver_mace, Items.mace]);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.Startup.AddGrimoire(Dice.One, Spells.extra_healing);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d10());
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d4());
        E.AddDyingRetaliation(Chance.Always, AttackTypes.spell, A =>
        {
          A.SetCast().Strike(Strikes.psychic, Dice.Fixed(10));
          A.Apply.PunishEntity(Codex.Punishments.malignant_aura);
        });
        E.SetCorpse(Chance.Always);
      });

      artisan = AddEntity(Kinds.human, Races.human, "artisan", E =>
      {
        E.Glyph = Glyphs.artisan;
        E.Level = 14;
        E.Challenge = 314;
        E.Difficulty = 18;
        E.Frequency = 0; // shrine artisan.
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(13000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 18, DEX: 16, CON: 17, INT: 14, WIS: 15, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.hammer, Skills.light_armour, Skills.transmutation, Skills.literacy, Skills.divination, Skills.abjuration, Skills.enchantment);
        E.Startup.SetResistance(Elements.shock);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, [Items.silver_heavy_hammer, Items.heavy_hammer]);
        E.Startup.Loot.AddKit(Chance.Always, Dice.One, Items.alchemy_smock);
        E.Startup.Loot.AddKit(Chance.Always, Stocks.tool.Items.Where(T => !T.Grade.Unique && T.Type == ItemType.Eyewear && T.DefaultSanctity != Sanctities.Cursed).ToArray());
        E.Startup.Loot.AddKit(Chance.OneIn2, 1.d2(), Stocks.potion);
        E.Startup.AddGrimoire(Dice.One, Spells.confusion);
        E.Startup.AddGrimoire(Dice.One, Spells.polymorph);
        E.Startup.AddGrimoire(Dice.One, Spells.invisibility);
        E.Startup.AddGrimoire(Dice.One, Spells.phasing);
        E.Startup.AddGrimoire(Dice.One, Spells.identify);
        E.AddAttack(AttackTypes.punch, Elements.physical, 2.d10());
        E.AddDyingRetaliation(Chance.Always, AttackTypes.spell, A =>
        {
          A.SetCast().Strike(Strikes.psychic, Dice.Fixed(10));
          A.Apply.PunishEntity(Codex.Punishments.ignoramus);
        });
        E.SetCorpse(Chance.Always);
      });

      witch = AddEntity(Kinds.human, Races.human, "witch", E =>
      {
        E.Glyph = Glyphs.witch;
        E.Level = 15;
        E.Challenge = 534;
        E.Difficulty = 20;
        E.Frequency = 0; // shrine witch.
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(13000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 14, DEX: 16, CON: 17, INT: 20, WIS: 18, CHA: 08);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.necromancy, Skills.abjuration, Skills.enchantment, Skills.transmutation, Skills.clerical, Skills.conjuration, Skills.light_blade, Skills.light_armour, Skills.literacy);
        E.Startup.SetResistance(Elements.fire);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, Items.athame);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(Dice.One, Spells.fireball);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.Startup.AddGrimoire(Dice.One, Spells.poison_blast);
        E.Startup.AddGrimoire(Dice.One, Spells.cone_of_cold);
        E.Startup.AddGrimoire(Dice.One, Spells.drain_life);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.AddReaction(Chance.Always, Elements.water, A => A.Death(Elements.water, Array.Empty<Kind>(), Strikes.death, DeathSupport.melting));
        E.AddAttack(AttackTypes.touch, Elements.physical, 2.d10());
        E.AddDyingRetaliation(Chance.Always, AttackTypes.spell, A =>
        {
          A.SetCast().Strike(Strikes.psychic, Dice.Fixed(10));
          A.Apply.PunishEntity(Codex.Punishments.gluttony);
        });
        E.SetCorpse(Chance.Always);
      });

      dryad = AddEntity(Kinds.fairy, Races.fairy, "dryad", E =>
      {
        E.Glyph = Glyphs.dryad;
        E.Level = 14;
        E.Challenge = 254;
        E.Difficulty = 16;
        E.Frequency = 0; // shrine dryad.
        E.Defence = new Defence(D: 26, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 16, CON: 20, INT: 15, WIS: 20, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.transmutation, Skills.abjuration, Skills.enchantment, Skills.evocation, Skills.clerical, Skills.conjuration, Skills.staff, Skills.light_armour, Skills.literacy);
        E.Startup.SetResistance(Elements.acid);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, Items.quarterstaff);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(Dice.One, Spells.polymorph);
        E.Startup.AddGrimoire(Dice.One, Spells.acid_stream);
        E.Startup.AddGrimoire(Dice.One, Spells.toxic_spray);
        E.Startup.AddGrimoire(Dice.One, Spells.cancellation);
        E.Startup.AddGrimoire(Dice.One, Spells.curing);
        E.Startup.AddGrimoire(Dice.One, Spells.extra_healing);
        E.Startup.AddGrimoire(Dice.One, Spells.haste);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d10());
        E.AddDyingRetaliation(Chance.Always, AttackTypes.spell, A =>
        {
          A.SetCast().Strike(Strikes.psychic, Dice.Fixed(10));
          A.Apply.PunishEntity(Codex.Punishments.thirst);
        });
        E.SetCorpse(Chance.Always);
      });

      Archpriest_Avvakrum = AddUniqueEntity(Kinds.human, Races.human, "Archpriest Avvakrum", E =>
      {
        E.Glyph = Glyphs.Archpriest_Avvakrum;
        E.Level = 25;
        E.Challenge = 1276;
        E.Difficulty = 30;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 29, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 18, CON: 19, INT: 18, WIS: 24, CHA: 22);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.clerical, Skills.conjuration, Skills.evocation, Skills.literacy, Skills.necromancy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.shock, Elements.fire, Elements.poison, Elements.sleep, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.Startup.AddGrimoire(Dice.One, Spells.cone_of_cold);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.Startup.AddGrimoire(Dice.One, Spells.extra_healing);
        E.Startup.AddGrimoire(Dice.One, Spells.raise_dead);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d10());
        E.AddAttack(AttackTypes.kick, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.spell, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.spell, Elements.physical, 2.d4()); // +6 from str.
        E.SetCorpse(Chance.Always);
      });

      Ashikaga_Takauji = AddUniqueEntity(Kinds.human, Races.human, "Ashikaga Takauji", E =>
      {
        E.Glyph = Glyphs.Ashikaga_Takauji;
        E.Level = 30;
        E.Challenge = 993;
        E.Difficulty = 32;
        E.Frequency = 0;
        E.Defence = new Defence(D: 26, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 18, CON: 16, INT: 16, WIS: 14, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.quickness, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.petrify, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4(), D =>
        {
          D.Apply.WhenChance(Chance.OneIn10, T => T.DecapitateEntity(Anatomies.head, Strikes.sever));
        });
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4(), D =>
        {
          D.Apply.WhenChance(Chance.OneIn10, T => T.DecapitateEntity(Anatomies.head, Strikes.sever));
        });
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4(), D =>
        {
          D.Apply.WhenChance(Chance.OneIn10, T => T.DecapitateEntity(Anatomies.head, Strikes.sever));
        });
        E.SetCorpse(Chance.Always);
      });

      Charon = AddUniqueEntity(Kinds.human, Races.human, "Charon", E =>
      {
        E.Glyph = Glyphs.Charon;
        E.Level = 45;
        E.Challenge = 4938;
        E.Difficulty = 38;
        E.Frequency = 0;
        E.Defence = new Defence(D: 28, P: +0, S: +0, B: +0); // +7 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 24, CON: 28, INT: 18, WIS: 20, CHA: 22);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.fire, Elements.poison, Elements.petrify, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d5()); // +3 from str.
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.ApplyTransient(Properties.paralysis, 1.d8());
        });
        E.SetCorpse(Chance.Never);
      });

      Colonel_Blood = AddUniqueEntity(Kinds.human, Races.human, "Colonel Blood", E =>
      {
        E.Glyph = Glyphs.Colonel_Blood;
        E.Level = 15;
        E.Challenge = 541;
        E.Difficulty = 20;
        E.Frequency = 0;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 14, CON: 18, INT: 15, WIS: 16, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.poison, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d7());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d7()); // +3 from str.
        E.SetCorpse(Chance.Always);
      });

      Croesus = AddUniqueEntity(Kinds.human, Races.human, "Croesus", E =>
      {
        E.Glyph = Glyphs.Croesus;
        E.Level = 30;
        E.Challenge = 2626;
        E.Difficulty = 35;
        E.Frequency = 0;
        E.Defence = new Defence(D: 25, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 17, CON: 18, INT: 16, WIS: 16, CHA: 26);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.locks, Skills.traps);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical);
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(Dice.One, guard);
        });
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d11()); // +6 from str.
        E.SetCorpse(Chance.Always);
      });

      Kaloi_Thrym = AddUniqueEntity(Kinds.human, Races.human, "Kaloi Thrym", E =>
      {
        E.Glyph = Glyphs.Kaloi_Thrym;
        E.Level = 100;
        E.Challenge = 20000;
        E.Difficulty = 50;
        E.Frequency = 0;
        E.Defence = new Defence(D: 40, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d10());
        E.ManaAdvancement.Set(1.d10());
        E.DefaultForm.Set(STR: 14, DEX: 18, CON: 18, INT: 16, WIS: 15, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.champion, Skills.literacy, Skills.abjuration, Skills.necromancy, Skills.conjuration, Skills.evocation, Skills.enchantment, Skills.clerical, Skills.transmutation);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control, Properties.clarity, Properties.free_action, Properties.flight, Properties.vitality);
        E.Startup.SetResistance(Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.finger_of_death);
        E.Startup.AddGrimoire(Dice.One, Spells.fireball);
        E.Startup.AddGrimoire(Dice.One, Spells.ice_storm);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.Startup.AddGrimoire(Dice.One, Spells.disintegrate);
        E.Startup.AddGrimoire(Dice.One, Spells.poison_blast);
        E.Startup.AddGrimoire(Dice.One, Spells.drain_life);
        E.Startup.AddGrimoire(Dice.One, Spells.toxic_spray);
        E.Startup.AddGrimoire(Dice.One, Spells.full_healing);

        // wands in case of 'silence'.
        E.Startup.Loot.AddKit(Chance.Always, Sanctities.Blessed, Items.wand_of_cold);
        E.Startup.Loot.AddKit(Chance.Always, Sanctities.Blessed, Items.wand_of_fire);
        E.Startup.Loot.AddKit(Chance.Always, Sanctities.Blessed, Items.wand_of_fireball);
        E.Startup.Loot.AddKit(Chance.Always, Sanctities.Blessed, Items.wand_of_iceball);
        E.Startup.Loot.AddKit(Chance.Always, Sanctities.Blessed, Items.wand_of_death);
        E.Startup.Loot.AddKit(Chance.Always, Sanctities.Blessed, Items.wand_of_lightning);
        E.Startup.Loot.AddKit(Chance.Always, Sanctities.Blessed, Items.wand_of_cancellation);
        E.Startup.Loot.AddKit(Chance.Always, Sanctities.Blessed, Items.wand_of_create_horde);

        // no physical attacks - pure spellcaster.
        //E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d4()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      Deliarne = AddUniqueEntity(Kinds.human, Races.human, "Deliarne", E =>
      {
        E.Glyph = Glyphs.Deliarne;
        E.Level = 8;
        E.Challenge = 338;
        E.Difficulty = 12;
        E.Frequency = 0;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 18, CON: 16, INT: 15, WIS: 17, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.specialist, Skills.literacy, Skills.abjuration, Skills.necromancy, Skills.conjuration, Skills.evocation, Skills.enchantment);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.petrify, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.confusion);
        E.Startup.AddGrimoire(Dice.One, Spells.darkness);
        E.Startup.AddGrimoire(Dice.One, Spells.drain_life);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.Startup.AddGrimoire(Dice.One, Spells.fear);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d4()); // +2 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d4());
        E.SetCorpse(Chance.Never);
      });

      doppelganger = AddEntity(Kinds.demon, null, "doppelgänger", E =>
      {
        E.Glyph = Glyphs.doppelganger;
        E.Sonic = null; // no voice of it's own.
        E.Level = 8;
        E.Challenge = 129;
        E.Difficulty = 10;
        E.Frequency = 1;
        E.Imitation = true; // imitate other monsters when bored.
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 14, CON: 14, INT: 14, WIS: 15, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d12(), A =>
        {
          A.Apply.ImpersonateEntity();
        });
        E.Conveyance.PolymorphEntity();
        E.SetCorpse(Chance.OneIn3);
      });

      Guru_Quilion = AddUniqueEntity(Kinds.human, Races.human, "Guru Quilion", E =>
      {
        E.Glyph = Glyphs.Guru_Quilion;
        E.Level = 25;
        E.Challenge = 1253;
        E.Difficulty = 30;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 16, CON: 21, INT: 19, WIS: 22, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.unarmed_combat);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.deflection, Properties.teleport_control);
        E.Startup.SetResistance(Elements.shock, Elements.fire, Elements.poison, Elements.sleep, Elements.magical);
        E.AddAttack(AttackTypes.punch, Elements.physical, 4.d8());
        E.AddAttack(AttackTypes.kick, Elements.physical, 2.d5()); // +6 from str.
        E.AddAttack(AttackTypes.spell, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.spell, Elements.physical, 2.d8());
        E.SetCorpse(Chance.Always);
      });

      guard = AddEntity(Kinds.human, Races.human, "guard", E =>
      {
        E.Glyph = Glyphs.guard;
        E.Level = 12;
        E.Challenge = 212;
        E.Difficulty = 14;
        E.Frequency = 0; // summoned by merchants and alerted as vault guards.
        E.IsGuardian = false; // will not fight hostiles.
        E.IsMercenary = false; // cannot be hired.
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 11, CON: 17, INT: 11, WIS: 9, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(GuardianGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.spear, Skills.light_blade, Skills.heavy_armour, Skills.heavy_blade);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.Always, Items.plate_mail);
        E.Startup.Loot.AddKit(Chance.Always, Items.large_shield);
        E.Startup.Loot.AddKit(Chance.Always, [Items.long_sword, Items.silver_long_sword]);
        E.Startup.Loot.AddKit(Chance.OneIn2, 2.d4(), [Items.dagger, Items.silver_dagger]);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d7()); // +6 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      Archmage_Flaynn = AddUniqueEntity(Kinds.human, Races.human, "Archmage Flaynn", E =>
      {
        E.Glyph = Glyphs.Archmage_Flaynn;
        E.Level = 40;
        E.Challenge = 2498;
        E.Difficulty = 44;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 27, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 15, DEX: 17, CON: 16, INT: 22, WIS: 21, CHA: 22);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.conjuration, Skills.abjuration, Skills.literacy, Skills.light_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.poison, Elements.fire, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.fireball);
        E.Startup.AddGrimoire(Dice.One, Spells.flaming_sphere);
        E.Startup.AddGrimoire(Dice.One, Spells.teleport_away);
        E.Startup.AddGrimoire(Dice.One, Spells.invisibility);
        E.Startup.Loot.AddKit([Modifier.Plus3], GoodCloakItemArray);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4()); // +2 from str.
        E.Conveyance.MajorResistance(Elements.magical);
        E.SetCorpse(Chance.Always);
      });

      Archmage_Dirachi = AddUniqueEntity(Kinds.human, Races.human, "Archmage Dirachi", E =>
      {
        E.Glyph = Glyphs.Archmage_Dirachi;
        E.Level = 40;
        E.Challenge = 2498;
        E.Difficulty = 44;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 27, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 15, DEX: 17, CON: 16, INT: 22, WIS: 21, CHA: 22);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.conjuration, Skills.abjuration, Skills.literacy, Skills.light_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.poison, Elements.cold, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.cone_of_cold);
        E.Startup.AddGrimoire(Dice.One, Spells.ice_storm);
        E.Startup.AddGrimoire(Dice.One, Spells.freezing_sphere);
        E.Startup.AddGrimoire(Dice.One, Spells.teleport_away);
        E.Startup.AddGrimoire(Dice.One, Spells.invisibility);
        E.Startup.Loot.AddKit([Modifier.Plus3], GoodCloakItemArray);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4()); // +2 from str.
        E.Conveyance.MajorResistance(Elements.magical);
        E.SetCorpse(Chance.Always);
      });

      Lycaon = AddUniqueEntity(Kinds.human, Races.human, "Lycaon", E =>
      {
        E.Glyph = Glyphs.Lycaon;
        E.Level = 20;
        E.Challenge = 958;
        E.Difficulty = 22;
        E.Frequency = 0;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +3 dex = 23.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 16, CON: 25, INT: 14, WIS: 20, CHA: 25);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.poison, Elements.sleep, Elements.magical);
        E.Startup.Loot.AddKit([Modifier.Plus3], GoodCloakItemArray);
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d6());
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d6());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d2() - 1, werejackal);
          A.Apply.SummonEntity(1.d2() - 1, werepanther);
          A.Apply.SummonEntity(1.d2() - 1, wererat);
          A.Apply.SummonEntity(1.d2() - 1, weresnake);
          A.Apply.SummonEntity(1.d2() - 1, werespider);
          A.Apply.SummonEntity(1.d2() - 1, weretiger);
          A.Apply.SummonEntity(1.d2() - 1, werewolf);
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
      });

      Hippocrates = AddUniqueEntity(Kinds.human, Races.human, "Hippocrates", E =>
      {
        E.Glyph = Glyphs.Hippocrates;
        E.Level = 20;
        E.Challenge = 963;
        E.Difficulty = 22;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 15, CON: 16, INT: 17, WIS: 17, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.poison, Elements.magical);
        E.Startup.Loot.AddKit([Modifier.Plus3], GoodCloakItemArray);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5()); // +1 from str.
        E.SetCorpse(Chance.Always);
      });

      human_king = AddEntity(Kinds.human, Races.human, "human king", E =>
      {
        E.Glyph = Glyphs.human_king;
        E.Level = 20;
        E.Challenge = 763;
        E.Difficulty = 23;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +2 from dex = 18 (plus plate mail).
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 15, CON: 18, INT: 15, WIS: 16, CHA: 19);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.spear, Skills.light_blade, Skills.light_armour, Skills.heavy_armour, Skills.heavy_blade);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.Always, Items.plate_mail);
        E.Startup.Loot.AddKit(Chance.Always, Items.mithril_long_sword);
        E.Startup.Loot.AddKit(Chance.OneIn4, Dice.One, GoodCloakItemArray);
        E.Startup.Loot.AddKit(Chance.OneIn4, Dice.One, GoodAmuletItemArray);
        E.Startup.Loot.AddKit(Chance.OneIn4, Dice.One, Stocks.ring);
        E.Startup.Loot.AddKit(Chance.OneIn4, Dice.One, Stocks.ring);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5()); // +3 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d4(), guard);
        });
        E.SetCorpse(Chance.OneIn3);
      });

      Lareth = AddUniqueEntity(Kinds.human, Races.human, "Lareth", E =>
      {
        E.Glyph = Glyphs.Lareth;
        E.Level = 15;
        E.Challenge = 516;
        E.Difficulty = 20;
        E.Frequency = 0;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 17, CON: 21, INT: 17, WIS: 19, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.sleep, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d14()); // +4 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d14(), K =>
        {
          K.Apply.ApplyTransient(Properties.sleeping, 2.d5());
        });
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.Always);
      });

      Lord_Carnarvon = AddUniqueEntity(Kinds.human, Races.human, "Lord Carnarvon", E =>
      {
        E.Glyph = Glyphs.Lord_Carnarvon;
        E.Level = 25;
        E.Challenge = 1263;
        E.Difficulty = 31;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 15, CON: 16, INT: 16, WIS: 17, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical);
        E.Startup.Loot.AddKit([Modifier.Plus3], GoodCloakItemArray);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d7());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d5()); // +1 from str.
        E.SetCorpse(Chance.Always);
      });

      Lord_Sato = AddUniqueEntity(Kinds.human, Races.human, "Lord Sato", E =>
      {
        E.Glyph = Glyphs.Lord_Sato;
        E.Level = 25;
        E.Challenge = 1268;
        E.Difficulty = 30;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 15, CON: 16, INT: 16, WIS: 17, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical);
        E.Startup.Loot.AddKit([Modifier.Plus3], GoodCloakItemArray);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d7());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d5()); // +1 from str.
        E.SetCorpse(Chance.Always);
      });

      Assassin_Mortimer = AddUniqueEntity(Kinds.human, Races.human, "Assassin Mortimer", E =>
      {
        E.Glyph = Glyphs.Assassin_Mortimer;
        E.Level = 30;
        E.Challenge = 2443;
        E.Difficulty = 40;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 32, P: +0, S: +0, B: +0); // +8 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_3;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(13000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 26, CON: 15, INT: 18, WIS: 17, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleportation, Properties.teleport_control, Properties.slippery, Properties.free_action, Properties.invisibility, Properties.stealth, Properties.phasing);
        E.Startup.SetResistance(Elements.petrify, Elements.magical, Elements.poison);
        E.Startup.Loot.AddKit([Modifier.Plus5], GoodCloakItemArray);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d5(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d5(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.AfflictEntity(Codex.Afflictions.poisoning));
        });
        E.SetCorpse(Chance.Always);
      });

      Master_Kaen = AddUniqueEntity(Kinds.human, Races.human, "Master Kaen", E =>
      {
        E.Glyph = Glyphs.Master_Kaen;
        E.Level = 25;
        E.Challenge = 1295;
        E.Difficulty = 31;
        E.Frequency = 0;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +7 from dex.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 24, CON: 24, INT: 18, WIS: 16, CHA: 19);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.light_armour, Skills.unarmed_combat);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.deflection, Properties.teleport_control);
        E.Startup.SetResistance(Elements.poison, Elements.petrify, Elements.magical);
        E.Startup.Loot.AddKit([Modifier.Plus3], GoodCloakItemArray);
        E.AddAttack(AttackTypes.punch, Elements.physical, 13.d2());
        E.AddAttack(AttackTypes.punch, Elements.physical, 13.d2());
        E.AddAttack(AttackTypes.punch, Elements.physical, 1.d4()); // +5 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
      });

      Guildmaster_Vaughn = AddUniqueEntity(Kinds.human, Races.human, "Guildmaster Vaughn", E =>
      {
        E.Glyph = Glyphs.Guildmaster_Vaughn;
        E.Level = 25;
        E.Challenge = 1288;
        E.Difficulty = 31;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 17, CON: 16, INT: 17, WIS: 16, CHA: 19);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.locks, Skills.traps, Skills.light_armour, Skills.light_blade);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.petrify, Elements.magical);
        E.Startup.Loot.AddKit([Modifier.Plus3], GoodCloakItemArray);
        E.Startup.Loot.AddKit([Modifier.Plus3], 4.d4(), Items.silver_dagger);
        E.Startup.Loot.AddKit(3.d4(), Items.scroll_of_teleportation);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5()); // +1 from str.
        E.SetCorpse(Chance.Always);
      });

      Metamorphius = AddUniqueEntity(Kinds.human, Races.human, "Metamorphius", E =>
      {
        E.Glyph = Glyphs.Metamorphius;
        E.Level = 20;
        E.Challenge = 968;
        E.Difficulty = 23;
        E.Frequency = 0;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 16, CON: 16, INT: 21, WIS: 22, CHA: 19);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d3());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d3()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      medusa = AddEntity(Kinds.demon, null, "medusa", E =>
      {
        E.Glyph = Glyphs.medusa;
        E.Level = 32;
        E.Challenge = 1000;
        E.Difficulty = 34;
        E.Frequency = 1;
        E.Defence = new Defence(D: 28, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(24000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 13, CON: 14, INT: 16, WIS: 12, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, 2.d4() + 4)
           .SetReflects()
           .SetBeholds();
          K.Apply.IncarcerateEntity(Elements.petrify, Codex.Blocks.statue);
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d6(), K =>
        {
          K.Apply.ApplyTransient(Properties.petrifying, 6.d6());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d6(), K =>
        {
          K.Apply.ApplyTransient(Properties.petrifying, 6.d6());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3(), K =>
        {
          K.Apply.ApplyTransient(Properties.petrifying, 6.d6());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3(), K =>
        {
          K.Apply.ApplyTransient(Properties.petrifying, 6.d6());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        }); // +2 from str.
        E.Conveyance.IncarcerateEntity(Elements.petrify, Codex.Blocks.statue);
        E.Conveyance.ApplyTransient(Properties.petrifying, 10.d100());
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      Neferet = AddUniqueEntity(Kinds.human, Races.human, "Neferet", E =>
      {
        E.Glyph = Glyphs.Neferet;
        E.Level = 20;
        E.Challenge = 993;
        E.Difficulty = 23;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 16, CON: 16, INT: 21, WIS: 23, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      Norn = AddUniqueEntity(Kinds.human, Races.human, "Norn", E =>
      {
        E.Glyph = Glyphs.Norn;
        E.Level = 20;
        E.Challenge = 968;
        E.Difficulty = 23;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 16, CON: 16, INT: 18, WIS: 20, CHA: 21);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.clarity, Properties.clairvoyance, Properties.polymorph, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d2()); // +6 from str.
        E.SetCorpse(Chance.Always);
      });

      nurse = AddEntity(Kinds.human, Races.human, "nurse", E =>
      {
        E.Glyph = Glyphs.nurse;
        E.Level = 11;
        E.Challenge = 190;
        E.Difficulty = 13;
        E.Frequency = 3;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_3;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 14, DEX: 16, CON: 14, INT: 15, WIS: 13, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.clerical);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.AddGrimoire(Dice.One, Spells.healing);
        E.Startup.AddGrimoire(Dice.One, Spells.extra_healing);
        E.Startup.AddGrimoire(Dice.One, Spells.curing);
        E.Startup.AddGrimoire(Dice.One, Spells.restoration);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5()); // +2 from str.
        E.Conveyance.ReplenishEntity(LifeThreshold: 1.00F, ManaThreshold: 0.00F); // replenish full life.
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      genetic_engineer = AddEntity(Kinds.human, Races.human, "genetic engineer", E =>
      {
        E.Glyph = Glyphs.genetic_engineer;
        E.Level = 11;
        E.Challenge = 199;
        E.Difficulty = 12;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 16, CON: 14, INT: 18, WIS: 15, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.teleportation);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3(), K =>
        {
          K.Apply.PolymorphEntity(); // can only rewrite DNA.
        }); // +1 from str.
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.polymorph, 1.d500() + 750));
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      quantum_mechanic = AddEntity(Kinds.human, Races.human, "quantum mechanic", E =>
      {
        E.Glyph = Glyphs.quantum_mechanic;
        E.Level = 7;
        E.Challenge = 57;
        E.Difficulty = 9;
        E.Frequency = 2;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 16, CON: 12, INT: 18, WIS: 13, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.teleportation, Properties.blinking, Properties.displacement);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4(), K =>
        {
          K.Apply.TeleportInventoryItem();
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4(), K =>
        {
          K.Apply.TeleportEntity(Properties.teleportation);
        }); // +1 from str.
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.quickness, 4.d6() + 4), F => F.ApplyTransient(Properties.slowness, 4.d6() + 4));
        E.Conveyance.MajorProperty(Properties.teleportation);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      Oracle = AddUniqueEntity(Kinds.human, Races.human, "Oracle", E =>
      {
        E.Glyph = Glyphs.Oracle;
        E.Level = 12;
        E.Challenge = 226;
        E.Difficulty = 13;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 8, DEX: 16, CON: 12, INT: 25, WIS: 27, CHA: 24);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.enchantment);
        E.Startup.SetTalent(Properties.see_invisible, Properties.clarity, Properties.telepathy, Properties.clairvoyance, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.confusion);
        E.Startup.AddGrimoire(Dice.One, Spells.slow);
        E.AddRetaliation(Chance.Always, AttackTypes.spell, R =>
        {
          R.SetCast().Strike(Strikes.force, 2.d3() + 6);
          R.Apply.HarmEntity(Elements.force, 6.d6() + 6); // effectively champion force bolt.
        });
        E.SetCorpse(Chance.Always);
      });

      Orion = AddUniqueEntity(Kinds.human, Races.human, "Orion", E =>
      {
        E.Glyph = Glyphs.Orion;
        E.Level = 20;
        E.Challenge = 963;
        E.Difficulty = 22;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_2;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 16, CON: 16, INT: 14, WIS: 15, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d4()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      Pelias = AddUniqueEntity(Kinds.human, Races.human, "Pelias", E =>
      {
        E.Glyph = Glyphs.Pelias;
        E.Level = 20;
        E.Challenge = 963;
        E.Difficulty = 22;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_2;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 16, CON: 16, INT: 20, WIS: 15, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.poison, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      Shaman_Karnov = AddUniqueEntity(Kinds.human, Races.human, "Shaman Karnov", E =>
      {
        E.Glyph = Glyphs.Shaman_Karnov;
        E.Level = 25;
        E.Challenge = 1263;
        E.Difficulty = 31;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_2;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(13000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 16, CON: 16, INT: 20, WIS: 24, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.enchantment, Skills.transmutation, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical);
        E.Startup.AddGrimoire(1.d2() + 1, Spells.fear, Spells.fireball, Spells.confusion, Spells.cone_of_cold, Spells.polymorph, Spells.animate_object);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4()); // +3 from str.
        E.SetCorpse(Chance.Always);
      });

      Sir_Lorimar = AddUniqueEntity(Kinds.human, Races.human, "Sir Lorimar", E =>
      {
        E.Glyph = Glyphs.Sir_Lorimar;
        E.Level = 25;
        E.Challenge = 1223;
        E.Difficulty = 31;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 26, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 18, CON: 19, INT: 17, WIS: 15, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4()); // +3 from str.
        E.SetCorpse(Chance.Always);
      });

      Lord_Surtur = AddUniqueEntity(Kinds.giant, Races.giant, "Lord Surtur", E =>
      {
        E.Glyph = Glyphs.Lord_Surtur;
        E.Sonic = Sonics.grumble;
        E.Level = 15;
        E.Challenge = 511;
        E.Difficulty = 20;
        E.Frequency = 0;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S4_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(130000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 27, DEX: 11, CON: 25, INT: 11, WIS: 11, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 20, CON: 30, INT: 20, WIS: 20, CHA: 20);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.fire, Elements.petrify, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d12());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d12());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2()); // +8 from str.
        E.Conveyance.MajorResistance(Elements.fire);
        E.Conveyance.TradeoffAbility(Attributes.strength, Attributes.intelligence);
        E.SetCorpse(Chance.Always);
      });

      Thoth_Amon = AddUniqueEntity(Kinds.human, Races.human, "Thoth Amon", E =>
      {
        E.Glyph = Glyphs.Thoth_Amon;
        E.Level = 15;
        E.Challenge = 499;
        E.Difficulty = 20;
        E.Frequency = 0;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_2;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(19000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 14, DEX: 16, CON: 15, INT: 17, WIS: 22, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.specialist, Skills.evocation, Skills.enchantment, Skills.transmutation, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.poison, Elements.petrify, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.Startup.AddGrimoire(Dice.One, Spells.magic_missile);
        E.Startup.AddGrimoire(Dice.One, Spells.poison_blast);
        E.Startup.AddGrimoire(Dice.One, Spells.acid_stream);
        E.Startup.AddGrimoire(Dice.One, Spells.toxic_spray);
        E.Startup.AddGrimoire(Dice.One, Spells.fireball);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      Twoflower = AddUniqueEntity(Kinds.human, Races.human, "Twoflower", E =>
      {
        E.Glyph = Glyphs.Twoflower;
        E.Level = 30;
        E.Challenge = 2461;
        E.Difficulty = 35;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 29, P: +0, S: +0, B: +0); // 'lucky' protection and +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 12, CON: 16, INT: 15, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.light_blade);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical);
        E.Startup.Loot.AddKit([Modifier.Plus5], Items.hawaiian_shirt);
        E.Startup.Loot.AddKit(Items.wand_of_animation);
        E.Startup.Loot.AddKit(Items.expensive_camera);
        E.Startup.Loot.AddKit(Items.spectacles);
        E.Startup.Loot.AddKit(Chance.Always, Dice.Fixed(5), Sanctities.Blessed, Items.potion_of_full_healing);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d6());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d6()); // +3 from str.
        E.SetCorpse(Chance.Always);
      });

      Van_Helsing = AddUniqueEntity(Kinds.human, Races.human, "Van Helsing", E =>
      {
        E.Glyph = Glyphs.Van_Helsing;
        E.Level = 30;
        E.Challenge = 2468;
        E.Difficulty = 33;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +5 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(17000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 21, CON: 17, INT: 18, WIS: 19, CHA: 21);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.firearms, Skills.light_armour, Skills.crossbow, Skills.dual_wielding);
        E.Startup.SetTalent(Properties.clarity, Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical, Elements.fire);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, Dice.One, Sanctities.Blessed, Modifier.Plus3to5, [Items.leather_armour]);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, Dice.One, Sanctities.Blessed, Modifier.Plus3to5, [Items.leather_cloak]);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, Dice.One, Sanctities.Blessed, Modifier.Plus3to5, [Items.fedora]);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, Dice.One, Sanctities.Blessed, Modifier.Plus3to5, [Items.pistol]);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, Dice.One, Sanctities.Blessed, Modifier.Plus3to5, [Items.crossbow]);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, 10.d10(), Sanctities.Blessed, Modifier.Plus3to5, [Items.silver_bullet]);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, 4.d4(), Sanctities.Blessed, Modifier.Plus3to5, [Items.silver_crossbow_bolt]);
        E.Startup.Loot.AddKit(Dice.One, Items.wooden_stake);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      warlock = AddEntity(Kinds.human, Races.human, "warlock", E =>
      {
        E.Glyph = Glyphs.warlock;
        E.Level = 30;
        E.Challenge = 1291;
        E.Difficulty = 32;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +5 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 20, CON: 25, INT: 24, WIS: 29, CHA: 26);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.enchantment, Skills.necromancy, Skills.abjuration, Skills.clerical, Skills.conjuration, Skills.transmutation, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.teleportation, Properties.teleport_control, Properties.flight, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.Startup.AddGrimoire(Dice.One, Spells.magic_missile);
        E.Startup.AddGrimoire(Dice.One, Spells.poison_blast);
        E.Startup.AddGrimoire(Dice.One, Spells.acid_stream);
        E.Startup.AddGrimoire(Dice.One, Spells.toxic_spray);
        E.Startup.AddGrimoire(Dice.One, Spells.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.slow);
        E.Startup.AddGrimoire(Dice.One, Spells.fear);
        E.Startup.AddGrimoire(Dice.One, Spells.drain_life);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.Startup.AddGrimoire(Dice.One, Spells.force_bolt);
        E.Startup.AddGrimoire(Dice.One, Spells.polymorph);
        E.Startup.AddGrimoire(Dice.One, Spells.fireball);
        E.Startup.AddGrimoire(Dice.One, Spells.teleport_away);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_object);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d10()); // +3 from str.
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.fire));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
          Table.Add(1, A => A.GainTalent(Properties.teleportation));
          Table.Add(1, A => A.GainTalent(Properties.teleport_control));
        }));
        E.SetCorpse(Chance.OneIn3);
      });

      watch_captain = AddEntity(Kinds.military, Races.human, "watch captain", E =>
      {
        E.Glyph = Glyphs.watch_captain;
        E.Level = 10;
        E.Challenge = 161;
        E.Difficulty = 12;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.IsMercenary = false;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 10, CON: 14, INT: 9, WIS: 9, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(GuardianGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_blade, Skills.medium_blade, Skills.medium_armour);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.silver_sabre);
        E.Startup.Loot.AddKit(Chance.Always, Items.chain_mail);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d10()); // +2 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      watchman = AddEntity(Kinds.military, Races.human, "watchman", E =>
      {
        E.Glyph = Glyphs.watchman;
        E.Level = 6;
        E.Challenge = 42;
        E.Difficulty = 8;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.IsMercenary = false;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 10, CON: 13, INT: 8, WIS: 9, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(GuardianGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.polearm, Skills.medium_blade);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.halberd);
        E.Startup.Loot.AddKit(Chance.OneIn2, [Items.short_sword, Items.silver_short_sword]);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d7()); // +1 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      werejackal = AddEntity(Kinds.lycanthrope, null, "werejackal", E =>
      {
        E.Glyph = Glyphs.werejackal;
        E.Sonic = Sonics.howl;
        E.Level = 6;
        E.Challenge = 65;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +1 from dex = 15.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 12, CON: 14, INT: 8, WIS: 11, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // +1 from str.
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(2.d3(), jackal);
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      jackalwere = AddEntity(Kinds.lycanthrope, null, "jackalwere", E =>
      {
        E.Glyph = Glyphs.jackalwere;
        E.Sonic = Sonics.howl;
        E.Level = 6;
        E.Challenge = 63;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 10, CON: 14, INT: 8, WIS: 11, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d4());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      werepanther = AddEntity(Kinds.lycanthrope, null, "werepanther", E =>
      {
        E.Glyph = Glyphs.werepanther;
        E.Sonic = Sonics.growl;
        E.Level = 22;
        E.Challenge = 734;
        E.Difficulty = 23;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +4 from dex = 20.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(19000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 18, CON: 16, INT: 9, WIS: 11, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration, Properties.stealth);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // +4 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(3.d2() - 1, panther);
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      pantherwere = AddEntity(Kinds.lycanthrope, null, "pantherwere", E =>
      {
        E.Glyph = Glyphs.pantherwere;
        E.Sonic = Sonics.growl;
        E.Level = 20;
        E.Challenge = 684;
        E.Difficulty = 22;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +4 from dex = 22.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(19000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 18, CON: 16, INT: 9, WIS: 11, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration, Properties.stealth);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6()); // +4 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d10());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      wererat = AddEntity(Kinds.lycanthrope, null, "wererat", E =>
      {
        E.Glyph = Glyphs.wererat;
        E.Sonic = Sonics.squeak;
        E.Level = 2;
        E.Challenge = 10;
        E.Difficulty = 3;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 14, INT: 6, WIS: 8, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(2.d3(), giant_rat);
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      ratwere = AddEntity(Kinds.lycanthrope, null, "ratwere", E =>
      {
        E.Glyph = Glyphs.ratwere;
        E.Sonic = Sonics.squeak;
        E.Level = 2;
        E.Challenge = 10;
        E.Difficulty = 3;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 10, CON: 14, INT: 6, WIS: 8, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      weresnake = AddEntity(Kinds.lycanthrope, null, "weresnake", E =>
      {
        E.Glyph = Glyphs.weresnake;
        E.Sonic = Sonics.hiss;
        E.Level = 19;
        E.Challenge = 537;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +2 from dex = 18.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 14, CON: 16, INT: 9, WIS: 11, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetTalent(Properties.life_regeneration, Properties.slippery);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // +2 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d4(), snake);
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      snakewere = AddEntity(Kinds.lycanthrope, null, "snakewere", E =>
      {
        E.Glyph = Glyphs.snakewere;
        E.Sonic = Sonics.hiss;
        E.Level = 18;
        E.Challenge = 507;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +5 from dex = 23.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 20, CON: 16, INT: 9, WIS: 11, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetTalent(Properties.life_regeneration, Properties.slippery);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d6()); // +1 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d6(), A => A.Apply.Macro(MajorPoison(Attributes.strength)));
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      werespider = AddEntity(Kinds.lycanthrope, null, "werespider", E =>
      {
        E.Glyph = Glyphs.werespider;
        E.Sonic = Sonics.scuttle;
        E.Level = 16;
        E.Challenge = 387;
        E.Difficulty = 17;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +1 from dex = 16.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 12, CON: 16, INT: 8, WIS: 10, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration, Properties.free_action);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d3()); // +1 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d3());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d4(), giant_spider);
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      spiderwere = AddEntity(Kinds.lycanthrope, null, "spiderwere", E =>
      {
        E.Glyph = Glyphs.spiderwere;
        E.Sonic = Sonics.scuttle;
        E.Level = 15;
        E.Challenge = 347;
        E.Difficulty = 16;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +3 from dex = 21.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 16, CON: 16, INT: 8, WIS: 10, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration, Properties.free_action);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d4()); // +1 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d4(), A => A.Apply.Macro(MajorPoison(Attributes.constitution)));
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      weretiger = AddEntity(Kinds.lycanthrope, null, "weretiger", E =>
      {
        E.Glyph = Glyphs.weretiger;
        E.Sonic = Sonics.growl;
        E.Level = 25;
        E.Challenge = 955;
        E.Difficulty = 27;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +4 from dex = 22.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(21000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 18, CON: 17, INT: 7, WIS: 11, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration, Properties.stealth);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8()); // +5 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(3.d2(), tiger);
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      tigerwere = AddEntity(Kinds.lycanthrope, null, "tigerwere", E =>
      {
        E.Glyph = Glyphs.tigerwere;
        E.Sonic = Sonics.growl;
        E.Level = 23;
        E.Challenge = 875;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +4 from dex = 21.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(21000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 19, CON: 17, INT: 7, WIS: 11, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration, Properties.stealth);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d8()); // +5 from str.
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      werewolf = AddEntity(Kinds.lycanthrope, null, "werewolf", E =>
      {
        E.Glyph = Glyphs.werewolf;
        E.Sonic = Sonics.howl;
        E.Level = 12;
        E.Challenge = 211;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +2 from dex = 12.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 14, CON: 15, INT: 8, WIS: 11, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // +2 from str.
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(2.d3(), wolf);
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      wolfwere = AddEntity(Kinds.lycanthrope, null, "wolfwere", E =>
      {
        E.Glyph = Glyphs.wolfwere;
        E.Sonic = Sonics.howl;
        E.Level = 12;
        E.Challenge = 198;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 10, CON: 15, INT: 8, WIS: 11, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration);
        E.Startup.SetResistance(Elements.poison, Elements.drain);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +2 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      soldier = AddEntity(Kinds.military, Races.human, "soldier", E =>
      {
        E.Glyph = Glyphs.soldier;
        E.Level = 6;
        E.Challenge = 50;
        E.Difficulty = 8;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 14, CON: 14, INT: 8, WIS: 12, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.firearms, Skills.light_armour);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.tshirt);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.low_boots);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.assault_rifle);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.hunting_rifle);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.sniper_rifle);
        E.Startup.Loot.AddKit(Chance.Always, Items.pistol);
        E.Startup.Loot.AddKit(8.d6(), Items.bullet);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.frag_grenade);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.gas_grenade);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      sergeant = AddEntity(Kinds.military, Races.human, "sergeant", E =>
      {
        E.Glyph = Glyphs.sergeant;
        E.Level = 8;
        E.Challenge = 150;
        E.Difficulty = 10;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 15, CON: 15, INT: 9, WIS: 13, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.firearms);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.Always, Items.shotgun);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.submachine_gun);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.sawnoff_shotgun);
        E.Startup.Loot.AddKit(4.d6(), Items.shotgun_shell);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.frag_grenade);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.gas_grenade);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      lieutenant = AddEntity(Kinds.military, Races.human, "lieutenant", E =>
      {
        E.Glyph = Glyphs.lieutenant;
        E.Level = 10;
        E.Challenge = 200;
        E.Difficulty = 12;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 16, CON: 16, INT: 10, WIS: 14, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.firearms);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.Always, Items.grenade_launcher);
        E.Startup.Loot.AddKit(2.d10(), Items.frag_grenade);
        E.Startup.Loot.AddKit(Chance.OneIn30, Items.submachine_gun);
        E.Startup.Loot.AddKit(Chance.OneIn30, Items.auto_shotgun);
        E.Startup.Loot.AddKit(Chance.OneIn30, Items.sawnoff_shotgun);
        E.Startup.Loot.AddKit(Chance.Always, Items.pistol);
        E.Startup.Loot.AddKit(Chance.OneIn2, 8.d6(), Items.silver_bullet);
        E.Startup.Loot.AddKit(8.d6(), Items.bullet);
        E.Startup.Loot.AddKit(4.d6(), Items.shotgun_shell);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d3()); // +3 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d3());
        E.SetCorpse(Chance.Always);
      });

      captain = AddEntity(Kinds.military, Races.human, "captain", E =>
      {
        E.Glyph = Glyphs.captain;
        E.Level = 12;
        E.Challenge = 250;
        E.Difficulty = 14;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 17, CON: 17, INT: 11, WIS: 15, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.firearms);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.Always, Items.rocket_launcher);
        E.Startup.Loot.AddKit(2.d2(), Items.rocket);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.submachine_gun);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.heavy_machine_gun);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.auto_shotgun);
        E.Startup.Loot.AddKit(Chance.OneIn20, Items.sawnoff_shotgun);
        E.Startup.Loot.AddKit(Chance.Always, Items.pistol);
        E.Startup.Loot.AddKit(8.d20(), Items.mithril_bullet);
        E.Startup.Loot.AddKit(4.d10(), Items.shotgun_shell);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4()); // +3 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4());
        E.SetCorpse(Chance.Always);
      });

      keystone_kop = AddEntity(Kinds.military, Races.human, "keystone kop", E =>
      {
        E.Glyph = Glyphs.keystone_kop;
        E.Level = 1;
        E.Challenge = 5;
        E.Difficulty = 1;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 14, CON: 14, INT: 8, WIS: 12, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.whip, Skills.club);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(1.d2(), Items.cream_pie);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.rubber_hose);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.club);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d3()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      keystone_sergeant = AddEntity(Kinds.military, Races.human, "keystone sergeant", E =>
      {
        E.Glyph = Glyphs.kop_sergeant;
        E.Level = 2;
        E.Challenge = 15;
        E.Difficulty = 2;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 15, CON: 15, INT: 9, WIS: 13, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.whip, Skills.club, Skills.dual_wielding);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(1.d2(), Items.cream_pie);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.rubber_hose);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.club);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d5()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      keystone_lieutenant = AddEntity(Kinds.military, Races.human, "keystone lieutenant", E =>
      {
        E.Glyph = Glyphs.kop_lieutenant;
        E.Level = 3;
        E.Challenge = 20;
        E.Difficulty = 3;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 16, CON: 16, INT: 10, WIS: 14, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.whip, Skills.club, Skills.dual_wielding);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(1.d2(), Items.cream_pie);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.rubber_hose);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.club);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d3()); // +3 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d3());
        E.SetCorpse(Chance.Always);
      });

      keystone_captain = AddEntity(Kinds.military, Races.human, "keystone captain", E =>
      {
        E.Glyph = Glyphs.kop_captain;
        E.Level = 4;
        E.Challenge = 25;
        E.Difficulty = 4;
        E.Frequency = 0;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 17, CON: 17, INT: 11, WIS: 15, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.whip, Skills.club, Skills.dual_wielding);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(1.d2(), Items.cream_pie);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.rubber_hose);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.club);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d4()); // +3 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d4());
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region flayer.
      master_mind_flayer = AddEntity(Kinds.flayer, null, "master mind flayer", E =>
      {
        E.Glyph = Glyphs.master_mind_flayer;
        E.Level = 17;
        E.Challenge = 478;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 14, CON: 14, INT: 25, WIS: 18, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.magical);
        E.AddAttack(AttackTypes.tentacle, Elements.physical, Dice.Fixed(+2), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.DecreaseAbility(Attributes.intelligence, Dice.One));
          K.Apply.WhenChance(Chance.OneIn8, T => T.Amnesia(Range.Sq15));
        });
        E.AddAttack(AttackTypes.tentacle, Elements.physical, Dice.Fixed(+2), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.DecreaseAbility(Attributes.intelligence, Dice.One));
          K.Apply.WhenChance(Chance.OneIn8, T => T.Amnesia(Range.Sq15));
        });
        E.AddAttack(AttackTypes.tentacle, Elements.physical, Dice.Fixed(+2), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.DecreaseAbility(Attributes.intelligence, Dice.One));
          K.Apply.WhenChance(Chance.OneIn8, T => T.Amnesia(Range.Sq15));
        });
        E.AddAttack(AttackTypes.tentacle, Elements.physical, Dice.Fixed(+2), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.DecreaseAbility(Attributes.intelligence, Dice.One));
          K.Apply.WhenChance(Chance.OneIn8, T => T.Amnesia(Range.Sq15));
        });
        E.Conveyance.MajorProperty(Properties.telepathy);
        E.Conveyance.MinorAbility(Attributes.intelligence);
        E.SetCorpse(Chance.OneIn3);
      });

      mind_flayer = AddEntity(Kinds.flayer, null, "mind flayer", E =>
      {
        E.Glyph = Glyphs.mind_flayer;
        E.Level = 8;
        E.Challenge = 200;
        E.Difficulty = 10;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 9, DEX: 13, CON: 14, INT: 22, WIS: 14, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.magical);
        E.AddAttack(AttackTypes.tentacle, Elements.physical, Dice.Fixed(+2), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.DecreaseAbility(Attributes.intelligence, Dice.One));
        });
        E.AddAttack(AttackTypes.tentacle, Elements.physical, Dice.Fixed(+2), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.DecreaseAbility(Attributes.intelligence, Dice.One));
        });
        E.AddAttack(AttackTypes.tentacle, Elements.physical, Dice.Fixed(+2), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.DecreaseAbility(Attributes.intelligence, Dice.One));
        });
        E.Conveyance.MajorProperty(Properties.telepathy);
        E.Conveyance.MinorAbility(Attributes.intelligence);
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region imp.
      blood_imp = AddEntity(Kinds.imp, null, "blood imp", E =>
      {
        E.Glyph = Glyphs.blood_imp;
        E.Sonic = Sonics.cackle;
        E.Level = 14;
        E.Challenge = 264;
        E.Difficulty = 16;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +3 from dex = 22.
        E.SetDiet(Diets.hematophagy);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 17, CON: 13, INT: 11, WIS: 12, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.AddAttack(AttackTypes.claw, Elements.physical, 6.d3(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 6.d3());
        E.SetCorpse(Chance.Always);
        E.Conveyance.MinorProperty(Properties.life_regeneration);
      });

      dretch = AddEntity(Kinds.imp, null, "dretch", E =>
      {
        E.Glyph = Glyphs.dretch;
        E.Sonic = Sonics.cackle;
        E.Level = 2;
        E.Challenge = 10;
        E.Difficulty = 3;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 11, CON: 12, INT: 5, WIS: 8, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.SetCorpse(Chance.OneIn4);
      });

      gibberling = AddEntity(Kinds.imp, null, "gibberling", E =>
      {
        E.Glyph = Glyphs.gibberling;
        E.Sonic = Sonics.gibber;
        E.Level = 6;
        E.Challenge = 42;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // -2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(3500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 6, CON: 13, INT: 11, WIS: 8, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8());
        E.SetCorpse(Chance.OneIn3);
      });

      grimlock = AddEntity(Kinds.imp, null, "grimlock", E =>
      {
        E.Glyph = Glyphs.grimlock;
        E.Sonic = Sonics.cackle;
        E.Level = 10;
        E.Challenge = 87;
        E.Difficulty = 11;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +1 from dex = 16.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: false,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 12, CON: 12, INT: 9, WIS: 8, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // +3 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      homunculus = AddEntity(Kinds.imp, null, "homunculus", E =>
      {
        E.Glyph = Glyphs.homunculus;
        E.Sonic = Sonics.cackle;
        E.Level = 2;
        E.Challenge = 9;
        E.Difficulty = 3;
        E.Frequency = 2;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(600);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 4, DEX: 15, CON: 11, INT: 10, WIS: 10, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.flight);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3() + 3, K =>
        {
          K.Apply.ApplyTransient(Properties.sleeping, 1.d3() + 3);
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.sleep));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      imp = AddEntity(Kinds.imp, null, "imp", E =>
      {
        E.Glyph = Glyphs.imp;
        E.Sonic = Sonics.cackle;
        E.Level = 7;
        E.Challenge = 51;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +3 from dex = 18.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 17, CON: 13, INT: 11, WIS: 12, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4() + 4); // -3 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4() + 4);
        E.SetCorpse(Chance.Always);
      });

      lemure = AddEntity(Kinds.imp, null, "lemure", E =>
      {
        E.Glyph = Glyphs.lemure;
        E.Sonic = Sonics.cackle;
        E.Level = 3;
        E.Challenge = 10;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -3 from dex = 13.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 5, CON: 11, INT: 1, WIS: 11, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.Conveyance.MajorResistance(Elements.sleep);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      manes = AddEntity(Kinds.imp, null, "manes", E =>
      {
        E.Glyph = Glyphs.manes;
        E.Sonic = Sonics.cackle;
        E.Level = 1;
        E.Challenge = 2;
        E.Difficulty = 2;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // -1 from dex = 13.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 9, CON: 13, INT: 3, WIS: 8, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });

      nupperibo = AddEntity(Kinds.imp, null, "nupperibo", E =>
      {
        E.Glyph = Glyphs.nupperibo;
        E.Sonic = Sonics.cackle;
        E.Level = 7;
        E.Challenge = 71;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 9, DEX: 17, CON: 12, INT: 12, WIS: 11, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4(), K => // -1 from str.
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.SetCorpse(Chance.OneIn4);
      });

      quasit = AddEntity(Kinds.imp, null, "quasit", E =>
      {
        E.Glyph = Glyphs.quasit;
        E.Sonic = Sonics.cackle;
        E.Level = 8;
        E.Challenge = 90;
        E.Difficulty = 10;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +3 from dex = 18.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 5, DEX: 17, CON: 10, INT: 7, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d6(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.UnlessTargetResistant(Elements.poison, A => A.DecreaseAbility(Attributes.dexterity, Dice.One)));
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d6(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.UnlessTargetResistant(Elements.poison, A => A.DecreaseAbility(Attributes.dexterity, Dice.One)));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d8());
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      rutterkin = AddEntity(Kinds.imp, null, "rutterkin", E =>
      {
        E.Glyph = Glyphs.rutterkin;
        E.Sonic = Sonics.cackle;
        E.Level = 7;
        E.Challenge = 60;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 15, CON: 13, INT: 12, WIS: 11, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.AddAttack(AttackTypes.claw, Elements.physical, 5.d3(), K => // -2 from str.
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.SetCorpse(Chance.OneIn4);
      });

      tengu = AddEntity(Kinds.imp, null, "tengu", E =>
      {
        E.Glyph = Glyphs.tengu;
        E.Sonic = Sonics.cackle;
        E.Level = 26;
        E.Challenge = 875;
        E.Difficulty = 27;
        E.Frequency = 3;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(3000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 18, CON: 13, INT: 15, WIS: 14, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.teleportation, Properties.teleport_control);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d5());
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.poison));
          Table.Add(1, A => A.GainTalent(Properties.teleportation));
          Table.Add(1, A => A.GainTalent(Properties.teleport_control));
        }));
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region jelly.
      Defence NewJellyDefence(int Defence) => new Defence(Defence, P: +0, S: -1, B: +1);

      blue_jelly = AddEntity(Kinds.jelly, null, "blue jelly", E =>
      {
        E.Glyph = Glyphs.blue_jelly;
        E.Sonic = Sonics.burble;
        E.Level = 4;
        E.Challenge = 25;
        E.Difficulty = 5;
        E.Frequency = 2;
        E.Defence = NewJellyDefence(15); // -3 from dex = 12.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 4, CON: 11, INT: 1, WIS: 2, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.AddReaction(Chance.Always, Elements.cold, A =>
        {
          A.HealEntity(6.d6(), Modifier.Zero);
          A.CloneTargetEntity(Dice.One);
        });
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.cold, Elements.poison);
        E.AddRetaliation(Chance.OneIn3, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.frost, Dice.One);
          R.Apply.HarmEntity(Elements.cold, 5.d6());
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.SetCorpse(Chance.OneIn3);
      });

      clear_jelly = AddEntity(Kinds.jelly, null, "clear jelly", E =>
      {
        E.Glyph = Glyphs.clear_jelly;
        E.Sonic = Sonics.burble;
        E.Level = 16;
        E.Challenge = 352;
        E.Difficulty = 17;
        E.Frequency = 1;
        E.Defence = NewJellyDefence(20); // -3 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 4, CON: 12, INT: 1, WIS: 2, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.cold, Elements.poison);
        E.AddAttack(AttackTypes.touch, Elements.acid, 5.d6());
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.SetCorpse(Chance.OneIn3);
      });

      ochre_jelly = AddEntity(Kinds.jelly, null, "ochre jelly", E =>
      {
        E.Glyph = Glyphs.ochre_jelly;
        E.Sonic = Sonics.burble;
        E.Level = 10;
        E.Challenge = 149;
        E.Difficulty = 12;
        E.Frequency = 2;
        E.Defence = NewJellyDefence(18); // -3 from dex = 15.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 4, CON: 12, INT: 1, WIS: 2, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.petrify);
        E.SetEngulf(Strikes.acid, A => A.HarmEntity(Elements.acid, 2.d6()));
        E.AddAttack(AttackTypes.engulf, Elements.acid, 3.d6(), K => // -1 from str.
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 3.d2() + 2);
        });
        E.AddRetaliation(Chance.OneIn2, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 3.d6());
        });
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.OneIn3);
      });

      orange_jelly = AddEntity(Kinds.jelly, null, "orange jelly", E =>
      {
        E.Glyph = Glyphs.orange_jelly;
        E.Sonic = Sonics.burble;
        E.Level = 8;
        E.Challenge = 100;
        E.Difficulty = 10;
        E.Frequency = 1;
        E.Defence = NewJellyDefence(15); // -3 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2500);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 4, CON: 12, INT: 1, WIS: 2, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.petrify);
        E.SetEngulf(Strikes.acid, A => A.HarmEntity(Elements.acid, 2.d4()));
        E.AddAttack(AttackTypes.engulf, Elements.acid, 2.d8(), K => // -1 from str.
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 1.d6() + 2);
        });
        E.AddRetaliation(Chance.Always, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.gas, Dice.One);
          R.Apply.ApplyTransient(Properties.sleeping, 2.d6());
        });
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.OneIn3);
      });

      rancid_jelly = AddEntity(Kinds.jelly, null, "rancid jelly", E =>
      {
        E.Glyph = Glyphs.rancid_jelly;
        E.Sonic = Sonics.burble;
        E.Level = 17;
        E.Challenge = 338;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.Defence = NewJellyDefence(19); // -3 from dex = 16.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2500);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 4, CON: 13, INT: 1, WIS: 2, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.petrify);
        E.SetEngulf(Strikes.acid, A => A.HarmEntity(Elements.acid, 3.d6()));
        E.AddAttack(AttackTypes.engulf, Elements.acid, 4.d6(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 3.d2() + 2);
        });
        E.AddRetaliation(Chance.OneIn2, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 3.d6());
        });
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.OneIn3);
      });

      spotted_jelly = AddEntity(Kinds.jelly, null, "spotted jelly", E =>
      {
        E.Glyph = Glyphs.spotted_jelly;
        E.Sonic = Sonics.burble;
        E.Level = 6;
        E.Challenge = 42;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = NewJellyDefence(15); // -3 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 4, CON: 11, INT: 1, WIS: 2, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.petrify);
        E.AddRetaliation(Chance.OneIn2, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 6.d6());
        });
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.OneIn3);
      });

      yellow_jelly = AddEntity(Kinds.jelly, null, "yellow jelly", E =>
      {
        E.Glyph = Glyphs.yellow_jelly;
        E.Sonic = Sonics.burble;
        E.Level = 19;
        E.Challenge = 510;
        E.Difficulty = 21;
        E.Frequency = 1;
        E.Defence = NewJellyDefence(20); // -3 from dex = 17.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2500);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 4, CON: 12, INT: 1, WIS: 2, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.petrify);
        E.SetEngulf(Strikes.acid, A => A.HarmEntity(Elements.acid, 4.d4()));
        E.AddAttack(AttackTypes.engulf, Elements.acid, 4.d6(), K => // -1 from str.
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 3.d3() + 2);
        });
        E.AddRetaliation(Chance.OneIn3, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.psychic, Dice.One);
          R.Apply.ApplyTransient(Properties.stunned, 4.d3());
        });
        E.Conveyance.ApplyTransient(Properties.hallucination, Dice.Fixed(+200));
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region kobold.
      kobold_scout = AddEntity(Kinds.kobold, Races.kobold, "kobold scout", E =>
      {
        E.Glyph = Glyphs.kobold_scout;
        E.Sonic = Sonics.cackle;
        E.Level = 0;
        E.Challenge = 2;
        E.Difficulty = 1;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(3.d2()); // -1 from con.
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 7, DEX: 15, CON: 9, INT: 8, WIS: 7, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.dart);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn4, 3.d6(), Items.dart);
        E.Startup.Loot.AddKit(Chance.OneIn2, 1.d3(), Items.gold_coin);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6()); // -2 from strength.
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      kobold_king = AddEntity(Kinds.kobold, Races.kobold, "kobold king", E =>
      {
        E.Glyph = Glyphs.kobold_king;
        E.Sonic = Sonics.cackle;
        E.Level = 16;
        E.Challenge = 394;
        E.Difficulty = 17;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +3
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_3;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(5500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 16, CON: 12, INT: 13, WIS: 11, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.dart);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.poison, Elements.petrify);
        E.Startup.Loot.AddKit(Chance.OneIn4, 3.d6(), Items.poison_dart);
        E.Startup.Loot.AddKit(Chance.Always, 3.d8(), Items.gold_coin);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d7()); // +1 from STR
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d4() + 1, kobold_scout);
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      kobold_lord = AddEntity(Kinds.kobold, Races.kobold, "kobold lord", E =>
      {
        E.Glyph = Glyphs.kobold_lord;
        E.Sonic = Sonics.cackle;
        E.Level = 12;
        E.Challenge = 190;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +2 from DEX
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(5000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 9, DEX: 16, CON: 10, INT: 9, WIS: 8, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.dart);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn4, 2.d4(), Items.poison_dart);
        E.Startup.Loot.AddKit(Chance.OneIn2, 3.d6(), Items.dart);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4() + 4); // -1 from STR
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      kobold_shaman = AddEntity(Kinds.kobold, Races.kobold, "kobold shaman", E =>
      {
        E.Glyph = Glyphs.kobold_shaman;
        E.Sonic = Sonics.cackle;
        E.Level = 2;
        E.Challenge = 17;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +1 from DEX
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8()); // -2 from CON
        E.ManaAdvancement.Set(1.d8()); // +2 from WIS
        E.DefaultForm.Set(STR: 4, DEX: 15, CON: 7, INT: 14, WIS: 14, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.enchantment, Skills.dart, Skills.literacy);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn8, 1.d4(), Items.poison_dart);
        E.Startup.Loot.AddKit(Chance.OneIn4, 3.d6(), Items.dart);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(Dice.One, Spells.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // -3 from STR
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      kobold_warrior = AddEntity(Kinds.kobold, Races.kobold, "kobold warrior", E =>
      {
        E.Glyph = Glyphs.kobold_warrior;
        E.Sonic = Sonics.cackle;
        E.Level = 13;
        E.Challenge = 205;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +3
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 16, CON: 10, INT: 8, WIS: 7, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.dart);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn4, 1.d6(), Items.poison_dart);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d8() + 3); // -1 from STR
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      large_kobold = AddEntity(Kinds.kobold, Races.kobold, "large kobold", E =>
      {
        E.Glyph = Glyphs.large_kobold;
        E.Sonic = Sonics.cackle;
        E.Level = 1;
        E.Challenge = 7;
        E.Difficulty = 2;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +2 from DEX
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 9, DEX: 15, CON: 10, INT: 7, WIS: 7, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.dart);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn4, 3.d6(), Items.dart);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6() + 1); // -1 from STR
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      rock_kobold = AddEntity(Kinds.kobold, Races.kobold, "rock kobold", E =>
      {
        E.Glyph = Glyphs.rock_kobold;
        E.Sonic = Sonics.cackle;
        E.Level = 10;
        E.Challenge = 87;
        E.Difficulty = 11;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +1 from DEX
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8()); // +1 from CON
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 7, DEX: 13, CON: 12, INT: 8, WIS: 7, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.dart);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn4, 3.d6(), Items.dart);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5()); // -2 from STR
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      swamp_kobold = AddEntity(Kinds.kobold, Races.kobold, "swamp kobold", E =>
      {
        E.Glyph = Glyphs.swamp_kobold;
        E.Sonic = Sonics.cackle;
        E.Level = 8;
        E.Challenge = 65;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +2 from DEX
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8()); // -1 from CON.
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 7, DEX: 15, CON: 9, INT: 8, WIS: 7, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.dart);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn4, 2.d4(), Items.poison_dart);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d10() + 2); // -2 from STR
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region leprechaun.
      leprechaun = AddEntity(Kinds.imp, Races.leprechaun, "leprechaun", E =>
      {
        E.Glyph = Glyphs.leprechaun;
        E.Sonic = Sonics.giggle;
        E.Level = 5;
        E.Challenge = 34;
        E.Difficulty = 4;
        E.Frequency = 4;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(600);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 13, CON: 14, INT: 13, WIS: 10, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.teleportation, Properties.blinking);
        E.Startup.SetAcquisition(Properties.sleeping);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d2(), K => // -1 from str.
        {
          K.Apply.StealItem(Properties.fear, 6.d6() + 6, Items.gold_coin);
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.teleportation, 1.d500() + 750));
        E.SetCorpse(Chance.OneIn4);
      });

      leprechaun_wizard = AddEntity(Kinds.imp, Races.leprechaun, "leprechaun wizard", E =>
      {
        E.Glyph = Glyphs.leprechaun_wizard;
        E.Sonic = Sonics.giggle;
        E.Level = 13;
        E.Challenge = 218;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(600);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 11, CON: 15, INT: 15, WIS: 14, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient, Skills.abjuration, Skills.enchantment, Skills.literacy);
        E.Startup.SetTalent(Properties.teleportation, Properties.teleport_control, Properties.blinking);
        E.Startup.SetAcquisition(Properties.sleeping);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(Dice.One, Spells.teleport_away);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_object);
        E.Startup.AddGrimoire(Dice.One, Spells.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.slow);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4(), K => // -1 from str.
        {
          K.Apply.StealItem(Properties.fear, 6.d6() + 6, Items.gold_coin);
        });
        E.Conveyance.TradeoffAbility(Attributes.dexterity, Attributes.strength);
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.teleportation, 1.d500() + 750));
        E.SetCorpse(Chance.OneIn4);
      });
      #endregion

      #region lich.
      archlich = AddEntity(Kinds.lich, null, "arch-lich", E =>
      {
        E.Glyph = Glyphs.archlich;
        E.Sonic = Sonics.moan;
        E.Level = 25;
        E.Challenge = 815;
        E.Difficulty = 29;
        E.Frequency = 1;
        E.Defence = NewBoneDefence(24); // +2 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.bone,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 14, CON: 19, INT: 18, WIS: 17, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.conjuration, Skills.abjuration, Skills.literacy, Skills.transmutation, Skills.enchantment, Skills.necromancy);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration, Properties.mana_regeneration, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.AddGrimoire(1.d4() + 1, Spells.lightning_bolt, Spells.acid_stream, Spells.toxic_spray, Spells.poison_blast, Spells.cone_of_cold, Spells.animate_object);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.Startup.AddGrimoire(Dice.One, Spells.teleport_away);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, GoodAmuletItemArray);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Stocks.ring);
        E.AddAttack(AttackTypes.touch, Elements.cold, 2.d12()); // +5 from str.
        E.SetCorpse(Chance.Never);
      });

      demilich = AddEntity(Kinds.lich, null, "demilich", E =>
      {
        E.Glyph = Glyphs.demilich;
        E.Sonic = Sonics.moan;
        E.Level = 14;
        E.Challenge = 320;
        E.Difficulty = 18;
        E.Frequency = 1;
        E.Defence = NewBoneDefence(21); // +1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.bone,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 13, CON: 15, INT: 18, WIS: 17, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.conjuration, Skills.abjuration, Skills.literacy, Skills.transmutation, Skills.enchantment, Skills.necromancy);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration, Properties.mana_regeneration, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.AddGrimoire(1.d2() + 1, Spells.lightning_bolt, Spells.acid_stream, Spells.toxic_spray, Spells.poison_blast, Spells.cone_of_cold, Spells.animate_object);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.Startup.AddGrimoire(Dice.One, Spells.teleport_away);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.Startup.Loot.AddKit(Chance.OneIn8, Dice.One, GoodAmuletItemArray);
        E.Startup.Loot.AddKit(Chance.OneIn8, Dice.One, Stocks.ring);
        E.AddAttack(AttackTypes.touch, Elements.cold, 2.d4()); // +3 from str.
        E.SetCorpse(Chance.Never);
      });

      lich = AddEntity(Kinds.lich, null, "lich", E =>
      {
        E.Glyph = Glyphs.lich;
        E.Sonic = Sonics.moan;
        E.Level = 11;
        E.Challenge = 225;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = NewBoneDefence(19); // +1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.bone,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 13, CON: 12, INT: 15, WIS: 14, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.conjuration, Skills.abjuration, Skills.literacy, Skills.transmutation, Skills.enchantment, Skills.necromancy);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration, Properties.mana_regeneration, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt, Spells.acid_stream, Spells.toxic_spray, Spells.poison_blast, Spells.cone_of_cold, Spells.animate_object);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.Startup.AddGrimoire(Dice.One, Spells.teleport_away);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, GoodAmuletItemArray);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.ring);
        E.AddAttack(AttackTypes.touch, Elements.cold, 1.d9()); // +1 from str.
        E.SetCorpse(Chance.Never);
      });

      master_lich = AddEntity(Kinds.lich, null, "master lich", E =>
      {
        E.Glyph = Glyphs.master_lich;
        E.Sonic = Sonics.moan;
        E.Level = 17;
        E.Challenge = 426;
        E.Difficulty = 21;
        E.Frequency = 1;
        E.Defence = NewBoneDefence(23); // +1 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.bone,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 13, CON: 17, INT: 16, WIS: 15, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.conjuration, Skills.abjuration, Skills.literacy, Skills.transmutation, Skills.enchantment, Skills.necromancy);
        E.Startup.SetTalent(Properties.life_regeneration, Properties.mana_regeneration, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.fire, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.AddGrimoire(1.d3() + 1, Spells.lightning_bolt, Spells.acid_stream, Spells.toxic_spray, Spells.poison_blast, Spells.cone_of_cold, Spells.animate_object);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.Startup.AddGrimoire(Dice.One, Spells.teleport_away);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.Startup.Loot.AddKit(Chance.OneIn5, Dice.One, GoodAmuletItemArray);
        E.Startup.Loot.AddKit(Chance.OneIn5, Dice.One, Stocks.ring);
        E.AddAttack(AttackTypes.touch, Elements.cold, 1.d12()); // +4 from str.
        E.SetCorpse(Chance.Never);
      });

      dracolich = AddEntity(Kinds.lich, null, "dracolich", E =>
      {
        E.Glyph = Glyphs.dracolich;
        E.Sonic = Sonics.roar;
        E.Level = 30;
        E.Challenge = 1598;
        E.Difficulty = 35;
        E.Frequency = 1;
        E.Defence = NewBoneDefence(28); // +2 from dex = 30.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(67500);
        E.Figure.Set
        (
          Material: Materials.bone,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(72, 1.d4());
        E.ManaAdvancement.Set(36, 1.d2());
        E.DefaultForm.Set(STR: 23, DEX: 14, CON: 21, INT: 14, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.enchantment, Skills.necromancy, Skills.abjuration, Skills.evocation, Skills.literacy, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.see_invisible, Properties.flight, Properties.vitality, Properties.clarity, Properties.polymorph_control, Properties.life_regeneration, Properties.mana_regeneration);
        E.Startup.SetResistance(Elements.magical, Elements.poison, Elements.sleep, Elements.cold, Elements.shock, Elements.petrify, Elements.drain);
        E.Startup.AddGrimoire(Dice.One, Spells.fear);
        E.Startup.AddGrimoire(Dice.One, Spells.slow);
        E.Startup.AddGrimoire(Dice.One, Spells.drain_life);
        E.Startup.AddGrimoire(Dice.One, Spells.haste);
        E.Startup.AddGrimoire(Dice.One, Spells.invisibility);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.AddAttack(AttackTypes.breath, Elements.acid, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.death, 1.d5() + 5);
          K.Apply.Death(Elements.magical, Kinds.Living.ToArray(), Strikes.death, Cause: null);
        });
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.boost, 2.d4() + 4)
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.paralysis, 2.d4());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8(), K => // +6 from str.
        {
          K.Apply.ApplyTransient(Properties.paralysis, 4.d4());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.SetCorpse(Chance.Never);
      });

      Vecna = AddUniqueEntity(Kinds.lich, null, "Vecna", E =>
      {
        E.Glyph = Glyphs.Vecna;
        E.Sonic = Sonics.moan;
        E.Level = 35;
        E.Challenge = 2534;
        E.Difficulty = 40;
        E.Frequency = 0;
        E.Defence = NewBoneDefence(25); // +3 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.bone,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 23, DEX: 16, CON: 25, INT: 24, WIS: 24, CHA: 22);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.conjuration, Skills.abjuration, Skills.literacy, Skills.transmutation, Skills.enchantment, Skills.necromancy);
        E.Startup.SetTalent(Properties.life_regeneration, Properties.mana_regeneration, Properties.vitality, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.cold, Elements.fire, Elements.poison, Elements.sleep, Elements.magical, Elements.drain, Elements.petrify);
        E.Startup.AddGrimoire(Dice.Fixed(4), Spells.lightning_bolt, Spells.acid_stream, Spells.toxic_spray, Spells.poison_blast, Spells.cone_of_cold, Spells.animate_object);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.Startup.AddGrimoire(Dice.One, Spells.teleport_away);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.AddAttack(AttackTypes.touch, Elements.cold, 3.d16()); // +6 from str.
        E.SetCorpse(Chance.Never);
      });
      #endregion

      #region light.
      black_light = AddEntity(Kinds.light, null, "black light", E =>
      {
        E.Glyph = Glyphs.black_light;
        E.Level = 5;
        E.Challenge = 49;
        E.Difficulty = 7;
        E.Frequency = 2;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.ether,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 4, DEX: 18, CON: 9, INT: 1, WIS: 2, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.flight, Properties.invisibility);
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.disintegrate, Elements.shock, Elements.fire, Elements.poison, Elements.sleep, Elements.petrify);
        E.AddAttack(AttackTypes.blast, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Explosion(Explosions.dark, Dice.Zero);
          K.Apply.Light(false, Locality.Area); // always darken the room.
          K.Apply.WhenSourceHasProperty(Properties.invisibility, T => T.Nothing(), A =>
          {
            // should only hallucinate if the black light is not invisible.
            A.UnlessTargetHasProperty(Properties.blindness, U => U.ApplyTransient(Properties.hallucination, 10.d12()));
          });
        });
        E.SetCorpse(Chance.Never);
      });

      yellow_light = AddEntity(Kinds.light, null, "yellow light", E =>
      {
        E.Glyph = Glyphs.yellow_light;
        E.Level = 3;
        E.Challenge = 29;
        E.Difficulty = 3;
        E.Frequency = 4;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.ether,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 4, DEX: 18, CON: 9, INT: 1, WIS: 2, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.disintegrate, Elements.shock, Elements.fire, Elements.poison, Elements.sleep, Elements.petrify);
        E.AddAttack(AttackTypes.blast, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Explosion(Explosions.light, Dice.Zero);
          K.Apply.Light(true, Locality.Area); // always light the room up.
          K.Apply.WhenSourceHasProperty(Properties.invisibility, T => T.Nothing(), A =>
          {
            // should only blind if the yellow light is not invisible.
            A.ApplyTransient(Properties.blindness, 10.d15());
          });
        });
        E.SetCorpse(Chance.Never);
      });

      blue_light = AddEntity(Kinds.light, null, "blue light", E =>
      {
        E.Glyph = Glyphs.blue_light;
        E.Level = 5;
        E.Challenge = 49;
        E.Difficulty = 5;
        E.Frequency = 4;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.ether,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 4, DEX: 18, CON: 9, INT: 1, WIS: 2, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.disintegrate, Elements.shock, Elements.fire, Elements.poison, Elements.sleep, Elements.petrify);
        E.AddAttack(AttackTypes.blast, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Explosion(Explosions.light, Dice.Zero);
          K.Apply.WhenSourceHasProperty(Properties.invisibility, T => T.Nothing(), A =>
          {
            // should only apply if the blue light is not invisible.
            A.LoseNutrition(1.d100() + 100);
            A.ApplyTransient(Properties.hunger, 10.d15());
            A.DestroyCarriedItem(Dice.One, StockArray: [Stocks.food], SanctityArray: null, MaterialArray: null);
          });
        });
        E.SetCorpse(Chance.Never);
      });

      red_light = AddEntity(Kinds.light, null, "red light", E =>
      {
        E.Glyph = Glyphs.red_light;
        E.Level = 7;
        E.Challenge = 79;
        E.Difficulty = 7;
        E.Frequency = 4;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.ether,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 4, DEX: 18, CON: 9, INT: 1, WIS: 2, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.disintegrate, Elements.shock, Elements.fire, Elements.poison, Elements.sleep, Elements.petrify);
        E.AddAttack(AttackTypes.blast, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Explosion(Explosions.light, Dice.Zero);
          K.Apply.WhenSourceHasProperty(Properties.invisibility, T => T.Nothing(), A =>
          {
            // should only enrage if the red light is not invisible.
            A.ApplyTransient(Properties.rage, 10.d15());
          });
        });
        E.SetCorpse(Chance.Never);
      });
      #endregion

      #region lizard.
      baby_crocodile = AddEntity(Kinds.lizard, null, "baby crocodile", E =>
      {
        E.Glyph = Glyphs.baby_crocodile;
        E.Sonic = Sonics.squall;
        E.Level = 3;
        E.Challenge = 10;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0);
        E.SetTerrain(Materials.water, Materials.air);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 10, CON: 11, INT: 2, WIS: 8, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3()); // +1 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      basilisk = AddEntity(Kinds.lizard, null, "basilisk", E =>
      {
        E.Glyph = Glyphs.basilisk;
        E.Sonic = Sonics.squall;
        E.Level = 18;
        E.Challenge = 416;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -1 from dex = 15.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 8, CON: 15, INT: 2, WIS: 8, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d5(), K => // +3 from str.
        {
          K.Apply.ApplyTransient(Properties.petrifying, 4.d6());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d5(), K => // +3 from str.
        {
          K.Apply.ApplyTransient(Properties.petrifying, 4.d6());
        });
        E.AddRetaliation(Chance.Always, AttackTypes.gaze, R =>
        {
          R.SetCast().Strike(Strikes.spirit, Dice.One)
           .SetReflects()
           .SetBeholds();
          R.Apply.ApplyTransient(Properties.petrifying, 4.d6());
        });
        E.Conveyance.IncarcerateEntity(Elements.petrify, Codex.Blocks.statue);
        E.Conveyance.ApplyTransient(Properties.petrifying, 10.d100());
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
      });

      chameleon = AddEntity(Kinds.lizard, null, "chameleon", E =>
      {
        E.Glyph = Glyphs.chameleon;
        E.Sonic = Sonics.squall;
        E.Level = 9;
        E.Challenge = 74;
        E.Difficulty = 10;
        E.Frequency = 2;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 16, CON: 12, INT: 3, WIS: 9, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d3());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d3());
        E.Conveyance.PolymorphEntity();
        E.SetCorpse(Chance.OneIn4);
      });

      crocodile = AddEntity(Kinds.lizard, null, "crocodile", E =>
      {
        E.Glyph = Glyphs.crocodile;
        E.Sonic = Sonics.growl;
        E.Level = 12;
        E.Challenge = 184;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_3;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(80000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 10, CON: 13, INT: 2, WIS: 10, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6()); // +2 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d6());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d6());
        E.SetCorpse(Chance.Always);
      });

      gecko = AddEntity(Kinds.lizard, null, "gecko", E =>
      {
        E.Glyph = Glyphs.gecko;
        E.Sonic = Sonics.chirp;
        E.Level = 1;
        E.Challenge = 2;
        E.Difficulty = 2;
        E.Frequency = 5;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 2, DEX: 11, CON: 10, INT: 1, WIS: 8, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d8());
        E.SetCorpse(Chance.OneIn4);
      });

      gila_monster = AddEntity(Kinds.lizard, null, "gila monster", E =>
      {
        E.Glyph = Glyphs.gila_monster;
        E.Level = 6;
        E.Challenge = 49;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 12, CON: 13, INT: 2, WIS: 8, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d11(), K => // +1 from str.
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.SetCorpse(Chance.OneIn4);
      });

      iguana = AddEntity(Kinds.lizard, null, "iguana", E =>
      {
        E.Glyph = Glyphs.iguana;
        E.Level = 2;
        E.Challenge = 5;
        E.Difficulty = 3;
        E.Frequency = 5;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 4, DEX: 11, CON: 10, INT: 1, WIS: 8, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d2()); // -3 from str.
        E.SetCorpse(Chance.OneIn4);
      });

      komodo_dragon = AddEntity(Kinds.lizard, null, "komodo dragon", E =>
      {
        E.Glyph = Glyphs.komodo_dragon;
        E.Level = 21;
        E.Challenge = 652;
        E.Difficulty = 23;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(21000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 10, CON: 12, INT: 2, WIS: 8, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d6(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.constitution)));
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d10()); // +4 from str.
        E.SetCorpse(Chance.Always);
      });

      lizard = AddEntity(Kinds.lizard, null, "lizard", E =>
      {
        E.Glyph = Glyphs.lizard;
        E.Level = 5;
        E.Challenge = 26;
        E.Difficulty = 6;
        E.Frequency = 5;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 2, DEX: 11, CON: 10, INT: 1, WIS: 8, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.petrify);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10());
        E.Conveyance.RemoveTransient(Properties.confusion, Properties.stunned, Properties.petrifying);
        E.SetCorpse(Chance.Always);
      });

      newt = AddEntity(Kinds.lizard, null, "newt", E =>
      {
        E.Glyph = Glyphs.newt;
        E.Level = 0;
        E.Challenge = 1;
        E.Difficulty = 1;
        E.Frequency = 5;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d4());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 2, DEX: 11, CON: 10, INT: 1, WIS: 8, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d8());
        E.Conveyance.WhenChance(Chance.OneIn2, 
          T => T.EnergiseEntity(1.d3(), Modifier.Plus1),
          E => E.EnergiseEntity(1.d3(), Modifier.Zero));
        E.SetCorpse(Chance.Always);
      });

      rhaumbusun = AddEntity(Kinds.lizard, null, "rhaumbusun", E =>
      {
        E.Glyph = Glyphs.rhaumbusun;
        E.Sonic = Sonics.squall;
        E.Level = 2;
        E.Challenge = 24;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 11, CON: 10, INT: 2, WIS: 8, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.boost, 2.d4() + 4)
           .SetReflects()
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.paralysis, 1.d2());
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn4);
      });

      salamander = AddEntity(Kinds.lizard, null, "salamander", E =>
      {
        E.Glyph = Glyphs.salamander;
        E.Sonic = Sonics.squall;
        E.Level = 24;
        E.Challenge = 954;
        E.Difficulty = 28;
        E.Frequency = 1;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +2 from dex = 25.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 14, CON: 15, INT: 11, WIS: 10, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.fire, Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6()); // +5 from str.
        E.AddAttack(AttackTypes.touch, Elements.fire, 2.d8());
        E.AddAttack(AttackTypes.grapple, Elements.physical, 2.d5(), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.AddAttack(AttackTypes.grapple, Elements.fire, 3.d5(), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.Conveyance.MajorResistance(Elements.fire);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      lizardman_berserker = AddEntity(Kinds.lizardman, Races.lizardman, "lizardman berserker", E =>
      {
        E.Glyph = Glyphs.lizardman_berserker;
        E.Sonic = Sonics.grunt;
        E.Level = 20;
        E.Challenge = 600;
        E.Difficulty = 22;
        E.Frequency = 3;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(24000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 10, CON: 20, INT: 5, WIS: 5, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.expert, Skills.swimming);
        E.Startup.SetTalent(Properties.vitality, Properties.jumping);
        E.Startup.SetResistance(Elements.petrify);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4()); // +5 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4());
        E.Conveyance.Macro(Poisoned(Attributes.constitution));
        E.SetCorpse(Chance.Always);
      });

      lizardman_chieftain = AddEntity(Kinds.lizardman, Races.lizardman, "lizardman chieftain", E =>
      {
        E.Glyph = Glyphs.lizardman_chieftain;
        E.Sonic = Sonics.grunt;
        E.Level = 23;
        E.Challenge = 744;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +2 from dex = 25.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(26000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 14, CON: 20, INT: 15, WIS: 13, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.expert, Skills.swimming, Skills.light_armour);
        E.Startup.SetTalent(Properties.vitality, Properties.jumping);
        E.Startup.SetResistance(Elements.petrify);
        E.Startup.Loot.AddKit(Chance.OneIn4, Dice.One, GoodCloakItemArray);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6()); // +3 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d2() - 1, lizardman_berserker);
          A.Apply.SummonEntity(1.d3(), lizardman_warrior);
        });
        E.Conveyance.Macro(Poisoned(Attributes.constitution));
        E.SetCorpse(Chance.Always);
      });

      lizardman_mage = AddEntity(Kinds.lizardman, Races.lizardman, "lizardman mage", E =>
      {
        E.Glyph = Glyphs.lizardman_mage;
        E.Sonic = Sonics.grunt;
        E.Level = 21;
        E.Challenge = 641;
        E.Difficulty = 23;
        E.Frequency = 2;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex = 21.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(22000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 12, CON: 11, INT: 12, WIS: 14, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.expert, Skills.swimming, Skills.evocation, Skills.enchantment, Skills.transmutation, Skills.literacy);
        E.Startup.SetTalent(Properties.vitality, Properties.jumping);
        E.Startup.SetResistance(Elements.petrify);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(1.d2() + 1, Spells.cone_of_cold, Spells.acid_stream, Spells.magic_missile, Spells.poison_blast);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5(), A => A.Apply.ApplyTransient(Properties.paralysis, 2.d3())); // +2 from str.
        E.Conveyance.Macro(Poisoned(Attributes.constitution));
        E.SetCorpse(Chance.Always);
      });

      lizardman_shaman = AddEntity(Kinds.lizardman, Races.lizardman, "lizardman shaman", E =>
      {
        E.Glyph = Glyphs.lizardman_shaman;
        E.Sonic = Sonics.grunt;
        E.Level = 18;
        E.Challenge = 481;
        E.Difficulty = 20;
        E.Frequency = 2;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +1 from dex = 20.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(22000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 12, CON: 11, INT: 10, WIS: 14, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.expert, Skills.swimming, Skills.evocation, Skills.enchantment, Skills.transmutation, Skills.conjuration, Skills.literacy);
        E.Startup.SetTalent(Properties.vitality, Properties.jumping);
        E.Startup.SetResistance(Elements.petrify);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(1.d2() + 1, Spells.fear, Spells.confusion, Spells.summoning, Spells.slow, Spells.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5(), A => A.Apply.ApplyTransient(Properties.paralysis, 2.d3())); // +2 from str.
        E.Conveyance.Macro(Poisoned(Attributes.constitution));
        E.SetCorpse(Chance.Always);
      });

      lizardman_warrior = AddEntity(Kinds.lizardman, Races.lizardman, "lizardman warrior", E =>
      {
        E.Glyph = Glyphs.lizardman_warrior;
        E.Sonic = Sonics.grunt;
        E.Level = 17;
        E.Challenge = 421;
        E.Difficulty = 19;
        E.Frequency = 4;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +2 from dex = 18.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(24000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 14, CON: 18, INT: 8, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.expert, Skills.swimming);
        E.Startup.SetTalent(Properties.vitality, Properties.jumping);
        E.Startup.SetResistance(Elements.petrify);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d8()); // +2 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d8());
        E.Conveyance.Macro(Poisoned(Attributes.constitution));
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region mercenary.
      earth_seeker = AddEntity(Kinds.mercenary, Races.human, "earth seeker", E =>
      {
        E.Glyph = Glyphs.earth_seeker;
        E.Level = 10;
        E.Challenge = 198;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +4 from dex = 24.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(8, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(8, 1.d8());
        E.DefaultForm.Set(STR: 15, DEX: 10, CON: 16, INT: 14, WIS: 14, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.abjuration, Skills.evocation, Skills.clerical, Skills.literacy, Skills.transmutation, Skills.light_armour, Skills.staff);
        E.Startup.SetSkill(Qualifications.specialist, Skills.conjuration);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison, Elements.petrify, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.crushing_sphere);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_earth);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.Conveyance.MinorResistance(Elements.disintegrate);
        E.SetCorpse(Chance.OneIn3);
      });

      earth_binder = AddEntity(Kinds.mercenary, Races.human, "earth binder", E =>
      {
        E.Glyph = Glyphs.earth_binder;
        E.Level = 20;
        E.Challenge = 598;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +4 from dex = 24.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(16, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(16, 1.d8());
        E.DefaultForm.Set(STR: 18, DEX: 12, CON: 18, INT: 16, WIS: 15, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.abjuration, Skills.evocation, Skills.clerical, Skills.literacy, Skills.transmutation, Skills.light_armour, Skills.staff);
        E.Startup.SetSkill(Qualifications.expert, Skills.conjuration);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison, Elements.petrify, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.crushing_sphere);
        E.Startup.AddGrimoire(Dice.One, Spells.dig);
        E.Startup.Loot.AddKit(GoodCloakItemArray);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_earth);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_summoning);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4());
        E.Conveyance.MinorResistance(Elements.disintegrate);
        E.SetCorpse(Chance.OneIn3);
      });

      earth_maker = AddEntity(Kinds.mercenary, Races.human, "earth maker", E =>
      {
        E.Glyph = Glyphs.earth_maker;
        E.Level = 30;
        E.Challenge = 1498;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +4 from dex = 24.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(32, 1.d8());
        E.DefaultForm.Set(STR: 20, DEX: 13, CON: 22, INT: 19, WIS: 17, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.abjuration, Skills.evocation, Skills.clerical, Skills.literacy, Skills.transmutation, Skills.light_armour, Skills.staff);
        E.Startup.SetSkill(Qualifications.master, Skills.conjuration);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison, Elements.petrify, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.crushing_sphere);
        E.Startup.AddGrimoire(Dice.One, Spells.dig);
        E.Startup.AddGrimoire(Dice.One, Spells.disintegrate);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, GoodCloakItemArray);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, Items.quarterstaff);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_summoning);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_earth);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.Conveyance.MajorResistance(Elements.disintegrate);
        E.SetCorpse(Chance.OneIn3);
      });

      frost_seeker = AddEntity(Kinds.mercenary, Races.human, "frost seeker", E =>
      {
        E.Glyph = Glyphs.frost_seeker;
        E.Level = 10;
        E.Challenge = 196;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(8, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(8, 1.d8());
        E.DefaultForm.Set(STR: 9, DEX: 11, CON: 13, INT: 13, WIS: 11, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.light_armour, Skills.literacy);
        E.Startup.SetSkill(Qualifications.specialist, Skills.conjuration);
        E.Startup.SetResistance(Elements.cold);
        E.Startup.AddGrimoire(Dice.One, Spells.freezing_sphere);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_ice);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // -1 from str.
        E.Conveyance.MinorResistance(Elements.cold);
        E.SetCorpse(Chance.OneIn3);
      });

      frost_binder = AddEntity(Kinds.mercenary, Races.human, "frost binder", E =>
      {
        E.Glyph = Glyphs.frost_binder;
        E.Level = 20;
        E.Challenge = 596;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(16, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(16, 1.d8());
        E.DefaultForm.Set(STR: 12, DEX: 13, CON: 14, INT: 14, WIS: 16, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.medium_armour, Skills.light_armour, Skills.literacy);
        E.Startup.SetSkill(Qualifications.expert, Skills.conjuration);
        E.Startup.SetResistance(Elements.cold);
        E.Startup.AddGrimoire(Dice.One, Spells.freezing_sphere);
        E.Startup.AddGrimoire(Dice.One, Spells.cone_of_cold);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, Items.ring_mail);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, GoodCloakItemArray);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.wand_of_cold);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_ice);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4()); // -1 from str.
        E.Conveyance.MinorResistance(Elements.cold);
        E.SetCorpse(Chance.OneIn3);
      });

      frost_maker = AddEntity(Kinds.mercenary, Races.human, "frost maker", E =>
      {
        E.Glyph = Glyphs.frost_maker;
        E.Level = 30;
        E.Challenge = 1431;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(32, 1.d8());
        E.DefaultForm.Set(STR: 15, DEX: 13, CON: 17, INT: 19, WIS: 17, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.abjuration, Skills.literacy, Skills.light_armour, Skills.staff);
        E.Startup.SetSkill(Qualifications.master, Skills.conjuration);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison, Elements.cold, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.freezing_sphere);
        E.Startup.AddGrimoire(Dice.One, Spells.cone_of_cold);
        E.Startup.AddGrimoire(Dice.One, Spells.ice_storm);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, GoodCloakItemArray);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, Items.quarterstaff);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_summoning);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_paralysis);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.Conveyance.MajorResistance(Elements.cold);
        E.SetCorpse(Chance.OneIn3);
      });

      flame_seeker = AddEntity(Kinds.mercenary, Races.human, "flame seeker", E =>
      {
        E.Glyph = Glyphs.flame_seeker;
        E.Level = 10;
        E.Challenge = 173;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(8, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(8, 1.d8());
        E.DefaultForm.Set(STR: 9, DEX: 15, CON: 11, INT: 13, WIS: 13, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.light_armour, Skills.literacy);
        E.Startup.SetSkill(Qualifications.specialist, Skills.conjuration);
        E.Startup.SetResistance(Elements.fire);
        E.Startup.AddGrimoire(Dice.One, Spells.flaming_sphere);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_fire);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // -1 from str.
        E.Conveyance.MinorResistance(Elements.fire);
        E.SetCorpse(Chance.OneIn3);
      });

      flame_binder = AddEntity(Kinds.mercenary, Races.human, "flame binder", E =>
      {
        E.Glyph = Glyphs.flame_binder;
        E.Level = 20;
        E.Challenge = 603;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(16, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(16, 1.d8());
        E.DefaultForm.Set(STR: 11, DEX: 17, CON: 12, INT: 15, WIS: 15, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.medium_armour, Skills.light_armour, Skills.literacy);
        E.Startup.SetSkill(Qualifications.expert, Skills.conjuration);
        E.Startup.SetResistance(Elements.fire);
        E.Startup.AddGrimoire(Dice.One, Spells.flaming_sphere);
        E.Startup.AddGrimoire(Dice.One, Spells.fireball);
        E.Startup.Loot.AddKit(Chance.Always, Items.chain_mail);
        E.Startup.Loot.AddKit(Chance.OneIn2, GoodCloakItemArray);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.wand_of_fire);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_fire);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_summoning);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4()); // -1 from str.
        E.Conveyance.MinorResistance(Elements.fire);
        E.SetCorpse(Chance.OneIn3);
      });

      flame_maker = AddEntity(Kinds.mercenary, Races.human, "flame maker", E =>
      {
        E.Glyph = Glyphs.flame_maker;
        E.Level = 30;
        E.Challenge = 1427;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(32, 1.d8());
        E.DefaultForm.Set(STR: 13, DEX: 19, CON: 14, INT: 19, WIS: 15, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.abjuration, Skills.literacy, Skills.light_armour, Skills.staff);
        E.Startup.SetSkill(Qualifications.master, Skills.conjuration);
        E.Startup.SetResistance(Elements.poison, Elements.fire, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.flaming_sphere);
        E.Startup.AddGrimoire(Dice.One, Spells.fireball);
        E.Startup.AddGrimoire(Dice.One, Spells.haste);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, GoodCloakItemArray);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, Items.quarterstaff);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_summoning);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_fire);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.Conveyance.MajorResistance(Elements.fire);
        E.SetCorpse(Chance.OneIn3);
      });

      shock_seeker = AddEntity(Kinds.mercenary, Races.human, "shock seeker", E =>
      {
        E.Glyph = Glyphs.shock_seeker;
        E.Level = 10;
        E.Challenge = 173;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(8, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(8, 1.d8());
        E.DefaultForm.Set(STR: 11, DEX: 15, CON: 11, INT: 13, WIS: 11, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.clerical, Skills.abjuration, Skills.literacy, Skills.transmutation, Skills.light_armour, Skills.staff);
        E.Startup.SetSkill(Qualifications.specialist, Skills.conjuration);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.shock, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.shocking_sphere);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_air);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.Conveyance.MinorResistance(Elements.shock);
        E.SetCorpse(Chance.OneIn3);
      });

      shock_binder = AddEntity(Kinds.mercenary, Races.human, "shock binder", E =>
      {
        E.Glyph = Glyphs.shock_binder;
        E.Level = 20;
        E.Challenge = 498;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(16, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(16, 1.d8());
        E.DefaultForm.Set(STR: 13, DEX: 17, CON: 13, INT: 15, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.clerical, Skills.abjuration, Skills.literacy, Skills.transmutation, Skills.light_armour, Skills.staff);
        E.Startup.SetSkill(Qualifications.expert, Skills.conjuration);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.shock, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.shocking_sphere);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.Startup.Loot.AddKit(Chance.Always, Items.leather_armour);
        E.Startup.Loot.AddKit(Chance.OneIn2, GoodCloakItemArray);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_summoning);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_air);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4());
        E.Conveyance.MinorResistance(Elements.shock);
        E.SetCorpse(Chance.OneIn3);
      });

      shock_maker = AddEntity(Kinds.mercenary, Races.human, "shock maker", E =>
      {
        E.Glyph = Glyphs.shock_maker;
        E.Level = 30;
        E.Challenge = 1513;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(32, 1.d8());
        E.DefaultForm.Set(STR: 13, DEX: 19, CON: 15, INT: 17, WIS: 15, CHA: 19);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.clerical, Skills.abjuration, Skills.literacy, Skills.transmutation, Skills.light_armour, Skills.staff);
        E.Startup.SetSkill(Qualifications.master, Skills.conjuration);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.shock, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.shocking_sphere);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.Startup.AddGrimoire(Dice.One, Spells.invisibility);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, GoodCloakItemArray);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, Items.quarterstaff);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_summoning);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_air);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.Conveyance.MajorResistance(Elements.shock);
        E.SetCorpse(Chance.OneIn3);
      });

      water_seeker = AddEntity(Kinds.mercenary, Races.human, "water seeker", E =>
      {
        E.Glyph = Glyphs.water_seeker;
        E.Level = 10;
        E.Challenge = 164;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(8, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(8, 1.d8());
        E.DefaultForm.Set(STR: 12, DEX: 12, CON: 15, INT: 14, WIS: 14, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.clerical, Skills.abjuration, Skills.literacy, Skills.transmutation, Skills.light_armour, Skills.staff);
        E.Startup.SetSkill(Qualifications.specialist, Skills.conjuration);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison, Elements.shock, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.soaking_sphere);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_water);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.Conveyance.MinorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      water_binder = AddEntity(Kinds.mercenary, Races.human, "water binder", E =>
      {
        E.Glyph = Glyphs.water_binder;
        E.Level = 20;
        E.Challenge = 518;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(16, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(16, 1.d8());
        E.DefaultForm.Set(STR: 14, DEX: 14, CON: 17, INT: 16, WIS: 16, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.clerical, Skills.abjuration, Skills.literacy, Skills.transmutation, Skills.light_armour, Skills.medium_armour, Skills.staff);
        E.Startup.SetSkill(Qualifications.expert, Skills.conjuration);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison, Elements.shock, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.soaking_sphere);
        E.Startup.AddGrimoire(Dice.One, Spells.toxic_spray);
        E.Startup.Loot.AddKit(Chance.Always, Items.scale_mail);
        E.Startup.Loot.AddKit(Chance.OneIn2, GoodCloakItemArray);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_summoning);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_water);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d4());
        E.Conveyance.MinorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      water_maker = AddEntity(Kinds.mercenary, Races.human, "water maker", E =>
      {
        E.Glyph = Glyphs.water_maker;
        E.Level = 30;
        E.Challenge = 1459;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8()); // Added HP in order to let them stronger than current level.
        E.ManaAdvancement.Set(32, 1.d8());
        E.DefaultForm.Set(STR: 16, DEX: 16, CON: 19, INT: 18, WIS: 18, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.clerical, Skills.abjuration, Skills.literacy, Skills.transmutation, Skills.light_armour, Skills.staff);
        E.Startup.SetSkill(Qualifications.master, Skills.conjuration);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison, Elements.shock, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.soaking_sphere);
        E.Startup.AddGrimoire(Dice.One, Spells.toxic_spray);
        E.Startup.AddGrimoire(Dice.One, Spells.poison_blast);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, GoodCloakItemArray);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, Items.quarterstaff);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_summoning);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_water);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      abbot = AddEntity(Kinds.mercenary, Races.human, "abbot", E =>
      {
        E.Glyph = Glyphs.abbot;
        E.Level = 23;
        E.Challenge = 812;
        E.Difficulty = 18;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 14, DEX: 16, CON: 15, INT: 12, WIS: 18, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.conjuration, Skills.enchantment, Skills.unarmed_combat, Skills.light_armour, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.deflection);
        E.Startup.SetResistance(Elements.sleep, Elements.poison);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.Startup.AddGrimoire(Dice.One, Spells.slow);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, Items.robe);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_magic_mapping);
        E.AddAttack(AttackTypes.punch, Elements.physical, 2.d7()); // +2 from str.
        E.AddAttack(AttackTypes.kick, Elements.physical, 3.d6(), K =>
        {
          K.Apply.ApplyTransient(Properties.stunned, 3.d2());
        });
        E.Conveyance.ApplyTransient(Properties.hallucination, Dice.Fixed(+200));
        E.SetCorpse(Chance.OneIn3);
      });

      acolyte = AddEntity(Kinds.mercenary, Races.human, "acolyte", E =>
      {
        E.Glyph = Glyphs.acolyte;
        E.Level = 4;
        E.Challenge = 46;
        E.Difficulty = 2;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 14, DEX: 11, CON: 12, INT: 13, WIS: 15, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.clerical, Skills.conjuration, Skills.enchantment, Skills.literacy);
        E.Startup.SetTalent();
        E.Startup.AddGrimoire(Dice.One, Spells.slow, Spells.summoning, Spells.healing);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_remove_curse);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6()); // +2 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      apprentice = AddEntity(Kinds.mercenary, Races.human, "apprentice", E =>
      {
        E.Glyph = Glyphs.apprentice;
        E.Level = 7;
        E.Challenge = 96;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(13000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 10, DEX: 13, CON: 10, INT: 14, WIS: 14, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.abjuration, Skills.enchantment, Skills.transmutation, Skills.light_blade, Skills.light_armour, Skills.literacy);
        E.Startup.SetTalent();
        E.Startup.AddGrimoire(Dice.One, Spells.magic_missile);
        E.Startup.Loot.AddKit(Items.leather_cloak);
        E.Startup.Loot.AddKit(Items.athame);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_summoning);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6());
        E.SetCorpse(Chance.OneIn3);
      });

      attendant = AddEntity(Kinds.mercenary, Races.human, "attendant", E =>
      {
        E.Glyph = Glyphs.attendant;
        E.Level = 8;
        E.Challenge = 110;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 13, CON: 14, INT: 10, WIS: 11, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_sickness);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_healing);
        E.Startup.Loot.AddKit(Chance.OneIn4, Items.potion_of_extra_healing);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.wand_of_healing);
        E.Startup.Loot.AddKit(Chance.OneIn4, Items.wand_of_extra_healing);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6());
        E.SetCorpse(Chance.OneIn3);
      });

      gypsy = AddEntity(Kinds.mercenary, Races.human, "gypsy", E =>
      {
        E.Glyph = Glyphs.gypsy;
        E.Level = 19;
        E.Challenge = 519;
        E.Difficulty = 14;
        E.Frequency = 2;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 18, CON: 16, INT: 15, WIS: 17, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.abjuration, Skills.conjuration, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.teleportation, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.teleport_away);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d8(), K => // +3 from str.
        {
          K.Apply.PlaceCurse(Dice.One, Sanctities.Cursed);
        });
        E.Conveyance.TradeoffAbility(Attributes.wisdom, Attributes.charisma);
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.teleportation, 1.d500() + 750));
        E.SetCorpse(Chance.OneIn3);
      });

      black_marketeer = AddEntity(Kinds.mercenary, Races.human, "black marketeer", E =>
      {
        E.Glyph = Glyphs.black_marketeer;
        E.Level = 25;
        E.Challenge = 741;
        E.Difficulty = 21;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 28, P: +0, S: +0, B: +0); // +3 from dex =31.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 16, CON: 16, INT: 16, WIS: 14, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.sling, Skills.axe);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.sleep, Elements.petrify);
        E.Startup.SetTalent(Properties.quickness);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, 3.d4(), Sanctities.Blessed, Modifier.Plus1to3, [Items.hatchet]);
        E.Startup.Loot.AddKit(50.d100(), Items.gold_coin);
        E.Startup.Loot.AddKit(1.d3() + 1, Chance.Always, Stocks.potion); // 2..4
        E.Startup.Loot.AddKit(1.d3() + 1, Chance.Always, Stocks.scroll); // 2..4
        E.Startup.Loot.AddKit(1.d3() - 1, Chance.Always, Stocks.ring); // 0..2
        E.Startup.Loot.AddKit(1.d2() - 1, Chance.Always, Stocks.amulet); // 0..1
        E.Startup.Loot.AddKit(1.d2(), Chance.Always, Stocks.book); // 1..2
        E.Startup.Loot.AddKit(2.d3(), Chance.Always, Stocks.food); // 2..6
        E.Startup.Loot.AddKit(2.d4(), Chance.Always, Stocks.gem); // 2..8 
        //E.Startup.Loot.AddKit(2.d2(), Chance.Always, Stocks.weapon.ItemList.Where(I => !I.Grade.Unique && I.IsFirearm()).ToArray()); // 2..4 firearms
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d10());
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.OneIn3);
      });

      undead_slayer = AddEntity(Kinds.mercenary, Races.human, "undead slayer", E =>
      {
        E.Glyph = Glyphs.undead_slayer;
        E.Level = 30;
        E.Challenge = 1368;
        E.Difficulty = 29;
        E.Frequency = 1;
        E.IsMercenary = true;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +4 from dex, avg = 27
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 19, CON: 15, INT: 13, WIS: 14, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.firearms, Skills.light_armour, Skills.crossbow, Skills.dual_wielding);
        E.Startup.SetTalent(Properties.clarity);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, Dice.One, Sanctities.Blessed, Modifier.Plus1to3, [Items.leather_armour]);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, Dice.One, Sanctities.Blessed, Modifier.Plus1to3, [Items.leather_cloak]);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, Dice.One, Sanctities.Blessed, Modifier.Plus1to3, [Items.fedora]);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, Dice.One, Sanctities.Blessed, Modifier.Plus1to3, [Items.pistol]);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, Dice.One, Sanctities.Blessed, Modifier.Plus1to3, [Items.crossbow]);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, 10.d10(), Sanctities.Blessed, Modifier.Plus1to3, [Items.silver_bullet]);
        E.Startup.Loot.AddKit(Dice.One, Chance.Always, 6.d4(), Sanctities.Blessed, Modifier.Plus1to3, [Items.silver_crossbow_bolt]);
        E.Startup.Loot.AddKit(Dice.One, Items.wooden_stake);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 5.d4()); // +3 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      yeoman = AddEntity(Kinds.mercenary, Races.human, "yeoman", E =>
      {
        E.Glyph = Glyphs.yeoman;
        E.Level = 9;
        E.Challenge = 156;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 11, CON: 13, INT: 8, WIS: 11, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.polearm);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Items.fauchard);
        E.Startup.Loot.AddKit(Items.studded_leather_armour);
        E.Startup.Loot.AddKit(Items.low_boots);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d10()); // +2 from str.
        E.SetCorpse(Chance.Always);
      });

      yeoman_warder = AddEntity(Kinds.mercenary, Races.human, "yeoman warder", E =>
      {
        E.Glyph = Glyphs.yeoman_warder;
        E.Level = 16;
        E.Challenge = 151;
        E.Difficulty = 11;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 11, CON: 15, INT: 10, WIS: 11, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_armour, Skills.polearm);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Items.ranseur);
        E.Startup.Loot.AddKit(Items.chain_mail);
        E.Startup.Loot.AddKit(Items.high_boots);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6()); // +2 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      chief_yeoman_warder = AddEntity(Kinds.mercenary, Races.human, "chief yeoman warder", E =>
      {
        E.Glyph = Glyphs.chief_yeoman_warder;
        E.Level = 28;
        E.Challenge = 1168;
        E.Difficulty = 23;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(17000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 15, CON: 18, INT: 12, WIS: 14, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.heavy_armour, Skills.polearm);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Items.halberd);
        E.Startup.Loot.AddKit(Items.plate_mail);
        E.Startup.Loot.AddKit(Items.iron_shoes);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d10()); // +4 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      chieftain = AddEntity(Kinds.mercenary, Races.human, "chieftain", E =>
      {
        E.Glyph = Glyphs.chieftain;
        E.Level = 29;
        E.Challenge = 1031;
        E.Difficulty = 24;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(19000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 9, CON: 19, INT: 9, WIS: 14, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.heavy_armour, Skills.medium_armour, Skills.heavy_blade);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Items.broadsword);
        E.Startup.Loot.AddKit(Items.large_shield);
        E.Startup.Loot.AddKit(Items.chain_mail);
        E.Startup.Loot.AddKit(Items.iron_shoes);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_teleportation);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d8()); // +6 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      embalmer = AddEntity(Kinds.mercenary, Races.human, "embalmer", E =>
      {
        E.Glyph = Glyphs.embalmer;
        E.Level = 15;
        E.Challenge = 296;
        E.Difficulty = 10;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(13000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 12, CON: 15, INT: 13, WIS: 11, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.necromancy, Skills.literacy);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.drain);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.wand_of_draining);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_sickness);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d8()); // +1 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      exterminator = AddEntity(Kinds.mercenary, Races.human, "exterminator", E =>
      {
        E.Glyph = Glyphs.exterminator;
        E.Level = 18;
        E.Challenge = 550;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 16, CON: 13, INT: 13, WIS: 11, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.firearms);
        E.Startup.SetTalent(Properties.dark_vision, Properties.jumping);
        E.Startup.Loot.AddKit(Items.sawnoff_shotgun);
        E.Startup.Loot.AddKit(Items.pistol);
        E.Startup.Loot.AddKit(4.d4(), Items.shotgun_shell);
        E.Startup.Loot.AddKit(4.d8(), Items.bullet);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_sleeping);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.fly_swatter);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d6()); // +1 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      fiend = AddEntity(Kinds.mercenary, Races.demon, "fiend", E =>
      {
        E.Glyph = Glyphs.fiend;
        E.Level = 25;
        E.Challenge = 871;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 19, DEX: 15, CON: 16, INT: 12, WIS: 15, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.polearm);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Items.potion_of_paralysis);
        E.Startup.Loot.AddKit(Items.trident);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5()); // +4 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5());
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      guide = AddEntity(Kinds.mercenary, Races.human, "guide", E =>
      {
        E.Glyph = Glyphs.guide;
        E.Level = 3;
        E.Challenge = 35;
        E.Difficulty = 1;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 13, CON: 12, INT: 11, WIS: 10, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.riding, Skills.whip);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.Always, Items.bullwhip);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_object_detection);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_monster_detection);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6());
        E.SetCorpse(Chance.OneIn3);
      });

      high_priest = AddEntity(Kinds.mercenary, Races.human, "high priest", E =>
      {
        E.Glyph = Glyphs.high_priest;
        E.Level = 30;
        E.Challenge = 1274;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 25, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 19, DEX: 11, CON: 21, INT: 17, WIS: 22, CHA: 20);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.clerical, Skills.conjuration, Skills.mace, Skills.literacy, Skills.necromancy);
        E.Startup.SetTalent(Properties.see_invisible);
        E.Startup.SetResistance(Elements.shock, Elements.fire, Elements.poison, Elements.sleep);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, [Items.silver_mace, Items.mace]);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_water);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.Startup.AddGrimoire(Dice.One, Spells.extra_healing);
        E.Startup.AddGrimoire(Dice.One, Spells.raise_dead);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d10()); // +4 from str.
        E.AddAttack(AttackTypes.kick, Elements.physical, 2.d5());
        E.AddAttack(AttackTypes.spell, Elements.physical, 3.d5());
        E.AddAttack(AttackTypes.spell, Elements.physical, 3.d5());
        E.SetCorpse(Chance.OneIn3);
      });

      tracker = AddEntity(Kinds.mercenary, Races.human, "tracker", E =>
      {
        E.Glyph = Glyphs.tracker;
        E.Level = 24;
        E.Challenge = 746;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 18, CON: 16, INT: 8, WIS: 15, CHA: 12);
        E.LimitForm.Set(STR: 20, DEX: 20, CON: 20, INT: 20, WIS: 20, CHA: 20);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.bow, Skills.light_armour);
        E.Startup.SetTalent(Properties.see_invisible, Properties.dark_vision, Properties.stealth);
        E.Startup.Loot.AddKit(Chance.Always, Items.bow);
        E.Startup.Loot.AddKit(Chance.OneIn4, 2.d6(), Items.silver_arrow);
        E.Startup.Loot.AddKit(Chance.Always, 3.d6(), Items.arrow);
        E.Startup.Loot.AddKit(Chance.OneIn5, Items.studded_leather_armour);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.elven_boots);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_monster_detection);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_magic_mapping);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_food_detection);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4()); // +2 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      intern = AddEntity(Kinds.mercenary, Races.human, "intern", E =>
      {
        E.Glyph = Glyphs.intern;
        E.Level = 12;
        E.Challenge = 201;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 13, CON: 10, INT: 11, WIS: 12, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_acid);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_booze);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_hallucination);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6());
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      mugger = AddEntity(Kinds.mercenary, Races.human, "mugger", E =>
      {
        E.Glyph = Glyphs.mugger;
        E.Level = 13;
        E.Challenge = 230;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 15, CON: 12, INT: 8, WIS: 8, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.firearms);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.Always, Sanctities.Blessed, Items.hunting_rifle);
        E.Startup.Loot.AddKit(Chance.Always, 8.d8(), Sanctities.Blessed, Items.bullet);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_confusion);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // +2 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.SetCorpse(Chance.OneIn3);
      });

      neanderthal = AddEntity(Kinds.mercenary, Races.human, "neanderthal", E =>
      {
        E.Glyph = Glyphs.neanderthal;
        E.Level = 17;
        E.Challenge = 421;
        E.Difficulty = 12;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 11, CON: 16, INT: 6, WIS: 8, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.club, Skills.sling);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Items.war_club);
        E.Startup.Loot.AddKit(4.d6(), Items.rock);
        E.Startup.Loot.AddKit(Items.huge_chunk_of_meat);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6()); // +5 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      occultist = AddEntity(Kinds.mercenary, Races.human, "occultist", E =>
      {
        E.Glyph = Glyphs.occultist;
        E.Level = 30;
        E.Challenge = 1376;
        E.Difficulty = 28;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(13000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 12, DEX: 11, CON: 13, INT: 17, WIS: 18, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.necromancy, Skills.enchantment, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible, Properties.vitality);
        E.Startup.Loot.AddKit(Items.skeleton_key);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_dead);
        E.Startup.AddGrimoire(Dice.One, Spells.bind_undead);
        E.Startup.AddGrimoire(Dice.One, Spells.finger_of_death);
        E.Startup.AddGrimoire(Dice.One, Spells.drain_life);
        E.Startup.AddGrimoire(Dice.One, Spells.living_wall);
        E.Startup.AddGrimoire(Dice.One, Spells.fear);
        E.Startup.AddGrimoire(Dice.One, Spells.slow);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.wand_of_fear);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.wand_of_animation);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.scroll_of_raise_dead);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5()); // +1 from str.
        E.SetCorpse(Chance.Always);
      });

      shinobi = AddEntity(Kinds.mercenary, Races.human, "shinobi", E =>
      {
        E.Glyph = Glyphs.shinobi;
        E.Level = 30;
        E.Challenge = 1236;
        E.Difficulty = 27;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +5 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(13500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 20, CON: 14, INT: 10, WIS: 13, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient, Skills.dual_wielding, Skills.light_blade, Skills.disc, Skills.medium_blade);
        E.Startup.SetTalent(Properties.jumping, Properties.warning, Properties.quickness);
        E.Startup.Loot.AddKit(Items.wakizashi);
        E.Startup.Loot.AddKit(Items.wakizashi);
        E.Startup.Loot.AddKit(4.d6(), Items.shuriken);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_clairvoyance);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d8()); // +4 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      page = AddEntity(Kinds.mercenary, Races.human, "page", E =>
      {
        E.Glyph = Glyphs.page;
        E.Level = 6;
        E.Challenge = 76;
        E.Difficulty = 3;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 7, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 16, CON: 14, INT: 8, WIS: 10, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.crossbow);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Items.studded_leather_armour);
        E.Startup.Loot.AddKit(Items.leather_cloak);
        E.Startup.Loot.AddKit(Items.crossbow);
        E.Startup.Loot.AddKit(Chance.OneIn4, 2.d6(), Items.silver_crossbow_bolt);
        E.Startup.Loot.AddKit(4.d6(), Items.crossbow_bolt);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_fruit_juice);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6());
        E.SetCorpse(Chance.OneIn3);
      });

      roshi = AddEntity(Kinds.mercenary, Races.human, "roshi", E =>
      {
        E.Glyph = Glyphs.roshi;
        E.Level = 21;
        E.Challenge = 586;
        E.Difficulty = 16;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 16, CON: 16, INT: 12, WIS: 14, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.heavy_blade, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.jumping);
        E.Startup.Loot.AddKit(Items.helmet);
        E.Startup.Loot.AddKit(Items.splint_mail);
        E.Startup.Loot.AddKit(Items.katana);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_monster_detection);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6()); // +3 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6());
        E.SetCorpse(Chance.OneIn3);
      });

      shifter = AddEntity(Kinds.mercenary, Races.human, "shifter", E =>
      {
        E.Glyph = Glyphs.shifter;
        E.Level = 21;
        E.Challenge = 583;
        E.Difficulty = 16;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 12, DEX: 16, CON: 22, INT: 12, WIS: 14, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.transmutation, Skills.literacy);
        E.Startup.SetTalent(Properties.displacement);
        E.Startup.AddGrimoire(Dice.One, Spells.polymorph);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.wand_of_polymorph);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_speed);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6()); // +1 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      student = AddEntity(Kinds.mercenary, Races.human, "student", E =>
      {
        E.Glyph = Glyphs.student;
        E.Level = 10;
        E.Challenge = 191;
        E.Difficulty = 6;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 10, DEX: 12, CON: 12, INT: 16, WIS: 11, CHA: 08);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.divination, Skills.pick, Skills.literacy, Skills.disc, Skills.whip, Skills.light_armour, Skills.medium_armour);
        E.Startup.SetTalent(Properties.searching);
        E.Startup.AddGrimoire(Dice.One, Spells.detect_unseen);
        E.Startup.Loot.AddKit(Chance.Always, Items.leather_jacket);
        E.Startup.Loot.AddKit(Chance.Always, Items.fedora);
        E.Startup.Loot.AddKit(Chance.Always, Items.pickaxe);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.bullwhip);
        E.Startup.Loot.AddKit(Chance.Always, Items.boomerang);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8());
        E.SetCorpse(Chance.OneIn3);
      });

      thug = AddEntity(Kinds.mercenary, Races.human, "thug", E =>
      {
        E.Glyph = Glyphs.thug;
        E.Level = 22;
        E.Challenge = 676;
        E.Difficulty = 17;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 17, CON: 12, INT: 8, WIS: 8, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.firearms);
        E.Startup.SetTalent();
        E.Startup.Loot.AddKit(Chance.Always, Sanctities.Blessed, Items.pistol);
        E.Startup.Loot.AddKit(Chance.Always, 8.d6(), Sanctities.Blessed, Items.bullet);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_blindness);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5()); // +3 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      transmuter = AddEntity(Kinds.mercenary, Races.human, "transmuter", E =>
      {
        E.Glyph = Glyphs.transmuter;
        E.Level = 30;
        E.Challenge = 1475;
        E.Difficulty = 26;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 27, P: +0, S: +0, B: +0); // +3 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 18, DEX: 17, CON: 21, INT: 20, WIS: 23, CHA: 21);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.unarmed_combat, Skills.light_armour, Skills.evocation, Skills.transmutation, Skills.enchantment, Skills.literacy);
        E.Startup.SetTalent(Properties.see_invisible);
        E.Startup.SetResistance(Elements.cold, Elements.disintegrate, Elements.shock, Elements.fire, Elements.poison);
        E.Startup.AddGrimoire(Dice.One, Spells.cancellation);
        E.Startup.AddGrimoire(Dice.One, Spells.dig);
        E.Startup.AddGrimoire(Dice.One, Spells.polymorph);
        E.Startup.AddGrimoire(Dice.One, Spells.disintegrate);
        E.Startup.AddGrimoire(Dice.One, Spells.poison_blast);
        E.Startup.AddGrimoire(Dice.One, Spells.lightning_bolt);
        E.Startup.AddGrimoire(Dice.One, Spells.cone_of_cold);
        E.Startup.AddGrimoire(Dice.One, Spells.fireball);
        E.Startup.AddGrimoire(Dice.One, Spells.animate_object);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, Items.robe);
        E.Startup.Loot.AddKit(Chance.Always, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.wand_of_digging);
        E.AddAttack(AttackTypes.punch, Elements.physical, 1.d11());
        E.AddAttack(AttackTypes.punch, Elements.physical, 1.d11());
        E.AddAttack(AttackTypes.kick, Elements.physical, 2.d9()); // +4 from str.
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.fire));
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.shock));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.SetCorpse(Chance.OneIn3);
      });

      warrior = AddEntity(Kinds.mercenary, Races.human, "warrior", E =>
      {
        E.Glyph = Glyphs.warrior;
        E.Level = 27;
        E.Challenge = 976;
        E.Difficulty = 22;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(17500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 18, INT: 8, WIS: 8, CHA: 10);
        E.LimitForm.Set(STR: 20, DEX: 20, CON: 20, INT: 20, WIS: 20, CHA: 20);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.heavy_armour, Skills.heavy_blade);
        E.Startup.SetTalent(Properties.berserking, Properties.vitality);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, Items.plate_mail);
        E.Startup.Loot.AddKit(Modifier.Plus1to3, [Items.mithril_twohanded_sword, Items.silver_twohanded_sword, Items.twohanded_sword]);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_healing);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.potion_of_extra_healing);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6()); // +4 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6());
        E.SetCorpse(Chance.OneIn3);
      });

      proudfoot = AddEntity(Kinds.mercenary, Races.halfling, "proudfoot", E =>
      {
        E.Glyph = Glyphs.proudfoot;
        E.Level = 14;
        E.Challenge = 237;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.IsGuardian = true;
        E.IsMercenary = true;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(8500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 14, CON: 13, INT: 12, WIS: 15, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female, Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.light_blade, Skills.sling, Skills.locks, Skills.traps, Skills.dart);
        E.Startup.SetTalent(Properties.dark_vision, Properties.stealth);
        E.Startup.Loot.AddKit(Chance.OneIn3, [Items.silver_dagger, Items.dagger, Items.elven_dagger]);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.sling);
        E.Startup.Loot.AddKit(Chance.OneIn3, 3.d4(), Items.rock);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.elven_mithrilcoat);
        E.Startup.Loot.AddKit(Chance.OneIn10, Items.dwarvish_cloak);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6());
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region mimic.
      bad_egg = AddEntity(Kinds.mimic, null, "bad egg", E =>
      {
        E.Glyph = Glyphs.bad_egg;
        E.Sonic = Sonics.slime;
        E.Level = 4;
        E.Challenge = 17;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(50);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 15, CON: 11, INT: 5, WIS: 6, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Items.egg);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d7()); // +1 from str.
        E.SetCorpse(Chance.Never);
      });

      giant_mimic = AddEntity(Kinds.mimic, null, "giant mimic", E =>
      {
        E.Glyph = Glyphs.giant_mimic;
        E.Sonic = Sonics.slime;
        E.Level = 13;
        E.Challenge = 207;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(40000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: true,
          Voice: true,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 9, CON: 14, INT: 8, WIS: 11, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: true);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d15(), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d15(), A => // +3 from str.
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.SetCorpse(Chance.Always);
      });

      killer_food_ration = AddEntity(Kinds.mimic, null, "killer food ration", E =>
      {
        E.Glyph = Glyphs.killer_food_ration;
        E.Sonic = Sonics.slime;
        E.Level = 25;
        E.Challenge = 720;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 14, CON: 16, INT: 6, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Items.food_ration);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d8()); // +5 from str.
        E.SetCorpse(Chance.Never);
      });

      killer_iron_ration = AddEntity(Kinds.mimic, null, "killer iron ration", E =>
      {
        E.Glyph = Glyphs.killer_iron_ration;
        E.Sonic = Sonics.slime;
        E.Level = 20;
        E.Challenge = 542;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 12, CON: 14, INT: 6, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Items.iron_ration);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d7()); // +4 from str.
        E.SetCorpse(Chance.Never);
      });

      killer_tripe_ration = AddEntity(Kinds.mimic, null, "killer tripe ration", E =>
      {
        E.Glyph = Glyphs.killer_tripe_ration;
        E.Sonic = Sonics.slime;
        E.Level = 15;
        E.Challenge = 312;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +0 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 10, CON: 12, INT: 6, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Items.tripe_ration);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d6()); // +2 from str.
        E.SetCorpse(Chance.Never);
      });

      large_mimic = AddEntity(Kinds.mimic, null, "large mimic", E =>
      {
        E.Glyph = Glyphs.large_mimic;
        E.Sonic = Sonics.slime;
        E.Level = 10;
        E.Challenge = 94;
        E.Difficulty = 11;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(23000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: true,
          Voice: true,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 10, CON: 14, INT: 8, WIS: 11, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: true);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d12(), A => // +2 from str.
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.SetCorpse(Chance.Always);
      });

      pile_of_killer_coins = AddEntity(Kinds.mimic, null, "pile of killer coins", E =>
      {
        E.Glyph = Glyphs.pile_of_killer_coins;
        E.Sonic = Sonics.coins;
        E.Level = 6;
        E.Challenge = 37;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +2 from dex=13.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(13600);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 14, CON: 8, INT: 3, WIS: 2, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.SetConcealment(Items.gold_coin);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d6());
        E.SetCorpse(Chance.Never);
      });

      large_pile_of_killer_coins = AddEntity(Kinds.mimic, null, "large pile of killer coins", E =>
      {
        E.Glyph = Glyphs.large_pile_of_killer_coins;
        E.Sonic = Sonics.coins;
        E.Level = 15;
        E.Challenge = 232;
        E.Difficulty = 16;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +3 from dex=21.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14600);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 16, CON: 10, INT: 3, WIS: 2, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.SetConcealment(Items.gold_coin);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6()); // +2 from str.
        E.SetCorpse(Chance.Never);
      });

      huge_pile_of_killer_coins = AddEntity(Kinds.mimic, null, "huge pile of killer coins", E =>
      {
        E.Glyph = Glyphs.huge_pile_of_killer_coins;
        E.Sonic = Sonics.coins;
        E.Level = 28;
        E.Challenge = 883;
        E.Difficulty = 32;
        E.Frequency = 1;
        E.Defence = new Defence(D: 26, P: +0, S: +0, B: +0); // +2 from dex=28.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15600);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 14, CON: 12, INT: 3, WIS: 2, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Items.gold_coin);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d12()); // +2 from str.
        E.SetCorpse(Chance.Never);
      });

      small_mimic = AddEntity(Kinds.mimic, null, "small mimic", E =>
      {
        E.Glyph = Glyphs.small_mimic;
        E.Sonic = Sonics.slime;
        E.Level = 6;
        E.Challenge = 46;
        E.Difficulty = 7;
        E.Frequency = 2;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(3000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: true,
          Voice: true,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 11, CON: 12, INT: 8, WIS: 11, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: true);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5(), A => // +1 from str.
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region mummy.
      dwarf_mummy = AddEntity(Kinds.mummy, Races.dwarf, "dwarf mummy", E =>
      {
        E.Glyph = Glyphs.dwarf_mummy;
        E.Sonic = Sonics.moan;
        E.Level = 13;
        E.Challenge = 326;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 10, CON: 15, INT: 8, WIS: 3, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.mummy_wrapping);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4(), A => // +2 from str.
        {
          A.Apply.ApplyTransient(Properties.sickness, 4.d10());
        });
        E.SetCorpse(Chance.Never);
      });

      elf_mummy = AddEntity(Kinds.mummy, Races.elf, "elf mummy", E =>
      {
        E.Glyph = Glyphs.elf_mummy;
        E.Sonic = Sonics.moan;
        E.Level = 19;
        E.Challenge = 437;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(9000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 11, CON: 11, INT: 9, WIS: 3, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.mummy_wrapping);
        E.AddAttack(AttackTypes.claw, Elements.physical, 5.d4(), A => // +1 from str.
        {
          A.Apply.ApplyTransient(Properties.sickness, 5.d10());
        });
        E.SetCorpse(Chance.Never);
      });

      ettin_mummy = AddEntity(Kinds.mummy, Races.ettin, "ettin mummy", E =>
      {
        E.Glyph = Glyphs.ettin_mummy;
        E.Sonic = Sonics.moan;
        E.Level = 26;
        E.Challenge = 953;
        E.Difficulty = 28;
        E.Frequency = 1;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0); // -1 from dex = 21.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(80000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 8, CON: 16, INT: 2, WIS: 2, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.mummy_wrapping);
        E.AddAttack(AttackTypes.claw, Elements.physical, 6.d4(), A => // +3 from str.
        {
          A.Apply.ApplyTransient(Properties.sickness, 6.d10());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 6.d4(), A =>
        {
          A.Apply.ApplyTransient(Properties.sickness, 6.d10());
        });
        E.SetCorpse(Chance.Never);
      });

      giant_mummy = AddEntity(Kinds.mummy, Races.giant, "giant mummy", E =>
      {
        E.Glyph = Glyphs.giant_mummy;
        E.Sonic = Sonics.moan;
        E.Level = 26;
        E.Challenge = 968;
        E.Difficulty = 28;
        E.Frequency = 1;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // -2 from dex = 22.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(80000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 6, CON: 17, INT: 2, WIS: 2, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.mummy_wrapping);
        E.AddAttack(AttackTypes.claw, Elements.physical, 6.d4(), A =>
        {
          A.Apply.ApplyTransient(Properties.sickness, 6.d10());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 6.d4(), A =>
        {
          A.Apply.ApplyTransient(Properties.sickness, 6.d10()); // +4 from str.
        });
        E.SetCorpse(Chance.Never);
      });

      gnome_mummy = AddEntity(Kinds.mummy, Races.gnome, "gnome mummy", E =>
      {
        E.Glyph = Glyphs.gnome_mummy;
        E.Sonic = Sonics.moan;
        E.Level = 4;
        E.Challenge = 21;
        E.Difficulty = 6;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(6500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 10, CON: 13, INT: 8, WIS: 3, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.mummy_wrapping);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4(), A => // +2 from str.
        {
          A.Apply.ApplyTransient(Properties.sickness, 4.d10());
        });
        E.SetCorpse(Chance.Never);
      });

      human_mummy = AddEntity(Kinds.mummy, Races.human, "human mummy", E =>
      {
        E.Glyph = Glyphs.human_mummy;
        E.Sonic = Sonics.moan;
        E.Level = 21;
        E.Challenge = 637;
        E.Difficulty = 22;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(9000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 11, CON: 14, INT: 10, WIS: 3, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.mummy_wrapping);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4(), A =>
        {
          A.Apply.ApplyTransient(Properties.sickness, 4.d10());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4(), A => // +2 from str.
        {
          A.Apply.ApplyTransient(Properties.sickness, 4.d10());
        });
        E.SetCorpse(Chance.Never);
      });

      kobold_mummy = AddEntity(Kinds.mummy, Races.kobold, "kobold mummy", E =>
      {
        E.Glyph = Glyphs.kobold_mummy;
        E.Sonic = Sonics.moan;
        E.Level = 3;
        E.Challenge = 10;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 10, CON: 12, INT: 5, WIS: 2, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.mummy_wrapping);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4(), A =>
        {
          A.Apply.ApplyTransient(Properties.sickness, 4.d10());
        });
        E.SetCorpse(Chance.Never);
      });

      orc_mummy = AddEntity(Kinds.mummy, Races.orc, "orc mummy", E =>
      {
        E.Glyph = Glyphs.orc_mummy;
        E.Sonic = Sonics.moan;
        E.Level = 16;
        E.Challenge = 386;
        E.Difficulty = 18;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // -1 from dex = 19.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(8500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 9, CON: 13, INT: 8, WIS: 3, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.mummy_wrapping);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4(), A => // +2 from str.
        {
          A.Apply.ApplyTransient(Properties.sickness, 4.d10());
        });

        E.SetCorpse(Chance.Never);
      });

      troll_mummy = AddEntity(Kinds.mummy, Races.troll, "troll mummy", E =>
      {
        E.Glyph = Glyphs.troll_mummy;
        E.Sonic = Sonics.moan;
        E.Level = 29;
        E.Challenge = 1135;
        E.Difficulty = 31;
        E.Frequency = 1;
        E.Defence = new Defence(D: 25, P: +0, S: +0, B: +0); // -2 from dex = 23.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 7, CON: 18, INT: 2, WIS: 2, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.mummy_wrapping);
        E.AddAttack(AttackTypes.claw, Elements.physical, 7.d4(), A =>
        {
          A.Apply.ApplyTransient(Properties.sickness, 7.d10());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 7.d4(), A => // +5 from str.
        {
          A.Apply.ApplyTransient(Properties.sickness, 7.d10());
        });
        E.SetCorpse(Chance.Never);
        TrollWeakness(E);
      });

      mellified_man = AddEntity(Kinds.mummy, Races.human, "mellified man", E =>
      {
        E.Description = "This mummy confection was created by steeping a human cadaver in honey. Somehow reanimated by an obscure cult of monks, it is both deadly and delicious.";
        E.Glyph = Glyphs.mellified_man;
        E.Sonic = Sonics.moan;
        E.Level = 27;
        E.Challenge = 637;
        E.Difficulty = 30;
        E.Frequency = 1;
        E.Defence = new Defence(D: 30, P: +2, S: -2, B: +2);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 24, DEX: 11, CON: 22, INT: 3, WIS: 3, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality, Properties.slippery);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep, Elements.fire);
        E.AddAttack(AttackTypes.claw, Elements.physical, 9.d4(), A =>
        {
          A.Apply.ApplyTransient(Properties.fumbling, 4.d10());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 9.d4(), A => // +2 from str.
        {
          A.Apply.ApplyTransient(Properties.fumbling, 4.d10());
        });
        E.Conveyance.UnafflictEntity();
        E.Conveyance.RestoreAbility();
        E.Conveyance.RemoveTransient(Properties.blindness, Properties.deafness, Properties.hallucination, Properties.sickness, Properties.confusion, Properties.stunned, Properties.petrifying, Properties.fumbling);
        E.Conveyance.WhenTargetKind([Kinds.fairy], T =>
        {
          // fairies benefit from sweet things and an increased metabolism.
          T.ApplyTransient(Properties.life_regeneration, 1.d(500) + 500);
          T.ApplyTransient(Properties.mana_regeneration, 1.d(500) + 500);
        });
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region naga.
      var AdultNagaWeight = Weight.FromUnits(24000);
      var HatchlingNagaWeight = Weight.FromUnits(10000);
      var AdultNagaSize = Size.Large;
      var HatchlingNagaSize = Size.Medium;

      black_naga = AddEntity(Kinds.naga, null, "black naga", E =>
      {
        E.Glyph = Glyphs.black_naga;
        E.Sonic = Sonics.hiss;
        E.Level = 16;
        E.Challenge = 452;
        E.Difficulty = 18;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex = 20.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = AdultNagaSize;
        E.Strategy = Strategy.Attack;
        E.Weight = AdultNagaWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 16, CON: 14, INT: 14, WIS: 17, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6()); // +3 from str.
        E.AddAttack(AttackTypes.spit, Elements.acid, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.acid, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.acid, 5.d2() + 1);
          K.Apply.CreateDevice(Codex.Devices.noxious_pool, Destruction: false);
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.Always);
      });

      black_naga_hatchling = AddEntity(Kinds.naga, null, "black naga hatchling", E =>
      {
        E.Glyph = Glyphs.black_naga_hatchling;
        E.Sonic = Sonics.hiss;
        E.Level = 6;
        E.Challenge = 72;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +1 from dex = 15.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = HatchlingNagaSize;
        E.Strategy = Strategy.Attack;
        E.Weight = HatchlingNagaWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 12, CON: 10, INT: 10, WIS: 13, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d3()); // +1 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.Always);
      });

      golden_naga = AddEntity(Kinds.naga, null, "golden naga", E =>
      {
        E.Glyph = Glyphs.golden_naga;
        E.Sonic = Sonics.hiss;
        E.Level = 18;
        E.Challenge = 572;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +3 from dex = 20.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = AdultNagaSize;
        E.Strategy = Strategy.Attack;
        E.Weight = AdultNagaWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 16, CON: 14, INT: 14, WIS: 17, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.literacy);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.AddGrimoire(Dice.One, Spells.poison_blast, Spells.acid_stream);
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d5()); // +3 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
      });

      golden_naga_hatchling = AddEntity(Kinds.naga, null, "golden naga hatchling", E =>
      {
        E.Glyph = Glyphs.golden_naga_hatchling;
        E.Sonic = Sonics.hiss;
        E.Level = 7;
        E.Challenge = 75;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +1 from dex = 15.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = HatchlingNagaSize;
        E.Strategy = Strategy.Attack;
        E.Weight = HatchlingNagaWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 12, CON: 10, INT: 10, WIS: 13, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +1 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
      });
      //only guardian naga has entry in MM, toning down abilities for other nagas based on this, -4 on hatchlings, -2 if it is not guardian naga
      guardian_naga = AddEntity(Kinds.naga, null, "guardian naga", E =>
      {
        E.Glyph = Glyphs.guardian_naga;
        E.Sonic = Sonics.hiss;
        E.Level = 22;
        E.Challenge = 747;
        E.Difficulty = 24;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +4 from dex = 25.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = AdultNagaSize;
        E.Strategy = Strategy.Attack;
        E.Weight = AdultNagaWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 19, DEX: 18, CON: 16, INT: 16, WIS: 19, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4(), K => // +4 from str.
        {
          K.Apply.ApplyTransient(Properties.paralysis, 3.d3());
        });
        E.AddAttack(AttackTypes.spit, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.venom, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.physical, 4.d5());
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.grapple, Elements.physical, 4.d4(), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      guardian_naga_hatchling = AddEntity(Kinds.naga, null, "guardian naga hatchling", E =>
      {
        E.Glyph = Glyphs.guardian_naga_hatchling;
        E.Sonic = Sonics.hiss;
        E.Level = 8;
        E.Challenge = 82;
        E.Difficulty = 10;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2 from dex = 15.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = HatchlingNagaSize;
        E.Strategy = Strategy.Attack;
        E.Weight = HatchlingNagaWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 14, CON: 14, INT: 12, WIS: 15, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d3()); // +2 from str.
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
      });

      red_naga = AddEntity(Kinds.naga, null, "red naga", E =>
      {
        E.Glyph = Glyphs.red_naga;
        E.Sonic = Sonics.hiss;
        E.Level = 14;
        E.Challenge = 272;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +3 from dex = 18.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = AdultNagaSize;
        E.Strategy = Strategy.Attack;
        E.Weight = AdultNagaWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 16, CON: 14, INT: 14, WIS: 17, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.fire, Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +3 from str.
        E.AddAttack(AttackTypes.breath, Elements.fire, Dice.Zero, K =>
        {
          K.SetCast().Beam(Beams.fire, 1.d5() + 5);
          K.Apply.HarmEntity(Elements.fire, 6.d4());
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.fire));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.SetCorpse(Chance.Always);
      });

      red_naga_hatchling = AddEntity(Kinds.naga, null, "red naga hatchling", E =>
      {
        E.Glyph = Glyphs.red_naga_hatchling;
        E.Sonic = Sonics.hiss;
        E.Level = 5;
        E.Challenge = 45;
        E.Difficulty = 6;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1 from dex = 13.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = HatchlingNagaSize;
        E.Strategy = Strategy.Attack;
        E.Weight = HatchlingNagaWeight;
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 12, CON: 10, INT: 10, WIS: 13, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.fire, Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4()); // +1 from str.
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.fire));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region fairy.
      Aphrodite = AddUniqueEntity(Kinds.fairy, Races.nymph, "Aphrodite", E =>
      {
        E.Glyph = Glyphs.Aphrodite;
        E.Sonic = Sonics.sigh;
        E.Level = 20;
        E.Challenge = 968;
        E.Difficulty = 23;
        E.Frequency = 0;
        E.IsGuardian = true;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(13000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d8());
        E.DefaultForm.Set(STR: 5, DEX: 18, CON: 12, INT: 16, WIS: 24, CHA: 30);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.champion, Skills.conjuration, Skills.literacy, Skills.music);
        E.Startup.SetTalent(Properties.teleportation, Properties.polymorph_control, Properties.teleport_control);
        E.Startup.SetResistance(Elements.magical, Elements.drain, Elements.poison);
        E.Startup.AddGrimoire(Dice.One, Spells.summoning);
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K => K.Apply.StealCarriedItem(Properties.fear, 6.d6() + 6));
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K => K.Apply.StealCarriedItem(Properties.fear, 6.d6() + 6));
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K => K.Apply.StealCarriedItem(Properties.fear, 6.d6() + 6));
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.teleportation, 1.d500() + 750));
        E.SetCorpse(Chance.Always);
      });

      brownie = AddEntity(Kinds.fairy, Races.fairy, "brownie", E =>
      {
        E.Glyph = Glyphs.brownie;
        E.Sonic = Sonics.giggle;
        E.Level = 8;
        E.Challenge = 94;
        E.Difficulty = 11;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(600);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 5, DEX: 14, CON: 12, INT: 13, WIS: 15, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.enchantment, Skills.abjuration, Skills.literacy);
        E.Startup.SetTalent(Properties.teleportation, Properties.blinking);
        E.Startup.AddGrimoire(Dice.One, Spells.teleport_away);
        E.Startup.AddGrimoire(Dice.One, Spells.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.fear);
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.StealCarriedItem(Properties.fear, 6.d6() + 6);
        });
        E.Conveyance.TradeoffAbility(Attributes.dexterity, Attributes.constitution);
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.teleportation, 1.d500() + 750));
        E.SetCorpse(Chance.OneIn4);
      });

      pixie = AddEntity(Kinds.fairy, Races.fairy, "pixie", E =>
      {
        E.Glyph = Glyphs.pixie;
        E.Sonic = Sonics.giggle;
        E.Level = 3;
        E.Challenge = 16;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(600);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 14, CON: 8, INT: 13, WIS: 13, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.blinking);
        E.AddAttack(AttackTypes.touch, Elements.physical, 2.d2(), K =>
        {
          K.Apply.StealCarriedItem(Properties.fear, 6.d6() + 6);
        });
        E.Conveyance.TradeoffAbility(Attributes.dexterity, Attributes.constitution);
        E.SetCorpse(Chance.OneIn4);
      });

      quickling = AddEntity(Kinds.fairy, Races.fairy, "quickling", E =>
      {
        E.Glyph = Glyphs.quickling;
        E.Sonic = Sonics.giggle;
        E.Level = 5;
        E.Challenge = 48;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = new Defence(D: 6, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S7_5;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(600);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 18, CON: 8, INT: 11, WIS: 12, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.blinking);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // -2 from str.
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.StealCarriedItem(Properties.fear, 6.d6() + 6);
        });
        E.SetCorpse(Chance.OneIn4);
        E.Conveyance.TradeoffAbility(Attributes.dexterity, Attributes.constitution);
        E.Conveyance.MinorProperty(Properties.quickness);
      });

      mountain_nymph = AddEntity(Kinds.fairy, Races.nymph, "mountain nymph", E =>
      {
        E.Glyph = Glyphs.mountain_nymph;
        E.Sonic = Sonics.sigh;
        E.Level = 13;
        E.Challenge = 220;
        E.Difficulty = 15;
        E.Frequency = 2;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +4 from dex.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 5, DEX: 18, CON: 8, INT: 13, WIS: 13, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.teleportation);
        E.Startup.SetAcquisition(Properties.sleeping);
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.StealEquippedItem(Properties.fear, 6.d6() + 6);
        });
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.StealEquippedItem(Properties.fear, 6.d6() + 6);
        });
        E.Conveyance.TradeoffAbility(Attributes.charisma, Attributes.strength);
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.teleportation, 1.d500() + 750));
        E.SetCorpse(Chance.OneIn3);
      });

      fire_nymph = AddEntity(Kinds.fairy, Races.nymph, "fire nymph", E =>
      {
        E.Glyph = Glyphs.fire_nymph;
        E.Sonic = Sonics.sigh;
        E.Level = 18;
        E.Challenge = 420;
        E.Difficulty = 20;
        E.Frequency = 2;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +5 from dex.
        E.SetDiet(Diets.herbivore);
        E.SetTerrain(Materials.air, Materials.fire);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 20, CON: 10, INT: 15, WIS: 15, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.teleportation);
        E.Startup.SetResistance(Elements.fire);
        E.Startup.SetAcquisition(Properties.sleeping);
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.StealEquippedItem(Properties.fear, 6.d6() + 6);
        });
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.StealEquippedItem(Properties.fear, 6.d6() + 6);
        });
        E.Conveyance.TradeoffAbility(Attributes.charisma, Attributes.strength);
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.teleportation, 1.d500() + 750));
        E.SetCorpse(Chance.OneIn3);
      });

      water_nymph = AddEntity(Kinds.fairy, Races.nymph, "water nymph", E =>
      {
        E.Glyph = Glyphs.water_nymph;
        E.Sonic = Sonics.sigh;
        E.Level = 3;
        E.Challenge = 16;
        E.Difficulty = 5;
        E.Frequency = 2;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetTerrain(Materials.water, Materials.air);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 5, DEX: 12, CON: 8, INT: 13, WIS: 13, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.expert, Skills.swimming);
        E.Startup.SetTalent(Properties.teleportation);
        E.Startup.SetAcquisition(Properties.sleeping);
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.StealEquippedItem(Properties.fear, 6.d6() + 6);
        });
        E.Conveyance.TradeoffAbility(Attributes.charisma, Attributes.strength);
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.teleportation, 1.d500() + 750));
        E.SetCorpse(Chance.OneIn3);
      });

      wood_nymph = AddEntity(Kinds.fairy, Races.nymph, "wood nymph", E =>
      {
        E.Glyph = Glyphs.wood_nymph;
        E.Sonic = Sonics.sigh;
        E.Level = 8;
        E.Challenge = 79;
        E.Difficulty = 10;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +1 from dex.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 5, DEX: 12, CON: 8, INT: 13, WIS: 13, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.teleportation);
        E.Startup.SetAcquisition(Properties.sleeping);
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.StealEquippedItem(Properties.fear, 6.d6() + 6);
        });
        E.Conveyance.TradeoffAbility(Attributes.charisma, Attributes.strength);
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.teleportation, 1.d500() + 750));
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region ogre.
      ogre = AddEntity(Kinds.ogre, Races.ogre, "ogre", E =>
      {
        E.Glyph = Glyphs.ogre;
        E.Sonic = Sonics.grunt;
        E.Level = 13;
        E.Challenge = 284;
        E.Difficulty = 16;
        E.Frequency = 2;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -1 from dex = 17.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(24000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 19, DEX: 8, CON: 16, INT: 5, WIS: 7, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.axe);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.OneIn12, Items.battleaxe);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5()); // +4 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5());
        E.SetCorpse(Chance.Always);
      });

      ogre_king = AddEntity(Kinds.ogre, Races.ogre, "ogre king", E =>
      {
        E.Glyph = Glyphs.ogre_king;
        E.Sonic = Sonics.grunt;
        E.Level = 26;
        E.Challenge = 914;
        E.Difficulty = 28;
        E.Frequency = 2;
        E.Defence = new Defence(D: 26, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(26000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 8, CON: 18, INT: 7, WIS: 8, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.axe);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.SetResistance(Elements.magical);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.battleaxe);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6()); // +5 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d2(), ogre);
        });
        E.SetCorpse(Chance.Always);
      });

      ogre_lord = AddEntity(Kinds.ogre, Races.ogre, "ogre lord", E =>
      {
        E.Glyph = Glyphs.ogre_lord;
        E.Sonic = Sonics.grunt;
        E.Level = 20;
        E.Challenge = 614;
        E.Difficulty = 22;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(24000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 8, CON: 17, INT: 6, WIS: 7, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.axe);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.OneIn6, Items.battleaxe);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6()); // +5 from str.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d6());
        E.SetCorpse(Chance.Always);
      });

      ogre_mage = AddEntity(Kinds.ogre, Races.ogre, "ogre mage", E =>
      {
        E.Glyph = Glyphs.ogre_mage;
        E.Sonic = Sonics.grunt;
        E.Level = 16;
        E.Challenge = 437;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // -2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(22000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 7, CON: 16, INT: 12, WIS: 11, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.enchantment, Skills.evocation, Skills.transmutation, Skills.axe, Skills.literacy);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.Always, Items.battleaxe);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(1.d3() + 2, Spells.acid_stream, Spells.toxic_spray, Spells.confusion, Spells.fireball, Spells.polymorph);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d12()); // +3 from str.
        E.SetCorpse(Chance.Always);
      });

      shadow_ogre = AddEntity(Kinds.ogre, Races.ogre, "shadow ogre", E =>
      {
        E.Glyph = Glyphs.shadow_ogre;
        E.Sonic = Sonics.grunt;
        E.Level = 19;
        E.Challenge = 610;
        E.Difficulty = 21;
        E.Frequency = 1;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 8, CON: 17, INT: 5, WIS: 9, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.axe);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.OneIn12, Items.battleaxe);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d12()); // +3
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d12());
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 3.d8());
        });
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region orc.
      goblin = AddEntity(Kinds.orc, Races.goblin, "goblin", E =>
      {
        E.Glyph = Glyphs.goblin;
        E.Sonic = Sonics.cackle;
        E.Level = 0;
        E.Challenge = 4;
        E.Difficulty = 1;
        E.Frequency = 3;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d4());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 11, DEX: 8, CON: 10, INT: 8, WIS: 7, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_armour, Skills.medium_blade);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.Startup.Loot.AddKit(Chance.OneIn2, 1.d5(), Items.gold_coin);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d4());
        E.SetCorpse(Chance.OneIn3);
      });

      goblin_king = AddEntity(Kinds.orc, Races.goblin, "goblin king", E =>
      {
        E.Glyph = Glyphs.goblin_king;
        E.Sonic = Sonics.cackle;
        E.Level = 14;
        E.Challenge = 389;
        E.Difficulty = 16;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(7500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 11, CON: 15, INT: 10, WIS: 7, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_armour, Skills.medium_blade, Skills.sling);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.Startup.Loot.AddKit(Chance.Always, 5.d10(), Items.gold_coin);
        E.Startup.Loot.AddKit(Chance.OneIn4, Dice.One, Stocks.gem);
        E.Startup.Loot.AddKit(Chance.OneIn4, Dice.One, Stocks.gem);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4()); // +2
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d4() + 1, goblin);
        });
        E.SetCorpse(Chance.OneIn3);
      });

      great_orc = AddEntity(Kinds.orc, Races.orc, "great orc", E =>
      {
        E.Glyph = Glyphs.great_orc;
        E.Sonic = Sonics.grunt;
        E.Level = 15;
        E.Challenge = 678;
        E.Difficulty = 17;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(21000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(28, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 13, CON: 16, INT: 8, WIS: 8, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_armour, Skills.medium_blade, Skills.heavy_armour, Skills.heavy_blade);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d13()); // +3
        E.SetCorpse(Chance.OneIn3);
      });

      hobgoblin = AddEntity(Kinds.orc, null, "hobgoblin", E =>
      {
        E.Glyph = Glyphs.hobgoblin;
        E.Sonic = Sonics.grunt;
        E.Level = 1;
        E.Challenge = 7;
        E.Difficulty = 3;
        E.Frequency = 3;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +1 from dex = 11.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 12, CON: 12, INT: 10, WIS: 10, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_armour, Skills.medium_blade);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d5()); // +1 from str.
        E.SetCorpse(Chance.OneIn3);
      });

      hill_orc = AddEntity(Kinds.orc, Races.orc, "hill orc", E =>
      {
        E.Glyph = Glyphs.hill_orc;
        E.Sonic = Sonics.grunt;
        E.Level = 5;
        E.Challenge = 97;
        E.Difficulty = 7;
        E.Frequency = 3;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 10, CON: 14, INT: 7, WIS: 8, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_armour, Skills.medium_blade);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4()); // +2
        E.SetCorpse(Chance.OneIn3);
      });

      orc_berserker = AddEntity(Kinds.orc, Races.orc, "orc berserker", E =>
      {
        E.Glyph = Glyphs.orc_berserker;
        E.Sonic = Sonics.grunt;
        E.Level = 17;
        E.Challenge = 734;
        E.Difficulty = 18;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(19500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 18, INT: 8, WIS: 8, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_armour, Skills.axe);
        E.Startup.SetTalent(Properties.dark_vision, Properties.cannibalism, Properties.berserking);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_ring_mail);
        E.Startup.Loot.AddKit(Chance.Always, Dice.One, Items.battleaxe);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5());
        E.SetCorpse(Chance.OneIn3);
      });

      orc_captain = AddEntity(Kinds.orc, Races.orc, "orc captain", E =>
      {
        E.Glyph = Glyphs.orc_captain;
        E.Sonic = Sonics.grunt;
        E.Level = 15;
        E.Challenge = 819;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 9, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_3;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(18500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 12, CON: 16, INT: 9, WIS: 8, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_armour, Skills.light_armour, Skills.medium_blade, Skills.light_blade);
        E.Startup.SetTalent(Properties.dark_vision, Properties.cannibalism);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.Always, Dice.One, Items.orcish_helm);
        E.Startup.Loot.AddKit(Chance.Always, Dice.One, Items.orcish_chain_mail);
        E.Startup.Loot.AddKit(Chance.Always, Dice.One, Items.orcish_cloak);
        E.Startup.Loot.AddKit(Chance.Always, Dice.One, Items.orcish_shield);
        E.Startup.Loot.AddKit(Chance.Always, Dice.One, Items.orcish_short_sword);
        E.Startup.Loot.AddKit(Chance.Always, 3.d6(), Items.orcish_dagger);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d3());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d3()); // +4
        E.SetCorpse(Chance.OneIn3);
      });

      orc_grunt = AddEntity(Kinds.orc, Races.orc, "orc grunt", E =>
      {
        E.Glyph = Glyphs.orc_grunt;
        E.Sonic = Sonics.grunt;
        E.Level = 3;
        E.Challenge = 15;
        E.Difficulty = 5;
        E.Frequency = 2;
        E.Defence = new Defence(D: 9, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_3;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 12, CON: 14, INT: 7, WIS: 8, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_blade, Skills.heavy_blade, Skills.light_armour, Skills.medium_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.cannibalism);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.scimitar);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.orcish_shield);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.orcish_chain_mail);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d3()); // +3
        E.SetCorpse(Chance.OneIn3);
      });

      orc_king = AddEntity(Kinds.orc, Races.orc, "orc king", E =>
      {
        E.Glyph = Glyphs.orc_king;
        E.Sonic = Sonics.grunt;
        E.Level = 21;
        E.Challenge = 626;
        E.Difficulty = 22;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_3;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(19000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 12, CON: 19, INT: 13, WIS: 9, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_armour, Skills.light_armour, Skills.heavy_blade);
        E.Startup.SetTalent(Properties.dark_vision, Properties.cannibalism);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.Startup.Loot.AddKit(Chance.Always, Dice.One, Items.orcish_chain_mail);
        E.Startup.Loot.AddKit(Chance.Always, Dice.One, Items.orcish_cloak);
        E.Startup.Loot.AddKit(Chance.Always, Dice.One, Items.scimitar);
        E.Startup.Loot.AddKit(Chance.Always, Dice.One, Stocks.wand);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d6()); // +5
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d2() + 1, orc_grunt);
          A.Apply.SummonEntity(1.d2() - 1, orc_warrior);
          A.Apply.SummonEntity(1.d2() - 1, orc_captain);
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      orc_shaman = AddEntity(Kinds.orc, Races.orc, "orc shaman", E =>
      {
        E.Glyph = Glyphs.orc_shaman;
        E.Sonic = Sonics.grunt;
        E.Level = 3;
        E.Challenge = 23;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 15, CON: 13, INT: 12, WIS: 12, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.literacy, Skills.medium_armour, Skills.medium_blade);
        E.Startup.SetTalent(Properties.dark_vision, Properties.cannibalism);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(Dice.One, Spells.force_bolt);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6(), A => A.Apply.ApplyTransient(Properties.aggravation, 3.d6())); // +2
        E.SetCorpse(Chance.OneIn3);
      });

      orc_warrior = AddEntity(Kinds.orc, Races.orc, "orc warrior", E =>
      {
        E.Glyph = Glyphs.orc_warrior;
        E.Sonic = Sonics.grunt;
        E.Level = 12;
        E.Challenge = 214;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_3;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(17000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 12, CON: 16, INT: 7, WIS: 8, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_blade, Skills.heavy_blade, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour, Skills.bow);
        E.Startup.SetTalent(Properties.dark_vision, Properties.cannibalism);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.orcish_cloak);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.orcish_short_sword);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.orcish_bow);
        E.Startup.Loot.AddKit(Chance.OneIn3, 3.d6(), Items.orcish_arrow);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.orcish_shield);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.iron_shoes);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_ring_mail);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8()); // +4
        E.SetCorpse(Chance.OneIn3);
      });

      snow_orc = AddEntity(Kinds.orc, Races.orc, "snow orc", E =>
      {
        E.Glyph = Glyphs.snow_orc;
        E.Sonic = Sonics.grunt;
        E.Level = 11;
        E.Challenge = 183;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 12, CON: 16, INT: 8, WIS: 8, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_armour);
        E.Startup.SetTalent(Properties.dark_vision, Properties.cannibalism);
        E.Startup.SetResistance(Elements.cold, Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_ring_mail);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6()); // +3
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6());
        E.Conveyance.MajorResistance(Elements.cold);
        E.SetCorpse(Chance.OneIn3);
      });

      war_orc = AddEntity(Kinds.orc, Races.orc, "war orc", E =>
      {
        E.Glyph = Glyphs.war_orc;
        E.Sonic = Sonics.grunt;
        E.Level = 16;
        E.Challenge = 626;
        E.Difficulty = 18;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(19000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 12, CON: 16, INT: 7, WIS: 8, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.medium_armour, Skills.heavy_blade);
        E.Startup.SetTalent(Properties.dark_vision, Properties.cannibalism);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_ring_mail);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_shield);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.orcish_helm);
        E.Startup.Loot.AddKit(Chance.OneIn2, Dice.One, Items.broadsword);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8()); // +4
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d8());
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region pudding.
      Defence NewPuddingDefence(int Defence) => new Defence(Defence, P: +0, S: -1, B: +1);

      black_pudding = AddEntity(Kinds.pudding, null, "black pudding", E =>
      {
        E.Glyph = Glyphs.black_pudding;
        E.Sonic = Sonics.burble;
        E.Level = 20;
        E.Challenge = 674;
        E.Difficulty = 23;
        E.Frequency = 1;
        E.Defence = NewPuddingDefence(22); // -3 from dex = 19.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(9000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 16, DEX: 5, CON: 16, INT: 1, WIS: 6, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.shock, Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d6(), K => // +3 from str.
        {
          K.Apply.HarmEntity(Elements.acid, 4.d8());
        });
        E.AddRetaliation(Chance.Always, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 4.d8());
        });
        E.AddLivingRetaliation(Chance.Always, AttackTypes.spore, R =>
        {
          R.SetCast().Strike(Strikes.gas, Dice.One);
          R.Apply.WhenTargetHasMaterial(Materials.iron, T => T.CloneSourceEntity(Dice.One));
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.shock));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.Always);
      });

      brown_pudding = AddEntity(Kinds.pudding, null, "brown pudding", E =>
      {
        E.Description = "The lesser of the two ferrozygotic puddings, the brown pudding is said to taste more akin to rotted milk than a chocolate dessert. The pudding itself feeds upon fabrics and hides of all kind but its most known ability is its unique reproductive method. When brought into contact with iron the miracle of rotten slime binary fission takes place, creating two voracious offspring. Owing to the ubiquity of iron in the arms wielded by adventurers, this creature's population has only been growing with time.";
        E.Glyph = Glyphs.brown_pudding;
        E.Sonic = Sonics.burble;
        E.Level = 6;
        E.Challenge = 45;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = NewPuddingDefence(15); // -3 from dex = 12.
        E.SetDiet(Diets.fabrivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(5000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 14, DEX: 5, CON: 14, INT: 1, WIS: 5, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.shock, Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.WhenChance(Chance.OneIn3, T => T.DestroyEquippedItem(Dice.One, StockArray: null, SanctityArray: null, E.Diet.Materials.ToArray()));
        });
        E.AddLivingRetaliation(Chance.Always, AttackTypes.spore, R =>
        {
          R.SetCast().Strike(Strikes.gas, Dice.One);
          R.Apply.WhenTargetHasMaterial(Materials.iron, T => T.CloneSourceEntity(Dice.One));
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.shock));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.OneIn3);
      });

      giant_shoggoth = AddEntity(Kinds.pudding, null, "giant shoggoth", E =>
      {
        E.Glyph = Glyphs.giant_shoggoth;
        E.Sonic = Sonics.burble;
        E.Level = 36;
        E.Challenge = 1935;
        E.Difficulty = 38;
        E.Frequency = 1;
        E.Defence = NewPuddingDefence(33); // -3
        E.SetDiet(Diets.metalivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: true,
          Voice: true,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 24, DEX: 4, CON: 22, INT: 4, WIS: 8, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.teleportation, Properties.teleport_control, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.shock, Elements.poison, Elements.petrify);
        E.SetEngulf(Strikes.gas, A => A.HarmEntity(Elements.physical, 4.d8()));
        E.AddAttack(AttackTypes.claw, Elements.physical, 5.d8());
        E.AddAttack(AttackTypes.claw, Elements.physical, 5.d8()); // +7
        E.AddAttack(AttackTypes.touch, Elements.acid, Dice.Zero, K =>
        {
          K.Apply.HarmEntity(Elements.acid, 2.d6() + 2);
        });
        E.AddAttack(AttackTypes.touch, Elements.acid, Dice.Zero, K =>
        {
          K.Apply.HarmEntity(Elements.acid, 2.d6() + 2);
        });
        E.AddAttack(AttackTypes.engulf, Elements.acid, 8.d9(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.swallowed, 1.d6() + 2);
        });
        E.AddRetaliation(Chance.Always, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 2.d6() + 2);
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.shock));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
          Table.Add(1, A => A.GainTalent(Properties.teleportation));
          Table.Add(1, A => A.GainTalent(Properties.teleport_control));
        }));
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.Always);
      });

      grey_ooze = AddEntity(Kinds.pudding, null, "grey ooze", E =>
      {
        E.Glyph = Glyphs.grey_ooze;
        E.Sonic = Sonics.burble;
        E.Level = 3;
        E.Challenge = 13;
        E.Difficulty = 4;
        E.Frequency = 3;
        E.Defence = NewPuddingDefence(15); // -3 from dex = 12.
        E.SetDiet(Diets.metalivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(5000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 12, DEX: 6, CON: 16, INT: 1, WIS: 6, CHA: 2);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.fire, Elements.poison, Elements.petrify);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8(), K => // +1 from str.
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.DestroyEquippedItem(Dice.One, null, null, Materials.RustMetals.ToArray()));
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.fire));
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.OneIn3);
      });

      green_slime = AddEntity(Kinds.pudding, null, "green slime", E =>
      {
        E.Glyph = Glyphs.green_slime;
        E.Sonic = Sonics.burble;
        E.Level = 7;
        E.Challenge = 160;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = NewPuddingDefence(17); // -3
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 16, DEX: 5, CON: 15, INT: 1, WIS: 6, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.shock, Elements.poison, Elements.petrify);
        E.Startup.SetTalent(Properties.slippery, Properties.vitality); // green slime can't get sliming because of vitality.
        E.AddAttack(AttackTypes.touch, Elements.physical, 2.d4(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.AfflictEntity(Codex.Afflictions.sliming));
        }); // +3
        E.AddRetaliation(Chance.Always, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 4.d4() + 4);
          R.Apply.WhenChance(Chance.OneIn4, T => T.AfflictEntity(Codex.Afflictions.sliming));
        });
        E.Conveyance.Macro(Acidic);
        E.Conveyance.ApplyTransient(Properties.sickness, 1.d6() + 4);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.Conveyance.AfflictEntity(Codex.Afflictions.sliming);
        E.SetCorpse(Chance.Always);
      });

      mouldy_pudding = AddEntity(Kinds.pudding, null, "mouldy pudding", E =>
      {
        E.Glyph = Glyphs.mouldy_pudding;
        E.Sonic = Sonics.burble;
        E.Level = 12;
        E.Challenge = 176;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = NewPuddingDefence(17); // -3 from dex = 14.
        E.SetDiet(Diets.fabrivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(5000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 15, DEX: 5, CON: 15, INT: 1, WIS: 5, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.shock, Elements.poison, Elements.petrify);
        E.SetEngulf(Strikes.gas, A => A.HarmEntity(Elements.physical, 2.d4()));
        E.AddAttack(AttackTypes.engulf, Elements.physical, 4.d4(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 1.d6() + 2);
          K.Apply.WhenChance(Chance.OneIn3, T => T.DestroyEquippedItem(Dice.One, StockArray: null, SanctityArray: null, E.Diet.Materials.ToArray()));
        }); // +2
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.shock));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.OneIn3);
      });

      shoggoth = AddEntity(Kinds.pudding, null, "shoggoth", E =>
      {
        E.Glyph = Glyphs.shoggoth;
        E.Sonic = Sonics.burble;
        E.Level = 26;
        E.Challenge = 1242;
        E.Difficulty = 31;
        E.Frequency = 1;
        E.Defence = NewPuddingDefence(28); // -3 from dex.
        E.SetDiet(Diets.metalivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(25000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: false,
          Mind: true,
          Voice: true,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 20, DEX: 5, CON: 19, INT: 2, WIS: 8, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.acid, Elements.cold, Elements.shock, Elements.poison, Elements.petrify);
        E.SetEngulf(Strikes.acid, A => A.HarmEntity(Elements.acid, 3.d6()));
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d6());
        E.AddAttack(AttackTypes.touch, Elements.acid, Dice.Zero, K =>
        {
          K.Apply.HarmEntity(Elements.acid, 3.d6() + 3);
        });
        E.AddAttack(AttackTypes.engulf, Elements.acid, 4.d6(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.swallowed, 2.d6() + 4);
        }); // +5
        E.AddRetaliation(Chance.Always, AttackTypes.splash, R =>
        {
          R.SetCast().Strike(Strikes.acid, Dice.One);
          R.Apply.HarmEntity(Elements.acid, 3.d6() + 3);
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.shock));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region quadruped.
      baluchitherium = AddEntity(Kinds.quadruped, null, "baluchitherium", E =>
      {
        E.Glyph = Glyphs.baluchitherium;
        E.Sonic = Sonics.snarl;
        E.Level = 28;
        E.Challenge = 977;
        E.Difficulty = 29;
        E.Frequency = 2;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex = 21.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(800000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(48, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 12, CON: 16, INT: 3, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 5.d6());
        E.AddAttack(AttackTypes.claw, Elements.physical, 5.d6()); // +4
        E.SetCorpse(Chance.Always);
      });

      catoblepas = AddEntity(Kinds.quadruped, null, "catoblepas", E =>
      {
        E.Glyph = Glyphs.catoblepas;
        E.Sonic = Sonics.snarl;
        E.Level = 10;
        E.Challenge = 198;
        E.Difficulty = 12;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 12, CON: 11, INT: 3, WIS: 7, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.petrify);
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.flash, 2.d6())
           .SetBeholds()
           .SetReflects();
          K.Apply.ApplyTransient(Properties.petrifying, 10.d6());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6());
        E.Conveyance.IncarcerateEntity(Elements.petrify, Codex.Blocks.statue);
        E.SetCorpse(Chance.Always);
      });

      cave_bear = AddEntity(Kinds.quadruped, null, "cave bear", E =>
      {
        E.Glyph = Glyphs.cave_bear;
        E.Sonic = Sonics.growl;
        E.Level = 9;
        E.Challenge = 134;
        E.Difficulty = 11;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(150000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(16, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 10, CON: 16, INT: 2, WIS: 13, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4()); // +5
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4()); // +5
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d6()); // +5
        E.SetCorpse(Chance.Always);
      });

      // TODO: should cows & bulls have affinity to each other (eg. bovine race?).
      bull = AddDomesticEntity(Kinds.quadruped, null, "bull", E =>
      {
        E.Glyph = Glyphs.bull;
        E.Sonic = Sonics.moo;
        E.Level = 23;
        E.Challenge = 754;
        E.Difficulty = 24;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(150000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(16, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 11, CON: 17, INT: 3, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.horn, Elements.physical, 3.d6()); // +5 from strength, gored by horns.
        E.AddAttack(AttackTypes.butt, Elements.physical, 3.d4(), A => // +5 from strength, butt by head.
        {
          A.Apply.Knockback();
          A.Apply.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.stunned, 1.d4() + 1));
        });
        E.SetCorpse(Chance.Always);
      });

      cow = AddDomesticEntity(Kinds.quadruped, null, "cow", E =>
      {
        E.Glyph = Glyphs.cow;
        E.Sonic = Sonics.moo;
        E.Level = 7;
        E.Challenge = 50;
        E.Difficulty = 8;
        E.Frequency = 2;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Escape;
        E.Weight = Weight.FromUnits(140000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 11, CON: 15, INT: 3, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.butt, Elements.physical, 1.d6());
        E.AddAttack(AttackTypes.kick, Elements.physical, 2.d3()); // +2
        E.SetCorpse(Chance.Always);
      });

      elephant = AddEntity(Kinds.quadruped, null, "elephant", E =>
      {
        E.Glyph = Glyphs.elephant;
        E.Sonic = Sonics.trumpet;
        E.Level = 35;
        E.Challenge = 1245;
        E.Difficulty = 37;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -1 from dex = 17.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1100000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 24, DEX: 9, CON: 25, INT: 3, WIS: 6, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetResistance(Elements.petrify);
        E.AddAttack(AttackTypes.butt, Elements.physical, 6.d6(), A =>
        {
          A.Apply.Knockback();
          A.Apply.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.stunned, 1.d4() + 1));
        });
        E.AddAttack(AttackTypes.butt, Elements.physical, 6.d6(), A => // TODO: change to AttackTypes.Tusk?
        {
          A.Apply.Knockback();
          A.Apply.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.stunned, 1.d4() + 1));
        }); // +7
        E.SetCorpse(Chance.Always);
      });

      giant_badger = AddEntity(Kinds.quadruped, null, "giant badger", E =>
      {
        E.Glyph = Glyphs.giant_badger;
        E.Level = 2;
        E.Challenge = 5;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(11000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 11, CON: 12, INT: 3, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3()); // +1
        E.SetCorpse(Chance.OneIn3);
      });

      goat = AddDomesticEntity(Kinds.quadruped, null, "goat", E =>
      {
        E.Glyph = Glyphs.goat;
        E.Sonic = Sonics.bleat;
        E.Level = 4;
        E.Challenge = 17;
        E.Difficulty = 6;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(7000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 12, CON: 13, INT: 3, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.butt, Elements.physical, 2.d2());
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d2()); // +2
        E.SetCorpse(Chance.Always);
      });

      juggernaut = AddEntity(Kinds.quadruped, null, "juggernaut", E =>
      {
        E.Description = "Beware this clockwork machine of war.";
        E.Glyph = Glyphs.juggernaut;
        E.Sonic = Sonics.snarl;
        E.Level = 33;
        E.Challenge = 1181;
        E.Difficulty = 34;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1200000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 25, DEX: 10, CON: 24, INT: 5, WIS: 6, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.butt, Elements.physical, 8.d8(), A =>
        {
          A.Apply.Knockback();
          A.Apply.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.stunned, 1.d4() + 1));
        }); // +7
        E.SetCorpse(Chance.Never);
      });

      lamb = AddDomesticEntity(Kinds.quadruped, null, "lamb", E =>
      {
        E.Glyph = Glyphs.lamb;
        E.Sonic = Sonics.bleat;
        E.Level = 1;
        E.Challenge = 2;
        E.Difficulty = 2;
        E.Frequency = 2;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Escape;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 10, CON: 7, INT: 3, WIS: 5, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.butt, Elements.physical, 2.d2());
        E.AddAttack(AttackTypes.kick, Elements.physical, 2.d2()); // -1
        E.SetCorpse(Chance.Always);
      });

      leocrotta = AddEntity(Kinds.quadruped, null, "leocrotta", E =>
      {
        E.Glyph = Glyphs.leocrotta;
        E.Sonic = Sonics.snarl;
        E.Level = 13;
        E.Challenge = 205;
        E.Difficulty = 15;
        E.Frequency = 2;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +2 from dex = 19.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(22000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 14, INT: 3, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4()); // +4
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4());
        E.SetCorpse(Chance.Always);
      });

      mangler = AddEntity(Kinds.quadruped, null, "mangler", E =>
      {
        E.Glyph = Glyphs.mangler;
        E.Sonic = Sonics.snarl;
        E.Level = 18;
        E.Challenge = 423;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 12, CON: 15, INT: 3, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6()); // +3
        E.SetCorpse(Chance.Always);
      });

      mastodon = AddEntity(Kinds.quadruped, null, "mastodon", E =>
      {
        E.Glyph = Glyphs.mastodon;
        E.Sonic = Sonics.trumpet;
        E.Level = 29;
        E.Challenge = 991;
        E.Difficulty = 31;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1400000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(48, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 9, CON: 21, INT: 3, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.butt, Elements.physical, 4.d8(), A =>
        {
          A.Apply.Knockback();
          A.Apply.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.stunned, 1.d4() + 1));
        });
        E.AddAttack(AttackTypes.butt, Elements.physical, 4.d8(), A =>
        {
          A.Apply.Knockback();
          A.Apply.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.stunned, 1.d4() + 1));
        }); // +6
        E.SetCorpse(Chance.Always);
      });

      mumak = AddEntity(Kinds.quadruped, null, "mumak", E =>
      {
        E.Glyph = Glyphs.mumak;
        E.Sonic = Sonics.snarl;
        E.Level = 7;
        E.Challenge = 138;
        E.Difficulty = 10;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // -1 from dex = 20.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(16, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 24, DEX: 9, CON: 21, INT: 3, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.butt, Elements.physical, 4.d4(), A =>
        {
          A.Apply.Knockback();
          A.Apply.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.stunned, 1.d4() + 1));
        }); // +7
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4());
        E.SetCorpse(Chance.Always);
      });

      rothe = AddEntity(Kinds.quadruped, null, "rothé", E =>
      {
        E.Glyph = Glyphs.rothe;
        E.Sonic = Sonics.snarl;
        E.Level = 2;
        E.Challenge = 5;
        E.Difficulty = 4;
        E.Frequency = 4;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 11, CON: 10, INT: 3, WIS: 6, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d7()); // +1
        E.SetCorpse(Chance.Always);
      });

      scramper = AddEntity(Kinds.quadruped, null, "scramper", E =>
      {
        E.Glyph = Glyphs.scramper;
        E.Sonic = Sonics.squeal;
        E.Level = 3;
        E.Challenge = 16;
        E.Difficulty = 6;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 13, CON: 10, INT: 4, WIS: 7, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d6(), K =>
        {
          K.Apply.ApplyTransient(Properties.slowness, 1.d6());
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      pig = AddDomesticEntity(Kinds.quadruped, null, "pig", E =>
      {
        E.Glyph = Glyphs.pig;
        E.Sonic = Sonics.oink;
        E.Level = 5;
        E.Challenge = 10;
        E.Difficulty = 6;
        E.Frequency = 2;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Escape;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 11, CON: 12, INT: 3, WIS: 9, CHA: 5);
        E.LimitForm.Set(STR: 15, DEX: 15, CON: 15, INT: 15, WIS: 15, CHA: 15);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.cannibalism);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4());
        E.SetCorpse(Chance.Always);
      });

      sheep = AddDomesticEntity(Kinds.quadruped, null, "sheep", E =>
      {
        E.Glyph = Glyphs.sheep;
        E.Sonic = Sonics.baa;
        E.Level = 3;
        E.Challenge = 10;
        E.Difficulty = 5;
        E.Frequency = 2;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Escape;
        E.Weight = Weight.FromUnits(9000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 12, CON: 9, INT: 3, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 15, DEX: 15, CON: 15, INT: 15, WIS: 15, CHA: 15);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.butt, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d2()); // +1
        E.SetCorpse(Chance.Always);
      });

      squealer = AddEntity(Kinds.quadruped, null, "squealer", E =>
      {
        E.Glyph = Glyphs.squealer;
        E.Sonic = Sonics.squeal;
        E.Level = 6;
        E.Challenge = 74;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 13, CON: 10, INT: 4, WIS: 7, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d8());
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d6(), K =>
        {
          K.Apply.ApplyTransient(Properties.slowness, 1.d6());
        });
        E.AddAttack(AttackTypes.shriek, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.shriek, Dice.Zero)
           .SetTerminates();
          K.Apply.Alert(3.d6() + 3);
          K.Apply.Shout(Dice.Fixed(10), A => A.ApplyTransient(Properties.deafness, 6.d6() + 6));
        });
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      titanothere = AddEntity(Kinds.quadruped, null, "titanothere", E =>
      {
        E.Glyph = Glyphs.titanothere;
        E.Sonic = Sonics.snarl;
        E.Level = 26;
        E.Challenge = 935;
        E.Difficulty = 27;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(300000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(48, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 9, CON: 18, INT: 3, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d6()); // +4
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d6());
        E.SetCorpse(Chance.Always);
      });

      wumpus = AddEntity(Kinds.quadruped, null, "wumpus", E =>
      {
        E.Glyph = Glyphs.wumpus;
        E.Sonic = Sonics.snarl;
        E.Level = 16;
        E.Challenge = 370;
        E.Difficulty = 18;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(25000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 10, CON: 14, INT: 3, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d8()); // +2
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region rodent.
      black_rat = AddDomesticEntity(Kinds.rodent, null, "black rat", E =>
      {
        E.Glyph = Glyphs.black_rat;
        E.Sonic = Sonics.squeak;
        E.Level = 2;
        E.Challenge = 8;
        E.Difficulty = 3;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(400);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 7, DEX: 14, CON: 5, INT: 3, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d2()); // -2
        E.SetCorpse(Chance.Always);
      });

      giant_rat = AddEntity(Kinds.rodent, null, "giant rat", E =>
      {
        E.Glyph = Glyphs.giant_rat;
        E.Sonic = Sonics.squeak;
        E.Level = 1;
        E.Challenge = 2;
        E.Difficulty = 2;
        E.Frequency = 2;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 14, CON: 6, INT: 3, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d2()); // -1
        E.SetCorpse(Chance.OneIn4);
      });

      hellrat = AddEntity(Kinds.rodent, null, "hellrat", E =>
      {
        E.Glyph = Glyphs.hellrat;
        E.Sonic = Sonics.squeak;
        E.Level = 5;
        E.Challenge = 39;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 14, CON: 11, INT: 6, WIS: 9, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.fire);
        E.AddAttack(AttackTypes.bite, Elements.fire, 2.d4()); // +1
        E.Conveyance.MinorResistance(Elements.fire);
        E.SetCorpse(Chance.OneIn4);
      });

      pack_rat = AddDomesticEntity(Kinds.rodent, null, "pack rat", E =>
      {
        E.Glyph = Glyphs.pack_rat;
        E.Sonic = Sonics.squeak;
        E.Level = 4;
        E.Challenge = 20;
        E.Difficulty = 3;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(600);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 9, DEX: 15, CON: 5, INT: 3, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d2()); // -1
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.One, K =>
        {
          K.Apply.StealCarriedItem(Properties.fear, 6.d6() + 6);
        });
        E.SetCorpse(Chance.Always);
      });

      rabbit = AddDomesticEntity(Kinds.rodent, null, "rabbit", E =>
      {
        E.Glyph = Glyphs.rabbit;
        E.Sonic = Sonics.squeak;
        E.Level = 0;
        E.Challenge = 4;
        E.Difficulty = 1;
        E.Frequency = 2;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Escape;
        E.Weight = Weight.FromUnits(400);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d4());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 7, DEX: 12, CON: 5, INT: 3, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.jumping);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d2()); // -2
        E.SetCorpse(Chance.Always);
      });

      rabid_rabbit = AddEntity(Kinds.rodent, null, "rabid rabbit", E =>
      {
        E.Glyph = Glyphs.rabid_rabbit;
        E.Sonic = Sonics.squeak;
        E.Level = 2;
        E.Challenge = 7;
        E.Difficulty = 2;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(400);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 10, CON: 4, INT: 2, WIS: 5, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.jumping, Properties.cannibalism);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d2(), K =>
        {
          K.Apply.WhenChance(Chance.ThreeIn20, T => T.AfflictEntity(Codex.Afflictions.rabies));
        }); // -1 from str.
        E.SetCorpse(Chance.OneIn4);
        E.Conveyance.AfflictEntity(Codex.Afflictions.rabies);
      });

      rabid_rat = AddEntity(Kinds.rodent, null, "rabid rat", E =>
      {
        E.Glyph = Glyphs.rabid_rat;
        E.Sonic = Sonics.squeak;
        E.Level = 3;
        E.Challenge = 12;
        E.Difficulty = 3;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 9, DEX: 11, CON: 4, INT: 2, WIS: 5, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.SetTalent(Properties.cannibalism);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d2(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn5, T => T.AfflictEntity(Codex.Afflictions.rabies));
        }); // -1
        E.SetCorpse(Chance.OneIn4);
        E.Conveyance.AfflictEntity(Codex.Afflictions.rabies);
      });

      rat_king = AddDomesticEntity(Kinds.rodent, null, "rat king", E =>
      {
        E.Glyph = Glyphs.rat_king;
        E.Sonic = Sonics.squeak;
        E.Level = 6;
        E.Challenge = 287;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 13, CON: 12, INT: 7, WIS: 9, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.petrify);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d3());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d3() - 1, giant_rat);
          A.Apply.SummonEntity(1.d3() - 1, sewer_rat);
          A.Apply.SummonEntity(1.d3() - 1, black_rat);
          A.Apply.SummonEntity(1.d3() - 1, pack_rat);
        });
        E.SetCorpse(Chance.Always);
      });

      rock_mole = AddEntity(Kinds.rodent, null, "rock mole", E =>
      {
        E.Glyph = Glyphs.rock_mole;
        E.Sonic = Sonics.squeak;
        E.Level = 3;
        E.Challenge = 17;
        E.Difficulty = 4;
        E.Frequency = 2;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.lithivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 14, CON: 6, INT: 3, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.tunnelling);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d3()); // -1
        E.SetCorpse(Chance.OneIn3);
      });

      sewer_rat = AddEntity(Kinds.rodent, null, "sewer rat", E =>
      {
        E.Glyph = Glyphs.sewer_rat;
        E.Sonic = Sonics.squeak;
        E.Level = 0;
        E.Challenge = 1;
        E.Difficulty = 1;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d4());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 8, DEX: 14, CON: 5, INT: 3, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d2()); // -1
        E.SetCorpse(Chance.OneIn4);
      });

      woodchuck = AddEntity(Kinds.rodent, null, "woodchuck", E =>
      {
        E.Glyph = Glyphs.woodchuck;
        E.Sonic = Sonics.squeak;
        E.Level = 3;
        E.Challenge = 17;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 9, DEX: 15, CON: 6, INT: 3, WIS: 8, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetTalent(Properties.tunnelling);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d3()); // -1
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region snake.
      asphynx = AddEntity(Kinds.snake, null, "asphynx", E =>
      {
        E.Glyph = Glyphs.asphynx;
        E.Sonic = Sonics.hiss;
        E.Level = 28;
        E.Challenge = 768;
        E.Difficulty = 26;
        E.Frequency = 1;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 15, CON: 12, INT: 4, WIS: 8, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.expert, Skills.swimming);
        E.Startup.SetResistance(Elements.poison, Elements.petrify);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d6(), K =>
        {
          K.Apply.ApplyTransient(Properties.petrifying, 10.d6());
        });
        E.AddRetaliation(Chance.Always, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.psychic, Dice.One);
          R.Apply.ApplyTransient(Properties.petrifying, 10.d4());
        });
        E.Conveyance.IncarcerateEntity(Elements.petrify, Codex.Blocks.statue);
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.ApplyTransient(Properties.petrifying, 10.d100());
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      cobra = AddEntity(Kinds.snake, null, "cobra", E =>
      {
        E.Glyph = Glyphs.cobra;
        E.Sonic = Sonics.hiss;
        E.Level = 13;
        E.Challenge = 253;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 15, CON: 10, INT: 3, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4(), K =>
        {
          K.Apply.Macro(MinorPoison(Attributes.strength));
        });
        E.AddAttack(AttackTypes.spit, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.venom, 1.d4() + 4);
          K.Apply.ApplyTransient(Properties.blindness, 3.d6());
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      garter_snake = AddEntity(Kinds.snake, null, "garter snake", E =>
      {
        E.Glyph = Glyphs.garter_snake;
        E.Sonic = Sonics.hiss;
        E.Level = 1;
        E.Challenge = 2;
        E.Difficulty = 3;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 13, CON: 6, INT: 3, WIS: 6, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d2()); // -1
        E.SetCorpse(Chance.OneIn4);
      });

      king_cobra = AddEntity(Kinds.snake, null, "king cobra", E =>
      {
        E.Glyph = Glyphs.king_cobra;
        E.Sonic = Sonics.hiss;
        E.Level = 29;
        E.Challenge = 1010;
        E.Difficulty = 31;
        E.Frequency = 1;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 15, CON: 11, INT: 3, WIS: 8, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8(), K =>
        {
          K.Apply.Macro(MajorPoison(Attributes.strength));
        });
        E.AddAttack(AttackTypes.spit, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.venom, 1.d4() + 4);
          K.Apply.ApplyTransient(Properties.blindness, 6.d6());
          K.Apply.ApplyTransient(Properties.confusion, 6.d6());
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      pit_viper = AddEntity(Kinds.snake, null, "pit viper", E =>
      {
        E.Glyph = Glyphs.pit_viper;
        E.Sonic = Sonics.hiss;
        E.Level = 11;
        E.Challenge = 180;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 14, CON: 10, INT: 3, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetTalent(Properties.dark_vision, Properties.slippery);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d3(), K =>
        {
          K.Apply.Macro(MinorPoison(Attributes.strength));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      python = AddEntity(Kinds.snake, null, "python", E =>
      {
        E.Glyph = Glyphs.python;
        E.Sonic = Sonics.hiss;
        E.Level = 6;
        E.Challenge = 52;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 14, CON: 10, INT: 3, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetTalent(Properties.dark_vision, Properties.slippery);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.grapple, Elements.physical, 1.d2(), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.AddAttack(AttackTypes.grapple, Elements.physical, 2.d2(), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        }); // +3
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
      });

      snake = AddEntity(Kinds.snake, null, "snake", E =>
      {
        E.Glyph = Glyphs.snake;
        E.Sonic = Sonics.hiss;
        E.Level = 3;
        E.Challenge = 19;
        E.Difficulty = 4;
        E.Frequency = 2;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 14, CON: 8, INT: 3, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.swimming);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn2, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      water_moccasin = AddEntity(Kinds.snake, null, "water moccasin", E =>
      {
        E.Glyph = Glyphs.water_moccasin;
        E.Sonic = Sonics.hiss;
        E.Level = 4;
        E.Challenge = 28;
        E.Difficulty = 7;
        E.Frequency = 1; // water fountain.
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +2
        E.SetTerrain(Materials.water, Materials.air);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 14, CON: 18, INT: 3, WIS: 7, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region spider.
      barking_spider = AddEntity(Kinds.spider, null, "barking spider", E =>
      {
        E.Glyph = Glyphs.barking_spider;
        E.Sonic = Sonics.scuttle;
        E.Level = 3;
        E.Challenge = 17;
        E.Difficulty = 5;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // +1 from dex = 15.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 12, CON: 11, INT: 2, WIS: 6, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.SetTalent(Properties.free_action);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d2()); // -2
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      // TODO: jumping spider.

      carrion_crawler = AddEntity(Kinds.spider, null, "carrion crawler", E =>
      {
        E.Glyph = Glyphs.carrion_crawler;
        E.Sonic = Sonics.scuttle;
        E.Level = 3;
        E.Challenge = 67;
        E.Difficulty = 6;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(80000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 11, CON: 12, INT: 2, WIS: 6, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);

        void AddTentacle() => E.AddAttack(AttackTypes.touch, Elements.physical, Dice.One, K => K.Apply.ApplyTransient(Properties.paralysis, Dice.One));

        // 6 tentacles.
        AddTentacle();
        AddTentacle();
        AddTentacle();
        AddTentacle();
        AddTentacle();
        AddTentacle();

        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
      });

      cave_spider = AddEntity(Kinds.spider, null, "cave spider", E =>
      {
        E.Glyph = Glyphs.cave_spider;
        E.Sonic = Sonics.scuttle;
        E.Level = 1;
        E.Challenge = 2;
        E.Difficulty = 3;
        E.Frequency = 3;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 5, DEX: 12, CON: 9, INT: 2, WIS: 6, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.SetTalent(Properties.free_action);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2() + 3); // -3
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn4);
      });

      centipede = AddEntity(Kinds.spider, null, "centipede", E =>
      {
        E.Glyph = Glyphs.centipede;
        E.Sonic = Sonics.scuttle;
        E.Level = 2;
        E.Challenge = 9;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 5, DEX: 11, CON: 10, INT: 2, WIS: 6, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3() + 3, K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        }); // -3
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn4);
      });

      giant_spider = AddEntity(Kinds.spider, null, "giant spider", E =>
      {
        E.Glyph = Glyphs.giant_spider;
        E.Sonic = Sonics.scuttle;
        E.Level = 5;
        E.Challenge = 39;
        E.Difficulty = 7;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(9000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 11, CON: 12, INT: 2, WIS: 6, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.Startup.SetTalent(Properties.free_action);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d3(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        }); // -1
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      Girtab = AddUniqueEntity(Kinds.insect, null, "Girtab", E =>
      {
        E.Glyph = Glyphs.Girtab;
        E.Sonic = Sonics.scuttle;
        E.Level = 22;
        E.Challenge = 761;
        E.Difficulty = 25;
        E.Frequency = 0;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 13, INT: 13, WIS: 17, CHA: 14);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control, Properties.free_action);
        E.Startup.SetResistance(Elements.poison, Elements.petrify, Elements.magical);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.sting, Elements.physical, 2.d10(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        }); // +4
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      Lolth = AddUniqueEntity(Kinds.spider, null, "Lolth", E =>
      {
        E.Glyph = Glyphs.Lolth;
        E.Sonic = Sonics.scuttle;
        E.Level = 22;
        E.Challenge = 521;
        E.Difficulty = 25;
        E.Frequency = 0;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(40000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 15, CON: 18, INT: 16, WIS: 17, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.literacy, Skills.necromancy, Skills.evocation, Skills.abjuration, Skills.transmutation);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.teleport_control, Properties.free_action);
        E.Startup.SetResistance(Elements.sleep, Elements.magical);
        E.Startup.AddGrimoire(Dice.One, Spells.darkness);
        E.Startup.AddGrimoire(Dice.One, Spells.disintegrate);
        E.Startup.AddGrimoire(Dice.One, Spells.acid_stream);
        E.Startup.AddGrimoire(Dice.One, Spells.toxic_spray);
        E.Startup.AddGrimoire(Dice.One, Spells.poison_blast);
        E.Startup.AddGrimoire(Dice.One, Spells.deflection);
        E.AddAttack(AttackTypes.bite, Elements.physical, 5.d6(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        }); // +4
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.psychic, 2.d4() + 4)
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.silence, 3.d40());
        });
        E.Conveyance.MajorResistance(Elements.sleep);
        E.SetCorpse(Chance.Always);
      });

      Scorpius = AddUniqueEntity(Kinds.spider, null, "Scorpius", E =>
      {
        E.Glyph = Glyphs.Scorpius;
        E.Sonic = Sonics.scuttle;
        E.Level = 22;
        E.Challenge = 414;
        E.Difficulty = 25;
        E.Frequency = 0;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(32000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 24, DEX: 24, CON: 24, INT: 10, WIS: 10, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible, Properties.polymorph_control, Properties.clarity, Properties.dark_vision, Properties.teleport_control, Properties.jumping);
        E.Startup.SetResistance(Elements.poison, Elements.petrify, Elements.magical);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6()); // +6 from STR
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.sting, Elements.physical, 2.d10(), A =>
        {
          A.Apply.Macro(MajorPoison(Attributes.strength));
          A.Apply.AfflictEntity(Codex.Afflictions.poisoning);
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      nickelpede = AddEntity(Kinds.spider, null, "nickelpede", E =>
      {
        E.Glyph = Glyphs.nickelpede;
        E.Sonic = Sonics.scuttle;
        E.Level = 13;
        E.Challenge = 201;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // -1 from dex = 19.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(15000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 9, DEX: 9, CON: 11, INT: 2, WIS: 6, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 6.d3(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        }); // -1
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn3);
      });

      phase_spider = AddEntity(Kinds.spider, null, "phase spider", E =>
      {
        E.Glyph = Glyphs.phase_spider;
        E.Sonic = Sonics.scuttle;
        E.Level = 15;
        E.Challenge = 366;
        E.Difficulty = 17;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(9000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 13, CON: 12, INT: 3, WIS: 8, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.phasing, Properties.free_action);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d5(), K => // +1
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.poison));
          Table.Add(1, A => A.ApplyTransient(Properties.blinking, 1.d500() + 750));
        }));
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      recluse_spider = AddEntity(Kinds.spider, null, "recluse spider", E =>
      {
        E.Glyph = Glyphs.recluse_spider;
        E.Sonic = Sonics.scuttle;
        E.Level = 21;
        E.Challenge = 676;
        E.Difficulty = 23;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 12, CON: 10, INT: 2, WIS: 6, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.poison);
        E.Startup.SetTalent(Properties.free_action);
        E.AddAttack(AttackTypes.bite, Elements.physical, 8.d4(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.UnlessTargetResistant(Elements.poison, F => F.ApplyTransient(Properties.fainting, 1.d3())));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.OneIn4);
      });

      scorpion = AddEntity(Kinds.spider, null, "scorpion", E =>
      {
        E.Glyph = Glyphs.scorpion;
        E.Sonic = Sonics.scuttle;
        E.Level = 5;
        E.Challenge = 42;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 8, DEX: 10, CON: 11, INT: 2, WIS: 6, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d2());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d2());
        E.AddAttack(AttackTypes.sting, Elements.physical, 2.d2(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        }); // -1
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      giant_scorpion = AddEntity(Kinds.spider, null, "giant scorpion", E =>
      {
        E.Glyph = Glyphs.giant_scorpion;
        E.Sonic = Sonics.scuttle;
        E.Level = 19;
        E.Challenge = 914;
        E.Difficulty = 22;
        E.Frequency = 1;
        E.Defence = new Defence(D: 24, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 9, CON: 13, INT: 2, WIS: 7, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.sting, Elements.physical, 5.d4(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn2, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });

      spider_queen = AddEntity(Kinds.spider, null, "spider queen", E =>
      {
        E.Glyph = Glyphs.spider_queen;
        E.Sonic = Sonics.scuttle;
        E.Level = 26;
        E.Challenge = 990;
        E.Difficulty = 29;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(32000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 14, CON: 21, INT: 6, WIS: 10, CHA: 18);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.poison, Elements.petrify);
        E.Startup.SetTalent(Properties.free_action);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d9());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d7(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        }); // +7
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d3(), cave_spider); // lvl1 = 1..3
          A.Apply.SummonEntity(1.d2(), barking_spider); // lvl3 = 1..2
          A.Apply.SummonEntity(1.d2() - 1, giant_spider); // lvl5 = 0..1
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region trapper.
      lurker_above = AddEntity(Kinds.trapper, null, "lurker above", E =>
      {
        E.Glyph = Glyphs.lurker_above;
        E.Sonic = Sonics.slime;
        E.Level = 22;
        E.Challenge = 649;
        E.Difficulty = 24;
        E.Frequency = 2;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(60000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: true,
          Voice: true,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 15, CON: 15, INT: 6, WIS: 8, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.SetEngulf(Strikes.force, A => A.HarmEntity(Elements.physical, 3.d3()));
        E.AddAttack(AttackTypes.engulf, Elements.physical, 3.d5(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.swallowed, 2.d3() + 2);
        });
        E.SetCorpse(Chance.Always);
      });

      glass_piercer = AddEntity(Kinds.trapper, null, "glass piercer", E =>
      {
        E.Glyph = Glyphs.glass_piercer;
        E.Sonic = Sonics.scrape;
        E.Level = 8;
        E.Challenge = 64;
        E.Difficulty = 9;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +3
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 16, CON: 11, INT: 6, WIS: 7, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.Startup.SetResistance(Elements.acid);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d10()); // +3
        E.SetCorpse(Chance.OneIn3);
      });

      iron_piercer = AddEntity(Kinds.trapper, null, "iron piercer", E =>
      {
        E.Glyph = Glyphs.iron_piercer;
        E.Sonic = Sonics.scrape;
        E.Level = 17;
        E.Challenge = 395;
        E.Difficulty = 17;
        E.Frequency = 2;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +3
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 16, CON: 11, INT: 6, WIS: 7, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d8()); // +2
        E.SetCorpse(Chance.OneIn3);
      });

      rock_piercer = AddEntity(Kinds.trapper, null, "rock piercer", E =>
      {
        E.Glyph = Glyphs.rock_piercer;
        E.Sonic = Sonics.scrape;
        E.Level = 3;
        E.Challenge = 10;
        E.Difficulty = 4;
        E.Frequency = 4;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S1_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(2000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 15, CON: 11, INT: 6, WIS: 7, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10()); // +2
        E.SetCorpse(Chance.OneIn3);
      });

      trapper = AddEntity(Kinds.trapper, null, "trapper", E =>
      {
        E.Glyph = Glyphs.trapper;
        E.Sonic = Sonics.slime;
        E.Level = 35;
        E.Challenge = 1210;
        E.Difficulty = 36;
        E.Frequency = 2;
        E.Defence = new Defence(D: 27, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(60000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: true,
          Voice: true,
          Eyes: false,
          Ears: true,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 15, CON: 16, INT: 6, WIS: 8, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.SetConcealment(Mimicry: false);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.SetEngulf(Strikes.force, A => A.HarmEntity(Elements.physical, 4.d4()));
        E.AddAttack(AttackTypes.engulf, Elements.physical, 3.d7(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.swallowed, 3.d2() + 4);
        });
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region troll.
      Item[] TrollPolearmArray() => [Items.glaive, Items.partisan, Items.spetum, Items.ranseur];

      black_troll = AddEntity(Kinds.troll, Races.troll, "black troll", E =>
      {
        E.Glyph = Glyphs.black_troll;
        E.Sonic = Sonics.grunt;
        E.Level = 27;
        E.Challenge = 1184;
        E.Difficulty = 29;
        E.Frequency = 1;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0); // +3 from dex = 25.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(45000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 16, CON: 18, INT: 7, WIS: 12, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.polearm);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.Startup.Loot.AddKit(Chance.OneIn2, TrollPolearmArray());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d5());
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d7());
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d4()); // +5
        E.SetCorpse(Chance.Always);
        E.Conveyance.TradeoffAbility(Attributes.constitution, Attributes.wisdom);
        E.Conveyance.MinorProperty(Properties.life_regeneration);
        TrollWeakness(E);
      });

      ice_troll = AddEntity(Kinds.troll, Races.troll, "ice troll", E =>
      {
        E.Glyph = Glyphs.ice_troll;
        E.Sonic = Sonics.grunt;
        E.Level = 20;
        E.Challenge = 560;
        E.Difficulty = 21;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex = 21.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(40000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 12, CON: 17, INT: 7, WIS: 11, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.polearm);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.cold);
        E.Startup.Loot.AddKit(Chance.OneIn2, TrollPolearmArray());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5());
        E.AddAttack(AttackTypes.claw, Elements.cold, 4.d5());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d5()); // +3
        E.Conveyance.TradeoffAbility(Attributes.constitution, Attributes.wisdom);
        E.Conveyance.MajorResistance(Elements.cold);
        E.SetCorpse(Chance.Always);
        TrollWeakness(E);
      });

      ologhai = AddEntity(Kinds.troll, Races.troll, "olog-hai", E =>
      {
        E.Glyph = Glyphs.ologhai;
        E.Sonic = Sonics.grunt;
        E.Level = 31;
        E.Challenge = 1247;
        E.Difficulty = 34;
        E.Frequency = 1;
        E.Defence = new Defence(D: 28, P: +0, S: +0, B: +0); // +3 from dex = 31.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(45000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(48, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 16, CON: 17, INT: 7, WIS: 12, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.polearm);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.Startup.Loot.AddKit(Chance.OneIn2, TrollPolearmArray());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d8());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d10());
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6()); // +4
        E.Conveyance.TradeoffAbility(Attributes.constitution, Attributes.wisdom);
        E.SetCorpse(Chance.Always);
        TrollWeakness(E);
      });

      rock_troll = AddEntity(Kinds.troll, Races.troll, "rock troll", E =>
      {
        E.Glyph = Glyphs.rock_troll;
        E.Sonic = Sonics.grunt;
        E.Level = 14;
        E.Challenge = 354;
        E.Difficulty = 16;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex = 21.
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(50000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 12, CON: 17, INT: 7, WIS: 11, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.polearm);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.Startup.Loot.AddKit(Chance.OneIn2, TrollPolearmArray());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d5());
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d3()); // +3
        E.SetCorpse(Chance.Always);
        E.Conveyance.TradeoffAbility(Attributes.constitution, Attributes.wisdom);
        E.Conveyance.MinorProperty(Properties.slow_digestion);
        TrollWeakness(E);
      });

      cave_troll = AddEntity(Kinds.troll, Races.troll, "cave troll", E =>
      {
        E.Glyph = Glyphs.cave_troll;
        E.Sonic = Sonics.grunt;
        E.Level = 7;
        E.Challenge = 55;
        E.Difficulty = 9;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 12, CON: 15, INT: 7, WIS: 10, CHA: 6);
        E.LimitForm.Set(STR: 25, DEX: 20, CON: 25, INT: 15, WIS: 15, CHA: 10);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.polearm);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.Startup.Loot.AddKit(Chance.OneIn2, TrollPolearmArray());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d5());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d5());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4()); // +3
        E.Conveyance.TradeoffAbility(Attributes.constitution, Attributes.wisdom);
        E.SetCorpse(Chance.Always);
        TrollWeakness(E);
      });

      twoheaded_troll = AddEntity(Kinds.troll, Races.troll, "two-headed troll", E =>
      {
        E.Glyph = Glyphs.twoheaded_troll;
        E.Sonic = Sonics.grunt;
        E.Level = 23;
        E.Challenge = 781;
        E.Difficulty = 25;
        E.Frequency = 1;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(40000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 11, CON: 16, INT: 7, WIS: 10, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.polearm);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.Startup.Loot.AddKit(Chance.OneIn2, TrollPolearmArray());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8()); // +2
        E.Conveyance.TradeoffAbility(Attributes.constitution, Attributes.wisdom);
        E.SetCorpse(Chance.Always);
        TrollWeakness(E);
      });

      water_troll = AddEntity(Kinds.troll, Races.troll, "water troll", E =>
      {
        E.Glyph = Glyphs.water_troll;
        E.Sonic = Sonics.grunt;
        E.Level = 11;
        E.Challenge = 180;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +1
        E.SetTerrain(Materials.water, Materials.air);
        E.SetDiet(Diets.geophagy);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(36000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 13, CON: 17, INT: 7, WIS: 11, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming, Skills.polearm);
        E.Startup.SetTalent(Properties.dark_vision, Properties.life_regeneration);
        E.Startup.Loot.AddKit(Chance.OneIn2, TrollPolearmArray());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d5());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d5()); // +4
        E.Conveyance.TradeoffAbility(Attributes.constitution, Attributes.wisdom);
        E.SetCorpse(Chance.Always);
        TrollWeakness(E);
      });
      #endregion

      #region umber.
      umber_hulk = AddEntity(Kinds.umber, null, "umber hulk", E =>
      {
        E.Glyph = Glyphs.umber_hulk;
        E.Sonic = Sonics.growl;
        E.Level = 9;
        E.Challenge = 149;
        E.Difficulty = 12;
        E.Frequency = 2;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.lithivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(25000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 14, CON: 16, INT: 6, WIS: 11, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.tunnelling);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d9());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d9());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d7()); // +3
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.psychic, 2.d4() + 4)
           .SetReflects()
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.confusion, 3.d4());
        });
        E.SetCorpse(Chance.Always);
      });

      water_hulk = AddEntity(Kinds.umber, null, "water hulk", E =>
      {
        E.Glyph = Glyphs.water_hulk;
        E.Sonic = Sonics.growl;
        E.Level = 24;
        E.Challenge = 930;
        E.Difficulty = 27;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +2
        E.SetTerrain(Materials.water, Materials.air);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(24000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 14, CON: 17, INT: 6, WIS: 11, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.master, Skills.swimming);
        E.Startup.SetTalent(Properties.tunnelling);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d9());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d9());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d7()); // +3
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.psychic, 2.d4() + 4)
           .SetReflects()
           .SetBeholds();
          K.Apply.ApplyTransient(Properties.confusion, 3.d4());
        });
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region unicorn.
      black_unicorn = AddEntity(Kinds.horse, Races.unicorn, "black unicorn", E =>
      {
        E.Glyph = Glyphs.black_unicorn;
        E.Sonic = Sonics.neigh;
        E.Level = 4;
        E.Challenge = 27;
        E.Difficulty = 6;
        E.Frequency = 4;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +2 from dex = 18.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S7_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(80000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 15, INT: 11, WIS: 17, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour);
        E.Startup.SetTalent(Properties.clarity);
        E.Startup.SetResistance(Elements.poison);         // +4 from str 
        E.AddAttack(AttackTypes.horn, Elements.physical, 1.d6()); // = 5-10
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d2()); // = 5-6
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(Chance.OneIn2, Dice.One, Items.unicorn_horn);
      });

      grey_unicorn = AddEntity(Kinds.horse, Races.unicorn, "grey unicorn", E =>
      {
        E.Glyph = Glyphs.grey_unicorn;
        E.Sonic = Sonics.neigh;
        E.Level = 8;
        E.Challenge = 165;
        E.Difficulty = 10;
        E.Frequency = 4;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // +2 from dex = 19.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S7_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(120000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 14, CON: 15, INT: 11, WIS: 17, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour);
        E.Startup.SetTalent(Properties.clarity);
        E.Startup.SetResistance(Elements.poison);         // +4 from str
        E.AddAttack(AttackTypes.horn, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.kick, Elements.physical, 2.d2());
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(Chance.OneIn2, Dice.One, Items.unicorn_horn);
      });

      white_unicorn = AddEntity(Kinds.horse, Races.unicorn, "white unicorn", E =>
      {
        E.Glyph = Glyphs.white_unicorn;
        E.Sonic = Sonics.neigh;
        E.Level = 12;
        E.Challenge = 204;
        E.Difficulty = 14;
        E.Frequency = 4;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from dex = 20.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S7_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(100000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 14, CON: 15, INT: 11, WIS: 17, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour);
        E.Startup.SetTalent(Properties.clarity);
        E.Startup.SetResistance(Elements.poison);         // +6 from str
        E.AddAttack(AttackTypes.horn, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.kick, Elements.physical, 3.d2());
        E.Conveyance.MajorResistance(Elements.poison);
        E.SetCorpse(Chance.Always);
        E.DropLoot.AddKit(Chance.OneIn2, Dice.One, Items.unicorn_horn);
      });

      horse = AddDomesticEntity(Kinds.horse, null, "horse", E =>
      {
        E.Glyph = Glyphs.horse;
        E.Sonic = Sonics.neigh;
        E.Level = 5;
        E.Challenge = 31;
        E.Difficulty = 7;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S6_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(90000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 10, CON: 12, INT: 2, WIS: 11, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d5()); // +3 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2());
        E.SetCorpse(Chance.Always);
      });

      nightmare = AddEntity(Kinds.horse, null, "nightmare", E =>
      {
        E.Glyph = Glyphs.nightmare;
        E.Sonic = Sonics.neigh;
        E.Level = 30;
        E.Challenge = 1365;
        E.Difficulty = 32;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +3 from dex = 22.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S7_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(120000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 15, CON: 16, INT: 10, WIS: 13, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour);
        E.Startup.SetResistance(Elements.cold, Elements.shock, Elements.fire, Elements.poison);
        E.AddAttack(AttackTypes.butt, Elements.physical, 3.d10()); // +4 from str.
        E.AddAttack(AttackTypes.kick, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.kick, Elements.physical, 3.d4());
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.fire));
          Table.Add(1, A => A.MajorResistance(Elements.cold));
          Table.Add(1, A => A.MajorResistance(Elements.shock));
          Table.Add(1, A => A.MajorResistance(Elements.poison));
        }));
        E.SetCorpse(Chance.Always);
      });

      pegasus = AddEntity(Kinds.horse, null, "pegasus", E =>
      {
        E.Glyph = Glyphs.pegasus;
        E.Sonic = Sonics.neigh;
        E.Level = 24;
        E.Challenge = 961;
        E.Difficulty = 27;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +3 from dex = 22.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S7_5;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(75000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: false,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 15, CON: 16, INT: 10, WIS: 15, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.kick, Elements.physical, 2.d8()); // +4 from str.
        E.AddAttack(AttackTypes.kick, Elements.physical, 2.d8());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6());
        E.SetCorpse(Chance.Always);
      });

      pony = AddDomesticEntity(Kinds.horse, null, "pony", E =>
      {
        E.Glyph = Glyphs.pony;
        E.Sonic = Sonics.neigh;
        E.Level = 3;
        E.Challenge = 13;
        E.Difficulty = 4;
        E.Frequency = 2;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(40000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 10, CON: 13, INT: 2, WIS: 11, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d4()); // +2 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2());
        E.SetCorpse(Chance.Always);
      });

      warhorse = AddDomesticEntity(Kinds.horse, null, "warhorse", E =>
      {
        E.Glyph = Glyphs.warhorse;
        E.Sonic = Sonics.neigh;
        E.Level = 7;
        E.Challenge = 55;
        E.Difficulty = 9;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +1 from dex = 16.
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S6_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(140000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 12, CON: 13, INT: 2, WIS: 12, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.kick, Elements.physical, 1.d6()); // +4 from str.
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2());
        E.SetCorpse(Chance.Always);
      });
      #endregion

      #region vampire.
      Count_Dracula = AddUniqueEntity(Kinds.vampire, null, "Count Dracula", E =>
      {
        E.Glyph = Glyphs.Count_Dracula;
        E.Level = 15;
        E.Challenge = 544;
        E.Difficulty = 20;
        E.Frequency = 0;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +5
        E.SetDiet(Diets.hematophagy);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 20, CON: 22, INT: 16, WIS: 17, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.life_regeneration, Properties.vitality, Properties.polymorph_control, Properties.teleport_control, Properties.stealth);
        E.Startup.SetResistance(Elements.poison, Elements.drain, Elements.sleep, Elements.magical);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d9());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d9()); // +3
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 3.d6());
        });
        E.SetCorpse(Chance.Never);
      });

      vampire = AddEntity(Kinds.vampire, null, "vampire", E =>
      {
        E.Glyph = Glyphs.vampire;
        E.Level = 15;
        E.Challenge = 477;
        E.Difficulty = 17;
        E.Frequency = 2;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2 from DEX = 20.
        E.SetDiet(Diets.hematophagy);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 12, DEX: 14, CON: 14, INT: 10, WIS: 10, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.life_regeneration, Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4()); // +1
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d4());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d5());
        });
        E.SetCorpse(Chance.Never);
      });

      vampire_king = AddEntity(Kinds.vampire, null, "vampire king", E =>
      {
        E.Glyph = Glyphs.vampire_king;
        E.Level = 32;
        E.Challenge = 1094;
        E.Difficulty = 36;
        E.Frequency = 1;
        E.Defence = new Defence(D: 27, P: +0, S: +0, B: +0); // +3 from dex=30
        E.SetDiet(Diets.hematophagy);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(17000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 17, CON: 16, INT: 16, WIS: 15, CHA: 16);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.life_regeneration, Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.drain, Elements.sleep, Elements.magical);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d10()); // +3
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d10());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 3.d10());
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 1.d10());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 1.d10());
        });
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          K.Apply.SummonEntity(1.d3(), vampire_bat);
          K.Apply.SummonEntity(1.d2(), vampire);
          K.Apply.SummonEntity(1.d2() - 1, vampire_lord); // occasional vampire lord.
        });
        E.SetCorpse(Chance.Never);
      });

      vampire_lord = AddEntity(Kinds.vampire, null, "vampire lord", E =>
      {
        E.Glyph = Glyphs.vampire_lord;
        E.Level = 22;
        E.Challenge = 703;
        E.Difficulty = 24;
        E.Frequency = 2;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +3 from DEX = 23.
        E.SetDiet(Diets.hematophagy);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 16, CON: 14, INT: 12, WIS: 12, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.life_regeneration, Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d3()); // +2
        E.AddAttack(AttackTypes.weapon, Elements.physical, 4.d6());
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d10());
        });
        E.SetCorpse(Chance.Never);
      });

      vampire_mage = AddEntity(Kinds.vampire, null, "vampire mage", E =>
      {
        E.Glyph = Glyphs.vampire_mage;
        E.Level = 20;
        E.Challenge = 746;
        E.Difficulty = 26;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +3
        E.SetDiet(Diets.hematophagy);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 16, CON: 14, INT: 15, WIS: 17, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient, Skills.necromancy, Skills.evocation, Skills.enchantment, Skills.literacy);
        E.Startup.SetTalent(Properties.flight, Properties.life_regeneration, Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(1.d4() + 1, Spells.drain_life, Spells.animate_dead, Spells.magic_missile, Spells.poison_blast, Spells.slow, Spells.cone_of_cold);
        E.AddAttack(AttackTypes.claw, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d8());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 1.d8());
        });
        E.SetCorpse(Chance.Never);
      });

      // TODO: fire vampire and star vampire are Lovecraftian aliens that are not undead vampires - perhaps move to Kinds.flayer and rename to star/fire flayer? Or introduce a new one such as Kinds.alien?
      fire_vampire = AddEntity(Kinds.vampire, null, "fire vampire", E =>
      {
        //E.Description = " A fire vampire is a powerful type of vampire that is not undead like other members of the monster class - it is instead an extraterrestrial being that is humanoid and infravisible, though it still shares the vampire's regeneration abilities and resistances, along with their weakness to silver.";
        E.Glyph = Glyphs.fire_vampire;
        E.Level = 24;
        E.Challenge = 1185;
        E.Difficulty = 30;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +5
        E.SetTerrain(Materials.air, Materials.fire);
        E.SetDiet(Diets.hematophagy);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.fire,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 20, CON: 16, INT: 11, WIS: 12, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient, Skills.evocation, Skills.literacy);
        E.Startup.AddGrimoire(Dice.One, Spells.fireball);
        E.Startup.SetTalent(Properties.flight, Properties.life_regeneration, Properties.vitality, Properties.quickness);
        E.Startup.SetResistance(Elements.cold, Elements.fire, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.fire, 2.d8()); // +2 from STR.
        E.AddAttack(AttackTypes.claw, Elements.fire, 2.d8());
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d4());
        });
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.magic, Dice.One);
          K.Apply.DrainMana(Elements.drain, 2.d4());
        });
        E.AddAttack(AttackTypes.spell, Elements.fire, 6.d6());
        E.SetCorpse(Chance.Never);
      });

      star_vampire = AddEntity(Kinds.vampire, null, "star vampire", E =>
      {
        //E.Description = "Star vampire are extraterrestrials that lack a specific shape and have a myriad of sucker tentacles. Though they also feed on blood, they are not to be confused with the usual undead vampires.";
        E.Glyph = Glyphs.star_vampire;
        E.Level = 28;
        E.Challenge = 1020;
        E.Difficulty = 33;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +4
        E.SetDiet(Diets.hematophagy);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(30000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8());
        E.ManaAdvancement.Set(32, 1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 18, CON: 18, INT: 11, WIS: 12, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability(Materials.silver);
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.life_regeneration, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.tentacle, Elements.physical, 2.d6()); // +3
        E.AddAttack(AttackTypes.tentacle, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d6());
        });
        E.AddAttack(AttackTypes.tentacle, Elements.physical, 2.d6());
        E.AddAttack(AttackTypes.tentacle, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d6());
        });
        E.AddAttack(AttackTypes.tentacle, Elements.physical, 1.d12());
        E.AddAttack(AttackTypes.tentacle, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d6());
        });
        E.SetCorpse(Chance.Never);
      });
      #endregion

      #region vortex.
      dust_vortex = AddEntity(Kinds.vortex, null, "dust vortex", E =>
      {
        E.Glyph = Glyphs.dust_vortex;
        E.Sonic = Sonics.gas;
        E.Level = 6;
        E.Challenge = 47;
        E.Difficulty = 8;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +3
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.stone,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 17, CON: 8, INT: 1, WIS: 3, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.sleep, Elements.petrify);
        E.SetEngulf(Strikes.gas, A => A.HarmEntity(Elements.physical, 1.d6()));
        E.AddAttack(AttackTypes.engulf, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 1.d4() + 2);
          K.Apply.ApplyTransient(Properties.blindness, 3.d7());
        });
        E.SetCorpse(Chance.Never);
      });

      energy_vortex = AddEntity(Kinds.vortex, null, "energy vortex", E =>
      {
        E.Glyph = Glyphs.energy_vortex;
        E.Sonic = Sonics.electricity;
        E.Level = 25;
        E.Challenge = 973;
        E.Difficulty = 27;
        E.Frequency = 1;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // +3 from dex = 26.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.electricity,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 17, CON: 8, INT: 1, WIS: 6, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.vitality);
        E.Startup.SetResistance(Elements.disintegrate, Elements.shock, Elements.poison, Elements.sleep, Elements.petrify);
        E.SetEngulf(Strikes.flash, A => A.HarmEntity(Elements.shock, 4.d5()));
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.energy, Dice.One);
          K.Apply.DrainMana(Elements.drain, 9.d3() + 1);
        });
        E.AddAttack(AttackTypes.engulf, Elements.shock, 1.d6(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 2.d3() + 2);
        });
        E.AddRetaliation(Chance.OneIn3, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.energy, Dice.One);
          R.Apply.HarmEntity(Elements.shock, 7.d4());
        });
        E.SetCorpse(Chance.Never);
      });

      fire_vortex = AddEntity(Kinds.vortex, null, "fire vortex", E =>
      {
        E.Glyph = Glyphs.fire_vortex;
        E.Sonic = Sonics.burn;
        E.Level = 21;
        E.Challenge = 695;
        E.Difficulty = 23;
        E.Frequency = 1;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0); // +3 from dex = 25.
        E.SetTerrain(Materials.air, Materials.fire, Materials.lava);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.fire,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 17, CON: 8, INT: 1, WIS: 3, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.vitality);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.sleep, Elements.petrify);
        E.SetEngulf(Strikes.flash, A => A.HarmEntity(Elements.fire, 4.d4()));
        E.AddAttack(AttackTypes.engulf, Elements.fire, 4.d4(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 2.d3() + 2);
        });
        E.AddRetaliation(Chance.OneIn3, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.flame, Dice.One);
          R.Apply.HarmEntity(Elements.fire, 9.d4());
        });
        E.SetCorpse(Chance.Never);
      });

      fog_cloud = AddEntity(Kinds.vortex, null, "fog cloud", E =>
      {
        E.Glyph = Glyphs.fog_cloud;
        E.Sonic = Sonics.gas;
        E.Level = 3;
        E.Challenge = 20;
        E.Difficulty = 4;
        E.Frequency = 2;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +2
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S1_5;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.ether,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 4, DEX: 14, CON: 7, INT: 1, WIS: 4, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.vitality);
        E.Startup.SetResistance(Elements.poison, Elements.sleep, Elements.petrify);
        E.SetEngulf(Strikes.gas, A => A.HarmEntity(Elements.physical, 1.d6()));
        E.AddAttack(AttackTypes.engulf, Elements.physical, 4.d2(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 1.d3() + 2);
        }); // -3
        E.SetCorpse(Chance.Never);
      });

      ice_vortex = AddEntity(Kinds.vortex, null, "ice vortex", E =>
      {
        E.Glyph = Glyphs.ice_vortex;
        E.Sonic = Sonics.freeze;
        E.Level = 10;
        E.Challenge = 89;
        E.Difficulty = 11;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // +3
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.ice,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 17, CON: 8, INT: 1, WIS: 3, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.sleep, Elements.petrify);
        E.SetEngulf(Strikes.frost, A =>
        {
          A.HarmEntity(Elements.cold, 2.d8());
          A.ApplyTransient(Properties.slowness, 2.d3());
        });
        E.AddAttack(AttackTypes.engulf, Elements.cold, 2.d5(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 1.d4() + 2);
        });
        E.AddRetaliation(Chance.OneIn3, AttackTypes.touch, R =>
        {
          R.SetCast().Strike(Strikes.frost, Dice.One);
          R.Apply.HarmEntity(Elements.cold, 4.d4());
        });
        E.SetCorpse(Chance.Never);
      });

      steam_vortex = AddEntity(Kinds.vortex, null, "steam vortex", E =>
      {
        E.Glyph = Glyphs.steam_vortex;
        E.Sonic = Sonics.gas;
        E.Level = 15;
        E.Challenge = 374;
        E.Difficulty = 17;
        E.Frequency = 2;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +3 from dex = 23.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S5_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.water,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 17, CON: 8, INT: 1, WIS: 3, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.vitality);
        E.Startup.SetResistance(Elements.fire, Elements.poison, Elements.sleep, Elements.petrify);
        E.SetEngulf(Strikes.gas, A =>
        {
          A.HarmEntity(Elements.fire, 3.d4());
          A.ApplyTransient(Properties.blindness, 2.d3());
          A.CreateVolatile(Volatiles.steam, 1.d100() + 100);
        });
        E.AddAttack(AttackTypes.engulf, Elements.fire, 3.d4(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.engulfed, 2.d3() + 1);
        });
        E.SetCorpse(Chance.Never);
      });
      #endregion

      #region worm.
      acid_worm = AddEntity(Kinds.worm, null, "acid worm", E =>
      {
        E.Glyph = Glyphs.acid_worm;
        E.Sonic = Sonics.slime;
        E.Level = 22;
        E.Challenge = 664;
        E.Difficulty = 24;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 10, DEX: 9, CON: 10, INT: 2, WIS: 8, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid, Elements.petrify);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.spit, Elements.acid, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.acid, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.acid, 3.d7());
          K.Apply.CreateDevice(Codex.Devices.noxious_pool, Destruction: false);
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d10(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.Conveyance.Macro(Acidic);
        E.SetCorpse(Chance.OneIn3);
      });

      baby_long_worm = AddEntity(Kinds.worm, null, "baby long worm", E =>
      {
        E.Glyph = Glyphs.baby_long_worm;
        E.Sonic = Sonics.slime;
        E.Level = 12;
        E.Challenge = 184;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 6, DEX: 8, CON: 8, INT: 2, WIS: 5, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4() + 2); // -2
        E.SetCorpse(Chance.Always);
      });

      baby_purple_worm = AddEntity(Kinds.worm, null, "baby purple worm", E =>
      {
        E.Glyph = Glyphs.baby_purple_worm;
        E.Sonic = Sonics.slime;
        E.Level = 12;
        E.Challenge = 184;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 6, DEX: 8, CON: 8, INT: 2, WIS: 5, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d5() + 2); // -2
        E.SetCorpse(Chance.Always);
      });

      bloodworm = AddEntity(Kinds.worm, null, "bloodworm", E =>
      {
        E.Glyph = Glyphs.bloodworm;
        E.Sonic = Sonics.slime;
        E.Level = 15;
        E.Challenge = 341;
        E.Difficulty = 17;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 11, DEX: 10, CON: 11, INT: 2, WIS: 8, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d5(), K =>
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.strength)));
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d4() + 2);
        });
        E.SetCorpse(Chance.OneIn3);
      });

      dung_worm = AddEntity(Kinds.worm, null, "dung worm", E =>
      {
        E.Glyph = Glyphs.dung_worm;
        E.Sonic = Sonics.slime;
        E.Level = 3;
        E.Challenge = 6;
        E.Difficulty = 3;
        E.Frequency = 2;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 11, DEX: 9, CON: 10, INT: 2, WIS: 8, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d4());
        E.SetCorpse(Chance.OneIn3);
      });

      long_worm = AddEntity(Kinds.worm, null, "long worm", E =>
      {
        E.Glyph = Glyphs.long_worm;
        E.Sonic = Sonics.slime;
        E.Level = 20;
        E.Challenge = 580;
        E.Difficulty = 21;
        E.Frequency = 2;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.SetTail(long_worm_tail, 2.d3() + 2); // 4-8
        E.Weight = Weight.FromUnits(200000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 14, DEX: 9, CON: 12, INT: 2, WIS: 8, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d20()); // +2
        E.SetCorpse(Chance.Always);
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.AfflictEntity(Codex.Afflictions.worms));
        E.DropLoot.AddKit(Chance.Always, Dice.One, Items.worm_tooth);
      });

      long_worm_tail = AddEntity(Kinds.worm, null, "long worm tail", E =>
      {
        E.Glyph = Glyphs.long_worm_tail;
        E.Level = 20;
        E.Challenge = 8;
        E.Difficulty = 1;
        E.Frequency = 0;
        E.IsTail = true;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 8, DEX: 9, CON: 12, INT: 1, WIS: 1, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.SetCorpse(Chance.Never);
      });

      larva = AddEntity(Kinds.worm, null, "larva", E =>
      {
        E.Glyph = Glyphs.larva;
        E.Sonic = Sonics.slime;
        E.Level = 1;
        E.Challenge = 2;
        E.Difficulty = 1;
        E.Frequency = 2;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // -2
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(300);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 4, DEX: 7, CON: 5, INT: 2, WIS: 5, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.life_regeneration, Properties.slippery);
        E.Startup.SetResistance(Elements.poison, Elements.sleep);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2() + 3); // -3
        E.Conveyance.MajorResistance(Elements.sleep);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn3);
      });

      maggot = AddEntity(Kinds.worm, null, "maggot", E =>
      {
        E.Glyph = Glyphs.maggot;
        E.Sonic = Sonics.slime;
        E.Level = 2;
        E.Challenge = 4;
        E.Difficulty = 2;
        E.Frequency = 2;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 8, DEX: 9, CON: 10, INT: 2, WIS: 8, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d2()); // -1
        E.SetCorpse(Chance.OneIn3);
      });

      bile_worm = AddEntity(Kinds.worm, null, "bile worm", E =>
      {
        E.Glyph = Glyphs.bile_worm;
        E.Sonic = Sonics.slime;
        E.Level = 3;
        E.Challenge = 21;
        E.Difficulty = 3;
        E.Frequency = 2;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.SetTail(bile_worm_tail, 1.d6()); // 1-6
        E.Weight = Weight.FromUnits(170000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 12, DEX: 9, CON: 10, INT: 2, WIS: 8, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d7()); // +1
        E.AddAttack(AttackTypes.spit, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.venom, 1.d4() + 4);
          K.Apply.HarmEntity(Elements.physical, 1.d6());
          K.Apply.ApplyTransient(Properties.hallucination, Dice.Fixed(50));
        });
        E.SetCorpse(Chance.Always);
        E.Conveyance.ApplyTransient(Properties.hallucination, Dice.Fixed(+100));
      });

      bile_worm_tail = AddEntity(Kinds.worm, null, "bile worm tail", E =>
      {
        E.Glyph = Glyphs.bile_worm_tail;
        E.Level = 3;
        E.Challenge = 3;
        E.Difficulty = 3;
        E.Frequency = 0;
        E.IsTail = true;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(170000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 6, DEX: 9, CON: 10, INT: 1, WIS: 1, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.SetCorpse(Chance.Never);
      });

      phase_worm = AddEntity(Kinds.worm, null, "phase worm", E =>
      {
        E.Glyph = Glyphs.phase_worm;
        E.Sonic = Sonics.slime;
        E.Level = 35;
        E.Challenge = 1166;
        E.Difficulty = 37;
        E.Frequency = 1;
        E.Defence = new Defence(D: 21, P: +0, S: +0, B: +0); // +4
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(250000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 22, DEX: 18, CON: 22, INT: 8, WIS: 8, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.slippery, Properties.free_action, Properties.phasing, Properties.blinking, Properties.teleportation);
        E.Startup.SetResistance(Elements.poison, Elements.disintegrate);
        E.SetEngulf(Strikes.psychic, A =>
        {
          A.HarmEntity(Elements.physical, 1.d20());
          A.ApplyTransient(Properties.phasing, 4.d6());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 5.d5(), K => // +6
        {
          K.Apply.WhenChance(Chance.OneIn4, T => T.Macro(MinorPoison(Attributes.constitution)));
        });
        E.AddAttack(AttackTypes.engulf, Elements.physical, 2.d8(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.swallowed, 1.d8() + 2);
        });
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.poison));
          Table.Add(1, A => A.ApplyTransient(Properties.phasing, 1.d500() + 750));
        }));
        E.Conveyance.Macro(Poisoned(Attributes.constitution));
        E.SetCorpse(Chance.Always);
      });

      purple_worm = AddEntity(Kinds.worm, null, "purple worm", E =>
      {
        E.Glyph = Glyphs.purple_worm;
        E.Sonic = Sonics.slime;
        E.Level = 24;
        E.Challenge = 833;
        E.Difficulty = 26;
        E.Frequency = 2;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0); // -1 from dex = 21.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_3;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.SetTail(purple_worm_tail, 1.d3()); // 1-3
        E.Weight = Weight.FromUnits(200000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 15, DEX: 9, CON: 16, INT: 2, WIS: 8, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.slippery);
        E.SetEngulf(Strikes.venom, A => A.HarmEntity(Elements.physical, 1.d10()));
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d6()); // +2
        E.AddAttack(AttackTypes.engulf, Elements.physical, 2.d8(), K =>
        {
          K.Apply.EngulfEntity(Engulfments.swallowed, 1.d8() + 2);
        });
        E.SetCorpse(Chance.Always);
      });

      purple_worm_tail = AddEntity(Kinds.worm, null, "purple worm tail", E =>
      {
        E.Glyph = Glyphs.purple_worm_tail;
        E.Level = 24;
        E.Challenge = 38;
        E.Difficulty = 1;
        E.Frequency = 0;
        E.IsTail = true;
        E.Defence = new Defence(D: 23, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_5;
        E.Size = Size.Gargantuan;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(200000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: false,
          Mind: false,
          Voice: false,
          Eyes: false,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 8, DEX: 9, CON: 14, INT: 1, WIS: 1, CHA: 1);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.SetCorpse(Chance.Never);
      });

      rot_worm = AddEntity(Kinds.worm, null, "rot worm", E =>
      {
        E.Glyph = Glyphs.rot_worm;
        E.Sonic = Sonics.slime;
        E.Level = 1;
        E.Challenge = 10;
        E.Difficulty = 2;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 6, DEX: 9, CON: 6, INT: 2, WIS: 6, CHA: 3);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2() + 2); // -2
        E.SetCorpse(Chance.OneIn3);
      });

      tunnel_worm = AddEntity(Kinds.worm, null, "tunnel worm", E =>
      {
        E.Glyph = Glyphs.tunnel_worm;
        E.Sonic = Sonics.slime;
        E.Level = 13;
        E.Challenge = 207;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 12, DEX: 10, CON: 12, INT: 2, WIS: 9, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid);
        E.Startup.SetTalent(Properties.tunnelling, Properties.slippery);
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d4()); // +1
        E.SetCorpse(Chance.OneIn3);
      });

      giant_slug = AddEntity(Kinds.worm, null, "giant slug", E =>
      {
        E.Glyph = Glyphs.giant_slug;
        E.Sonic = Sonics.slime;
        E.Level = 0;
        E.Challenge = 3;
        E.Difficulty = 1;
        E.Frequency = 3;
        E.Defence = new Defence(D: 10, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(5000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: false,
          Eyes: true,
          Ears: false,
          Hands: false,
          Limbs: false,
          Feet: false,
          Thermal: false,
          Blood: false,
          Mounted: true,
          Amorphous: true
        );
        E.LifeAdvancement.Set(1.d4());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 6, DEX: 8, CON: 12, INT: 3, WIS: 4, CHA: 3);
        E.LimitForm.Set(STR: 15, DEX: 15, CON: 15, INT: 15, WIS: 15, CHA: 15);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.acid);
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.One);
        E.AddAttack(AttackTypes.spit, Elements.acid, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.acid, Dice.Fixed(3));
          K.Apply.HarmEntity(Elements.acid, Dice.One);
        });
        E.Conveyance.MinorResistance(Elements.poison);
        E.Conveyance.ApplyTransient(Properties.slowness, 4.d4()); // you feel sluggish!
        E.SetCorpse(Chance.OneIn2);
      });
      #endregion

      #region wraith.
      barrow_wight = AddEntity(Kinds.wraith, null, "barrow wight", E =>
      {
        E.Glyph = Glyphs.barrow_wight;
        E.Sonic = Sonics.moan;
        E.Level = 10;
        E.Challenge = 208;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(16000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(24, 1.d4());
        E.DefaultForm.Set(STR: 6, DEX: 16, CON: 16, INT: 12, WIS: 14, CHA: 15);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.necromancy, Skills.enchantment, Skills.literacy);
        E.Startup.SetTalent(Properties.vitality, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.AddGrimoire(Dice.One, Spells.drain_life);
        E.Startup.AddGrimoire(Dice.One, Spells.fear);
        E.AddAttack(AttackTypes.touch, Elements.physical, 2.d4(), K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 3.d4());
        });
        E.SetCorpse(Chance.Never);
      });

      nazgul = AddEntity(Kinds.wraith, null, "nazgul", E =>
      {
        E.Glyph = Glyphs.nazgul;
        E.Sonic = Sonics.moan;
        E.Level = 22;
        E.Challenge = 664;
        E.Difficulty = 24;
        E.Frequency = 1;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0); // +4 from dex = 26.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(14500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 7, DEX: 18, CON: 18, INT: 12, WIS: 13, CHA: 17);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality, Properties.life_regeneration);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.weapon, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 4.d4());
        });
        E.AddAttack(AttackTypes.gaze, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.psychic, 2.d4() + 4)
           .SetBeholds();
          K.Apply.WhenTargetKind(Kinds.Living, T => T.ApplyTransient(Properties.fear, 3.d4()));
        });
        E.AddAttack(AttackTypes.shriek, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.wail, Dice.Zero)
           .SetTerminates(); // zero range so don't strike your steed.
          K.Apply.Alert(3.d6() + 3);
          K.Apply.Shout(Dice.Fixed(10), A => A.WhenTargetKind(Kinds.Living, T => T.ApplyTransient(Properties.silence, 6.d4() + 6)));
        });
        E.SetCorpse(Chance.Never);
      });

      wight = AddEntity(Kinds.wraith, null, "wight", E =>
      {
        E.Glyph = Glyphs.wight;
        E.Sonic = Sonics.moan;
        E.Level = 14;
        E.Challenge = 326;
        E.Difficulty = 17;
        E.Frequency = 1;
        E.Defence = new Defence(D: 19, P: +0, S: +0, B: +0); // +2 from dex = 21.
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 14, CON: 15, INT: 10, WIS: 11, CHA: 13);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4(), K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d4());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4(), K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 2.d4());
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d4());
        E.SetCorpse(Chance.Never);
      });

      wraith = AddEntity(Kinds.wraith, null, "wraith", E =>
      {
        E.Glyph = Glyphs.wraith;
        E.Sonic = Sonics.moan;
        E.Level = 5;
        E.Challenge = 84;
        E.Difficulty = 7;
        E.Frequency = 2;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +3
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S3_7;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(0);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 5, DEX: 16, CON: 14, INT: 10, WIS: 10, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep, Elements.petrify);
        E.AddAttack(AttackTypes.touch, Elements.physical, Dice.Zero, K =>
        {
          K.SetCast().Strike(Strikes.spirit, Dice.One);
          K.Apply.DrainLife(Elements.drain, 1.d6());
        });
        E.Conveyance.HarmEntity(Elements.necrotic, 1.d8());
        E.Conveyance.WhenProbability(Table =>
        {
          Table.Add(3, T => T.Nothing());
          Table.Add(1, T =>
          {
            T.HarmEntity(Elements.necrotic, Dice.Four, Modifier.Plus4);
            T.DiminishEntity(Dice.Four, Modifier.Plus4);
          });
          Table.Add(1, T =>
          {
            T.HealEntity(Dice.Fixed(+4), Modifier.FromRank(+4));
            T.EnergiseEntity(Dice.Fixed(+4), Modifier.FromRank(+4));
          });
          Table.Add(5, T => T.GainLevel(Dice.One, false));
        });
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region xan.
      spark_bug = AddEntity(Kinds.xan, null, "spark bug", E =>
      {
        E.Glyph = Glyphs.spark_bug;
        E.Sonic = Sonics.electricity;
        E.Level = 11;
        E.Challenge = 199;
        E.Difficulty = 13;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(150);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 10, DEX: 12, CON: 10, INT: 5, WIS: 7, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.shock, Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.shock, 1.d10());
        E.AddDyingRetaliation(Chance.Always, AttackTypes.blast, R =>
        {
          R.SetCast().Explosion(Explosions.electric, Dice.Zero);
          R.Apply.HarmEntity(Elements.shock, 6.d6());
        });
        E.SetCorpse(Chance.Never);
      });

      arc_bug = AddEntity(Kinds.xan, null, "arc bug", E =>
      {
        E.Glyph = Glyphs.arc_bug;
        E.Sonic = Sonics.scuttle;
        E.Level = 16;
        E.Challenge = 525;
        E.Difficulty = 18;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(150);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 14, DEX: 12, CON: 10, INT: 5, WIS: 7, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.shock, Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.shock, 2.d10(), A => // +2 from str.
        {
          A.Apply.ApplyTransient(Properties.blindness, 4.d6());
        });
        E.AddLivingRetaliation(Chance.Always, AttackTypes.bite, R =>
        {
          R.SetCast().Explosion(Explosions.electric, Dice.Zero);
          R.Apply.HarmEntity(Elements.shock, 6.d6());
        });
        E.SetCorpse(Chance.Never);
      });

      lightning_bug = AddEntity(Kinds.xan, null, "lightning bug", E =>
      {
        E.Glyph = Glyphs.lightning_bug;
        E.Sonic = Sonics.electricity;
        E.Level = 21;
        E.Challenge = 749;
        E.Difficulty = 23;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.herbivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(150);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 18, DEX: 12, CON: 11, INT: 5, WIS: 7, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.shock, Elements.poison);
        E.AddAttack(AttackTypes.bite, Elements.physical, 3.d10(), A => // +4 from str.
        {
          A.SetCast().Explosion(Explosions.electric, Dice.Zero);
          A.Apply.HarmEntity(Elements.shock, 6.d6());
        });
        E.SetCorpse(Chance.Never);
      });

      xan = AddEntity(Kinds.xan, null, "xan", E =>
      {
        E.Glyph = Glyphs.xan;
        E.Sonic = Sonics.scuttle;
        E.Level = 10;
        E.Challenge = 167;
        E.Difficulty = 12;
        E.Frequency = 3;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0); // +3
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Tiny;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(3000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: false,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 16, CON: 12, INT: 5, WIS: 8, CHA: 4);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.Startup.SetResistance(Elements.poison);
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d4(), K =>
        {
          K.Apply.ApplyTransient(Properties.slowness, 1.d4());
        });
        E.AddAttack(AttackTypes.sting, Elements.physical, 1.d4(), K =>
        {
          K.Apply.ApplyTransient(Properties.slowness, 1.d4());
        });
        E.Conveyance.MajorResistance(Elements.poison);
        E.Conveyance.Macro(Poisoned(Attributes.strength));
        E.SetCorpse(Chance.OneIn4);
      });
      #endregion

      #region beast.
      monkey = AddDomesticEntity(Kinds.beast, null, "monkey", E =>
      {
        E.Glyph = Glyphs.monkey;
        E.Sonic = Sonics.gibber;
        E.Level = 2;
        E.Challenge = 7;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(1000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 15, CON: 10, INT: 8, WIS: 11, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.StealCarriedItem(Properties.fear, 6.d6() + 6, Stocks.food);
        });
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d3());
        E.SetCorpse(Chance.Always);
      });

      ape = AddDomesticEntity(Kinds.beast, null, "ape", E =>
      {
        E.Glyph = Glyphs.ape;
        E.Sonic = Sonics.gibber;
        E.Level = 4;
        E.Challenge = 17;
        E.Difficulty = 6;
        E.Frequency = 2;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +1 from DEX.
        E.SetDiet(Diets.omnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(11000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 13, CON: 12, INT: 6, WIS: 10, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d5()); // +1 from STR.
        E.SetCorpse(Chance.Always);
      });

      carnivorous_ape = AddDomesticEntity(Kinds.beast, null, "carnivorous ape", E =>
      {
        E.Glyph = Glyphs.carnivorous_ape;
        E.Sonic = Sonics.gibber;
        E.Level = 6;
        E.Challenge = 40;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +1 from DEX.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(40000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 13, CON: 14, INT: 8, WIS: 12, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3()); // +3 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3()); // +3 from str.
        E.AddAttack(AttackTypes.grapple, Elements.physical, 1.d5(), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.SetCorpse(Chance.Always);
      });

      minotaur = AddEntity(Kinds.beast, null, "minotaur", E =>
      {
        E.Glyph = Glyphs.minotaur;
        E.Sonic = Sonics.growl;
        E.Level = 15;
        E.Challenge = 414;
        E.Difficulty = 17;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(45000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 11, CON: 16, INT: 6, WIS: 16, CHA: 9);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.berserking);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d10()); // +4 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d10());
        E.AddAttack(AttackTypes.butt, Elements.physical, 1.d8(), A =>
        {
          A.Apply.Knockback();
          A.Apply.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.stunned, 1.d4() + 1));
        });
        E.SetCorpse(Chance.Always);
      });

      jabberwock = AddEntity(Kinds.beast, null, "jabberwock", E =>
      {
        E.Glyph = Glyphs.jabberwock;
        E.Level = 25;
        E.Challenge = 938;
        E.Difficulty = 28;
        E.Frequency = 1;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(150000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 21, DEX: 16, CON: 18, INT: 12, WIS: 14, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d10());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d10()); // +7 from str.
        E.SetCorpse(Chance.Always);
      });

      vorpal_jabberwock = AddEntity(Kinds.beast, null, "vorpal jabberwock", E =>
      {
        E.Glyph = Glyphs.vorpal_jabberwock;
        E.Level = 35;
        E.Challenge = 1335;
        E.Difficulty = 36;
        E.Frequency = 1;
        E.Defence = new Defence(D: 26, P: +0, S: +0, B: +0); // +2 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(250000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: true,
          Amorphous: false
        );
        E.LifeAdvancement.Set(64, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 24, DEX: 18, CON: 20, INT: 12, WIS: 14, CHA: 11);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.flight);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d7()); // +5 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d7());
        E.AddAttack(AttackTypes.bite, Elements.physical, 4.d7(), D =>
        {
          D.Apply.WhenChance(Chance.OneIn4, T => T.DecapitateEntity(Anatomies.head, Strikes.sever));
        });
        E.SetCorpse(Chance.Always);
      });

      owlbear = AddEntity(Kinds.beast, null, "owlbear", E =>
      {
        E.Glyph = Glyphs.owlbear;
        E.Sonic = Sonics.growl;
        E.Level = 7;
        E.Challenge = 72;
        E.Difficulty = 9;
        E.Frequency = 3;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0); // +1 from dex = 17.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(60000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 20, DEX: 12, CON: 17, INT: 3, WIS: 12, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2()); // +5 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.grapple, Elements.physical, 1.d8(), A =>
        {
          A.Apply.GrappleEntity(2.d6());
        });
        E.SetCorpse(Chance.Always);
      });

      sasquatch = AddEntity(Kinds.beast, null, "sasquatch", E =>
      {
        E.Glyph = Glyphs.sasquatch;
        E.Sonic = Sonics.growl;
        E.Level = 15;
        E.Challenge = 395;
        E.Difficulty = 17;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // +1 from dex = 14.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(70000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 13, CON: 16, INT: 8, WIS: 12, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.see_invisible);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d7()); // +4 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d7());
        E.AddAttack(AttackTypes.kick, Elements.physical, 5.d4());
        E.SetCorpse(Chance.Always);
      });

      yeti = AddEntity(Kinds.beast, null, "yeti", E =>
      {
        E.Glyph = Glyphs.yeti;
        E.Sonic = Sonics.growl;
        E.Level = 8;
        E.Challenge = 76;
        E.Difficulty = 10;
        E.Frequency = 2;
        E.Defence = new Defence(D: 20, P: +0, S: +0, B: +0); // +1 from dex = 21.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(42000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 13, CON: 16, INT: 8, WIS: 12, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetResistance(Elements.cold);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3()); // +4 from str.
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d3());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d2());
        E.Conveyance.MajorResistance(Elements.cold);
        E.SetCorpse(Chance.Always);
      });

      zruty = AddEntity(Kinds.beast, null, "zruty", E =>
      {
        E.Glyph = Glyphs.zruty;
        E.Sonic = Sonics.growl;
        E.Level = 12;
        E.Challenge = 241;
        E.Difficulty = 15;
        E.Frequency = 2;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0); // -1 from dex.
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S2_0;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(20000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 8, CON: 18, INT: 8, WIS: 9, CHA: 10);
        E.LimitForm.Set(STR: 30, DEX: 20, CON: 30, INT: 25, WIS: 25, CHA: 25);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent();
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d5());
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 2.d8());// +2 from str.
        E.SetCorpse(Chance.Always);
      });

      bugbear = AddEntity(Kinds.beast, null, "bugbear", E =>
      {
        E.Glyph = Glyphs.bugbear;
        E.Sonic = Sonics.growl;
        E.Level = 17;
        E.Challenge = 466;
        E.Difficulty = 19;
        E.Frequency = 1;
        E.Defence = new Defence(D: 18, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_3;
        E.Size = Size.Large;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(22000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: true,
          Blood: true,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 18, DEX: 11, CON: 14, INT: 9, WIS: 11, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.light_armour, Skills.medium_armour, Skills.heavy_armour);
        E.Startup.SetTalent(Properties.dark_vision);
        E.Startup.Loot.AddKit(Chance.OneIn2, Items.chain_mail);
        E.Startup.Loot.AddKit(Chance.OneIn3, Items.leather_cloak);
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6()); // +4 from STR.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6());
        E.AddAttack(AttackTypes.weapon, Elements.physical, 1.d6());
        E.SetCorpse(Chance.Always);
      });

      treant = AddEntity(Kinds.beast, null, "treant", E =>
      {
        E.Glyph = Glyphs.treant;
        E.Sonic = Sonics.creak;
        E.Level = 27;
        E.Challenge = 754;
        E.Difficulty = 26;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +4, S: +0, B: +4);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(150000);
        E.Figure.Set
        (
          Material: Materials.vegetable,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true, // for throwing rocks.
          Limbs: true,
          Feet: false,
          Thermal: true,
          Blood: false, // sap is not blood.
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 23, DEX: 8, CON: 21, INT: 12, WIS: 16, CHA: 12);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.SetConcealment(Codex.Barriers.tree);
        E.Chemistry.SetWeakness(Elements.fire);
        E.Startup.SetSkill(Qualifications.proficient, Skills.sling);
        E.Startup.SetTalent(Properties.searching, Properties.see_invisible);
        //E.Startup.Loot.AddKit(Chance.Always, 5.d5() + 5, Items.rock);
        E.AddAttack(AttackTypes.punch, Elements.physical, 3.d4(), A =>
        {
          A.Apply.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.stunned, 1.d4() + 1));
        }); // +5
        E.AddAttack(AttackTypes.punch, Elements.physical, 3.d4(), A =>
        {
          A.Apply.WhenChance(Chance.OneIn2, T => T.ApplyTransient(Properties.stunned, 1.d4() + 1));
        }); // +5
        E.SetCorpse(Chance.Never);
      });

      xorn = AddEntity(Kinds.beast, null, "xorn", E =>
      {
        E.Glyph = Glyphs.xorn;
        E.Sonic = Sonics.snarl;
        E.Level = 8;
        E.Challenge = 91;
        E.Difficulty = 11;
        E.Frequency = 3;
        E.Defence = new Defence(D: 22, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.lithivore);
        E.Speed = Speed.S2_5;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 11, CON: 18, INT: 7, WIS: 9, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 25, CON: 30, INT: 15, WIS: 20, CHA: 15);
        E.SetGender(Genders.neuter);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.phasing);
        E.Startup.SetResistance(Elements.cold, Elements.fire, Elements.petrify);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d2());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d17());// +3 from str.
        E.Conveyance.WhenChance(Chance.OneIn2, T => T.WhenProbability(Table =>
        {
          Table.Add(1, A => A.MajorResistance(Elements.fire));
          Table.Add(1, A => A.MajorResistance(Elements.cold));
        }));
        E.SetCorpse(Chance.OneIn3);
      });
      #endregion

      #region zombie.
      dwarf_zombie = AddEntity(Kinds.zombie, Races.dwarf, "dwarf zombie", E =>
      {
        E.Glyph = Glyphs.dwarf_zombie;
        E.Sonic = Sonics.groan;
        E.Level = 7;
        E.Challenge = 53;
        E.Difficulty = 8;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // -2
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(12000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 7, CON: 7, INT: 4, WIS: 3, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 4.d4()); // +2
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      elf_zombie = AddEntity(Kinds.zombie, Races.elf, "elf zombie", E =>
      {
        E.Glyph = Glyphs.elf_zombie;
        E.Sonic = Sonics.groan;
        E.Level = 11;
        E.Challenge = 134;
        E.Difficulty = 12;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(9500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 8, CON: 6, INT: 5, WIS: 3, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d6()); // +3
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      ettin_zombie = AddEntity(Kinds.zombie, Races.ettin, "ettin zombie", E =>
      {
        E.Glyph = Glyphs.ettin_zombie;
        E.Sonic = Sonics.groan;
        E.Level = 12;
        E.Challenge = 188;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // -2
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(90000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 6, CON: 9, INT: 3, WIS: 2, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 10.d3()); // +3
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      ghast = AddEntity(Kinds.zombie, null, "ghast", E =>
      {
        E.Glyph = Glyphs.ghast;
        E.Sonic = Sonics.groan;
        E.Level = 4;
        E.Challenge = 21;
        E.Difficulty = 6;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_3;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 8, CON: 7, INT: 6, WIS: 4, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.ApplyTransient(Properties.paralysis, 1.d2());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.bite, Elements.physical, 1.d6());
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      ghoul = AddEntity(Kinds.zombie, null, "ghoul", E =>  // NOTE: it's not 'human ghoul' or 'elf ghoul', so race is not relevant.
      {
        E.Glyph = Glyphs.ghoul;
        E.Sonic = Sonics.groan;
        E.Level = 12;
        E.Challenge = 221;
        E.Difficulty = 14;
        E.Frequency = 1;
        E.Defence = new Defence(D: 17, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S4_5;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(9000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 11, DEX: 8, CON: 7, INT: 6, WIS: 5, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.ApplyTransient(Properties.paralysis, 2.d3());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d4());
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      ghoul_mage = AddEntity(Kinds.zombie, null, "ghoul mage", E =>
      {
        E.Glyph = Glyphs.ghoul_mage;
        E.Sonic = Sonics.groan;
        E.Level = 17;
        E.Challenge = 436;
        E.Difficulty = 20;
        E.Frequency = 1;
        E.Defence = new Defence(D: 16, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(8000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 10, DEX: 11, CON: 7, INT: 16, WIS: 18, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.necromancy, Skills.enchantment, Skills.evocation, Skills.literacy, Skills.transmutation);
        E.Startup.SetTalent(Properties.dark_vision, Properties.tunnelling, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.Startup.Loot.AddKit(Chance.OneIn3, 1.d2(), Stocks.scroll);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.book);
        E.Startup.Loot.AddKit(Chance.OneIn10, Dice.One, Stocks.wand);
        E.Startup.AddGrimoire(1.d4(), Spells.drain_life, Spells.sleep, Spells.slow, Spells.acid_stream, Spells.toxic_spray);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4(), K =>
        {
          K.Apply.ApplyTransient(Properties.paralysis, 2.d3());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4(), K =>
        {
          K.Apply.ApplyTransient(Properties.paralysis, 2.d3());
        });
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      ghoul_queen = AddEntity(Kinds.zombie, null, "ghoul queen", E =>
      {
        E.Glyph = Glyphs.ghoul_queen;
        E.Sonic = Sonics.groan;
        E.Level = 23;
        E.Challenge = 820;
        E.Difficulty = 23;
        E.Frequency = 1;
        E.Defence = new Defence(D: 25, P: +0, S: +0, B: +0); // +1
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S3_7;
        E.Size = Size.Small;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(10000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 18, CON: 11, INT: 19, WIS: 19, CHA: 21);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient, Skills.necromancy, Skills.enchantment, Skills.evocation, Skills.literacy, Skills.transmutation);
        E.Startup.SetTalent(Properties.dark_vision, Properties.tunnelling, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.ApplyTransient(Properties.paralysis, 1.d3());
        });
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.AddAttack(AttackTypes.summon, Elements.physical, Dice.Zero, A =>
        {
          A.SetCast().Strike(Strikes.holy, Dice.Fixed(8));
          A.Apply.SummonEntity(1.d3(), ghoul);
        });
        E.Startup.AddGrimoire(Dice.Fixed(4), Spells.drain_life, Spells.sleep, Spells.slow, Spells.acid_stream, Spells.toxic_spray, Spells.animate_dead);
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      giant_zombie = AddEntity(Kinds.zombie, Races.giant, "giant zombie", E =>
      {
        E.Glyph = Glyphs.giant_zombie;
        E.Sonic = Sonics.groan;
        E.Level = 13;
        E.Challenge = 203;
        E.Difficulty = 15;
        E.Frequency = 1;
        E.Defence = new Defence(D: 14, P: +0, S: +0, B: +0); // -2
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Huge;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(100000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(32, 1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 16, DEX: 6, CON: 10, INT: 3, WIS: 2, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 12.d3()); // +3
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      gnome_zombie = AddEntity(Kinds.zombie, Races.gnome, "gnome zombie", E =>
      {
        E.Glyph = Glyphs.gnome_zombie;
        E.Sonic = Sonics.groan;
        E.Level = 2;
        E.Challenge = 6;
        E.Difficulty = 4;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(6000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 14, DEX: 8, CON: 7, INT: 5, WIS: 3, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 2.d5()); // +2
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      gug = AddEntity(Kinds.zombie, null, "gug", E =>
      {
        //E.Description = "Gugs are large, black-furred beasts with vertically-opening fanged jaws. Their two eyes protrude from either side of their head, and their limbs bifurcate at the elbows, giving them four separate forearms. They are worshippers of the Great Ones, the gods of Earth who reside in Kadath. Gugs are estimated to reach around sixteen feet in heights and weigh in at nearly 2,000 pounds.";
        E.Glyph = Glyphs.gug;
        E.Sonic = Sonics.groan;
        E.Level = 21;
        E.Challenge = 667;
        E.Difficulty = 24;
        E.Frequency = 1;
        E.Defence = new Defence(D: 15, P: +0, S: +0, B: +0);
        E.SetDiet(Diets.carnivore);
        E.Speed = Speed.S5_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(18000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: true,
          Voice: true,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 11, CON: 13, INT: 4, WIS: 3, CHA: 7);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.neuter);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.tunnelling, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 7.d3());
        E.AddAttack(AttackTypes.claw, Elements.physical, 7.d3()); // +2
        E.AddAttack(AttackTypes.bite, Elements.physical, Dice.Zero, K =>
        {
          K.Apply.ApplyTransient(Properties.paralysis, 3.d6());
        });
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      human_zombie = AddEntity(Kinds.zombie, Races.human, "human zombie", E =>
      {
        E.Glyph = Glyphs.human_zombie;
        E.Sonic = Sonics.groan;
        E.Level = 9;
        E.Challenge = 87;
        E.Difficulty = 10;
        E.Frequency = 1;
        E.Defence = new Defence(D: 11, P: +0, S: +0, B: +0); // -1
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(13000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 13, DEX: 8, CON: 6, INT: 5, WIS: 3, CHA: 8);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d5()); // +1
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      kobold_zombie = AddEntity(Kinds.zombie, Races.kobold, "kobold zombie", E =>
      {
        E.Glyph = Glyphs.kobold_zombie;
        E.Sonic = Sonics.groan;
        E.Level = 0;
        E.Challenge = 1;
        E.Difficulty = 1;
        E.Frequency = 1;
        E.Defence = new Defence(D: 12, P: +0, S: +0, B: +0); // -2
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Small;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(4000);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d4());
        E.ManaAdvancement.Set(Dice.Zero);
        E.DefaultForm.Set(STR: 11, DEX: 7, CON: 6, INT: 3, WIS: 2, CHA: 5);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 1.d4());
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      orc_zombie = AddEntity(Kinds.zombie, Races.orc, "orc zombie", E =>
      {
        E.Glyph = Glyphs.orc_zombie;
        E.Sonic = Sonics.groan;
        E.Level = 9;
        E.Challenge = 78;
        E.Difficulty = 10;
        E.Frequency = 1;
        E.Defence = new Defence(D: 13, P: +0, S: +0, B: +0); // -2
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Attack;
        E.Weight = Weight.FromUnits(8500);
        E.Figure.Set
        (
          Material: Materials.animal,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: true,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 15, DEX: 7, CON: 8, INT: 4, WIS: 3, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed();
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep);
        E.AddAttack(AttackTypes.claw, Elements.physical, 3.d6()); // +2
        E.Conveyance.Macro(Tainted);
        E.SetCorpse(Chance.Always);
      });

      skeleton = AddEntity(Kinds.zombie, null, "skeleton", E => // NOTE: it's not 'human skeleton' or 'elf skeleton', so race is not relevant.
      {
        E.Glyph = Glyphs.skeleton;
        E.Level = 24;
        E.Challenge = 772;
        E.Difficulty = 26;
        E.Frequency = 1;
        E.Defence = NewBoneDefence(20);
        E.SetDiet(Diets.inediate);
        E.Speed = Speed.S2_0;
        E.Size = Size.Medium;
        E.Strategy = Strategy.Defend;
        E.Weight = Weight.FromUnits(3000);
        E.Figure.Set
        (
          Material: Materials.bone,
          Head: true,
          Mind: false,
          Voice: false,
          Eyes: true,
          Ears: false,
          Hands: true,
          Limbs: true,
          Feet: true,
          Thermal: false,
          Blood: false,
          Mounted: false,
          Amorphous: false
        );
        E.LifeAdvancement.Set(1.d8());
        E.ManaAdvancement.Set(1.d4());
        E.DefaultForm.Set(STR: 17, DEX: 10, CON: 6, INT: 3, WIS: 2, CHA: 6);
        E.LimitForm.Set(STR: 30, DEX: 30, CON: 30, INT: 30, WIS: 30, CHA: 30);
        E.SetGender(Genders.male, Genders.female);
        E.SetGreed(SentientGreed);
        E.Chemistry.SetVulnerability();
        E.Startup.SetSkill(Qualifications.proficient);
        E.Startup.SetTalent(Properties.dark_vision, Properties.vitality);
        E.Startup.SetResistance(Elements.cold, Elements.poison, Elements.drain, Elements.sleep, Elements.petrify);
        E.Startup.Loot.AddKit(Chance.OneIn100, Items.brass_bugle); // doot doot.
        E.AddAttack(AttackTypes.weapon, Elements.physical, 2.d10()); // +3 from str.
        E.AddAttack(AttackTypes.touch, Elements.physical, 1.d6(), K =>
        {
          K.Apply.ApplyTransient(Properties.slowness, 1.d6());
        });
        E.SetCorpse(Chance.Never);
      });
      #endregion

      CodexRecruiter.Enrol(() =>
      {
        var RaceItemArrayDictionary = Items.List.Where(I => I.OriginRace != null && I.Appearance != null).GroupBy(I => I.OriginRace).ToDictionary(K => K.Key, V => V.ToArray());

        foreach (var Entity in Register.List.Where(E => E.Race != null))
        {
          var ItemArray = RaceItemArrayDictionary.GetValueOrDefault(Entity.Race);
          if (ItemArray != null)
            Register.Edit(Entity).Startup.SetRecognition(ItemArray);
        }
      });

      #region Compatibility
      // replaced grey dragons with gold dragons.
      Register.Alias(baby_gold_dragon, "baby grey dragon");
      Register.Alias(young_gold_dragon, "young grey dragon");
      Register.Alias(adult_gold_dragon, "adult grey dragon");
      Register.Alias(ancient_gold_dragon, "ancient grey dragon");

      // young/ancient dragon patch.
      Register.Alias(adult_black_dragon, "black dragon");
      Register.Alias(adult_blue_dragon, "blue dragon");
      Register.Alias(adult_deep_dragon, "deep dragon");
      Register.Alias(adult_gold_dragon, "grey dragon");
      Register.Alias(adult_green_dragon, "green dragon");
      Register.Alias(adult_orange_dragon, "orange dragon");
      Register.Alias(adult_red_dragon, "red dragon");
      Register.Alias(adult_shimmering_dragon, "shimmering dragon");
      Register.Alias(adult_silver_dragon, "silver dragon");
      Register.Alias(adult_white_dragon, "white dragon");
      Register.Alias(adult_yellow_dragon, "yellow dragon");

      // mold -> mould spelling patch.
      Register.Alias(mouldy_pudding, "moldy pudding");
      Register.Alias(red_mould, "red mold");
      Register.Alias(black_mould, "black mold");
      Register.Alias(brown_mould, "brown mold");
      Register.Alias(disgusting_mould, "disgusting mold");
      Register.Alias(green_mould, "green mold");
      Register.Alias(yellow_mould, "yellow mold");

      // elemental mage patch.
      Register.Alias(frost_binder, "froster");
      Register.Alias(flame_binder, "igniter");
      Register.Alias(frost_maker, "ice mage");
      Register.Alias(flame_maker, "flame mage");
      Register.Alias(earth_maker, "earth mage");
      Register.Alias(water_maker, "water mage");
      Register.Alias(flame_sphere, "flaming sphere");
      Register.Alias(shock_sphere, "shocking sphere");
      Register.Alias(frost_sphere, "freezing sphere");

      // non-generically named uniques.
      Register.Alias(Archpriest_Avvakrum, "Arch Priest");
      Register.Alias(Archmage_Dirachi, "High Ice Mage");
      Register.Alias(Archmage_Flaynn, "High Flame Mage");
      Register.Alias(Lycaon, "High Lycanthrope");
      Register.Alias(Guru_Quilion, "Grand Master");
      Register.Alias(Assassin_Mortimer, "Master Assassin");
      Register.Alias(Guildmaster_Vaughn, "Master of Thieves");
      Register.Alias(Metamorphius, "Master Shifter");

      // renamed to correct spelling of doppelgänger.
      Register.Alias(doppelganger, "doppelganger");

      // renamed due to introduced player race.
      Register.Alias(cave_troll, "troll");

      // renamed due to introduced player class.
      Register.Alias(occultist, "necromancer");
      Register.Alias(tracker, "hunter");
      Register.Alias(dryad, "druid");

      // naming uncertainty.
      Register.Alias(holy_cleric, "altar priest", "cleric");

      // replaced because having an iron golem is enough.
      Register.Alias(mithril_golem, "steel golem");

      // statue gargoyle tiles were not distinct enough and showing 'statue gargoyle status' when concealed was a bit bad.
      Register.Alias(gargoyle, "statue gargoyle");

      // renamed uniques.
      Register.Alias(Deliarne, "Dark One");
      Register.Alias(Huhetotl, "Minion of Huhetotl");
      Register.Alias(Neferet, "Neferet the Green");
      Register.Alias(Kaloi_Thrym, "Dark Lord");
      #endregion
    }
#endif

    public readonly Entity abbot;
    public readonly Entity acid_blob;
    public readonly Entity acid_worm;
    public readonly Entity acolyte;
    public readonly Entity air_elemental;
    public readonly Entity animate_object;
    public readonly Entity artisan;
    public readonly Entity holy_cleric;
    public readonly Entity dark_cleric;
    public readonly Entity witch;
    public readonly Entity dryad;
    public readonly Entity angel;
    public readonly Entity archangel;
    public readonly Entity ape;
    public readonly Entity apprentice;
    public readonly Entity arc_bug;
    public readonly Entity archlich;
    public readonly Entity archon;
    public readonly Entity asphynx;
    public readonly Entity assassin_bug;
    public readonly Entity astral_deva;
    public readonly Entity athol;
    public readonly Entity attendant;
    public readonly Entity babau;
    public readonly Entity baby_crocodile;
    public readonly Entity baby_long_worm;
    public readonly Entity baby_purple_worm;

    public readonly Entity baby_black_dragon;
    public readonly Entity baby_blue_dragon;
    public readonly Entity baby_deep_dragon;
    public readonly Entity baby_gold_dragon;
    public readonly Entity baby_green_dragon;
    public readonly Entity baby_orange_dragon;
    public readonly Entity baby_red_dragon;
    public readonly Entity baby_shimmering_dragon;
    public readonly Entity baby_silver_dragon;
    public readonly Entity baby_white_dragon;
    public readonly Entity baby_yellow_dragon;

    public readonly Entity young_black_dragon;
    public readonly Entity young_blue_dragon;
    public readonly Entity young_deep_dragon;
    public readonly Entity young_gold_dragon;
    public readonly Entity young_green_dragon;
    public readonly Entity young_orange_dragon;
    public readonly Entity young_red_dragon;
    public readonly Entity young_shimmering_dragon;
    public readonly Entity young_silver_dragon;
    public readonly Entity young_white_dragon;
    public readonly Entity young_yellow_dragon;

    public readonly Entity adult_black_dragon;
    public readonly Entity adult_blue_dragon;
    public readonly Entity adult_deep_dragon;
    public readonly Entity adult_gold_dragon;
    public readonly Entity adult_green_dragon;
    public readonly Entity adult_orange_dragon;
    public readonly Entity adult_red_dragon;
    public readonly Entity adult_shimmering_dragon;
    public readonly Entity adult_silver_dragon;
    public readonly Entity adult_white_dragon;
    public readonly Entity adult_yellow_dragon;

    public readonly Entity ancient_black_dragon;
    public readonly Entity ancient_blue_dragon;
    public readonly Entity ancient_deep_dragon;
    public readonly Entity ancient_gold_dragon;
    public readonly Entity ancient_green_dragon;
    public readonly Entity ancient_orange_dragon;
    public readonly Entity ancient_red_dragon;
    public readonly Entity ancient_shimmering_dragon;
    public readonly Entity ancient_silver_dragon;
    public readonly Entity ancient_white_dragon;
    public readonly Entity ancient_yellow_dragon;

    public readonly Entity bad_egg;
    public readonly Entity balrog;
    public readonly Entity baluchitherium;
    public readonly Entity barbed_devil;
    public readonly Entity barking_spider;
    public readonly Entity barlgura;
    public readonly Entity barrow_wight;
    public readonly Entity basilisk;
    public readonly Entity bat;
    public readonly Entity bearded_devil;
    public readonly Entity beholder;
    public readonly Entity black_light;
    public readonly Entity black_marketeer;
    public readonly Entity black_mould;
    public readonly Entity black_naga;
    public readonly Entity black_naga_hatchling;
    public readonly Entity black_pudding;
    public readonly Entity black_rat;
    public readonly Entity black_troll;
    public readonly Entity black_unicorn;
    public readonly Entity black_wasp;
    public readonly Entity blinking_eye;
    public readonly Entity blood_imp;
    public readonly Entity bloodshot_eye;
    public readonly Entity bloodworm;
    public readonly Entity blue_jelly;
    public readonly Entity bone_devil;
    public readonly Entity brown_mould;
    public readonly Entity brown_pudding;
    public readonly Entity brownie;
    public readonly Entity bugbear;
    public readonly Entity bull;
    public readonly Entity burbling_blob;
    public readonly Entity byakhee;
    public readonly Entity carnivorous_ape;
    public readonly Entity carrion_crawler;
    public readonly Entity caterwaul;
    public readonly Entity catoblepas;
    public readonly Entity cave_bear;
    public readonly Entity cave_spider;
    public readonly Entity centipede;
    public readonly Entity chameleon;
    public readonly Entity chasme;
    public readonly Entity chickatrice;
    public readonly Entity chicken;
    public readonly Entity chief_yeoman_warder;
    public readonly Entity chieftain;
    public readonly Entity chromatic_dragon;
    public readonly Entity clay_golem;
    public readonly Entity clear_jelly;
    public readonly Entity cobra;
    public readonly Entity cockatoo;
    public readonly Entity cockatrice;
    public readonly Entity couatl;
    public readonly Entity cow;
    public readonly Entity coyote;
    public readonly Entity crocodile;
    public readonly Entity crystal_golem;
    public readonly Entity cyclops;
    public readonly Entity dao;
    public readonly Entity death_dog;
    public readonly Entity deep_gnome;
    public readonly Entity deep_one;
    public readonly Entity deeper_one;
    public readonly Entity deepest_one;
    public readonly Entity demilich;
    public readonly Entity demon;
    public readonly Entity demon_orc;
    public readonly Entity diamond_golem;
    public readonly Entity dingo;
    public readonly Entity dingo_puppy;
    public readonly Entity disenchanter;
    public readonly Entity disintegrator;
    public readonly Entity disgusting_mould;
    public readonly Entity displacer_beast;
    public readonly Entity djinni;
    public readonly Entity dog;
    public readonly Entity doppelganger;
    public readonly Entity dragon_king;
    public readonly Entity dretch;
    public readonly Entity drow;
    public readonly Entity duergar;
    public readonly Entity dung_worm;
    public readonly Entity dust_vortex;
    public readonly Entity dwarf;
    public readonly Entity dwarf_king;
    public readonly Entity dwarf_lord;
    public readonly Entity dwarf_mummy;
    public readonly Entity dwarf_thief;
    public readonly Entity dwarf_warrior;
    public readonly Entity dwarf_zombie;
    public readonly Entity earth_elemental;
    public readonly Entity echo;
    public readonly Entity efreeti;
    public readonly Entity electric_eel;
    public readonly Entity elephant;
    public readonly Entity elf;
    public readonly Entity elf_king;
    public readonly Entity elf_lord;
    public readonly Entity elf_mummy;
    public readonly Entity elf_zombie;
    public readonly Entity embalmer;
    public readonly Entity energy_vortex;
    public readonly Entity erinys;
    public readonly Entity ettin;
    public readonly Entity ettin_mummy;
    public readonly Entity ettin_zombie;
    public readonly Entity exterminator;
    public readonly Entity fiend;
    public readonly Entity fire_ant;
    public readonly Entity fire_elemental;
    public readonly Entity fire_giant;
    public readonly Entity fire_nymph;
    public readonly Entity fire_vampire;
    public readonly Entity fire_vortex;
    public readonly Entity flame_sphere;
    public readonly Entity flesh_golem;
    public readonly Entity earth_sphere;
    public readonly Entity water_sphere;
    public readonly Entity floating_eye;
    public readonly Entity fog_cloud;
    public readonly Entity forest_centaur;
    public readonly Entity fox;
    public readonly Entity frost_sphere;
    public readonly Entity frost_giant;
    public readonly Entity gargoyle;
    public readonly Entity garter_snake;
    public readonly Entity gas_spore;
    public readonly Entity gecko;
    public readonly Entity gelatinous_cube;
    public readonly Entity genetic_engineer;
    public readonly Entity banshee;
    public readonly Entity ghast;
    public readonly Entity ghost;
    public readonly Entity ghoul;
    public readonly Entity ghoul_mage;
    public readonly Entity ghoul_queen;
    public readonly Entity giant;
    public readonly Entity giant_ant;
    public readonly Entity giant_badger;
    public readonly Entity giant_bat;
    public readonly Entity giant_beetle;
    public readonly Entity giant_cockroach;
    public readonly Entity giant_crab;
    public readonly Entity giant_eel;
    public readonly Entity giant_flea;
    public readonly Entity giant_king;
    public readonly Entity giant_louse;
    public readonly Entity giant_mimic;
    public readonly Entity giant_mummy;
    public readonly Entity giant_rat;
    public readonly Entity giant_scorpion;
    public readonly Entity giant_shoggoth;
    public readonly Entity giant_spider;
    public readonly Entity giant_tick;
    public readonly Entity giant_termite;
    public readonly Entity giant_wasp;
    public readonly Entity giant_zombie;
    public readonly Entity gibberling;
    public readonly Entity gila_monster;
    public readonly Entity glass_golem;
    public readonly Entity glass_piercer;
    public readonly Entity glowing_eye;
    public readonly Entity gnoll;
    public readonly Entity gnoll_chieftain;
    public readonly Entity gnoll_shaman;
    public readonly Entity gnoll_warrior;
    public readonly Entity gnome;
    public readonly Entity gnome_king;
    public readonly Entity gnome_lord;
    public readonly Entity gnome_mummy;
    public readonly Entity gnome_thief;
    public readonly Entity gnome_warrior;
    public readonly Entity gnome_zombie;
    public readonly Entity gnomish_wizard;
    public readonly Entity goat;
    public readonly Entity goblin;
    public readonly Entity goblin_king;
    public readonly Entity gold_golem;
    public readonly Entity golden_naga;
    public readonly Entity golden_naga_hatchling;
    public readonly Entity grey_ooze;
    public readonly Entity grey_unicorn;
    public readonly Entity great_orc;
    public readonly Entity green_elf;
    public readonly Entity green_mould;
    public readonly Entity green_slime;
    public readonly Entity gremlin;
    public readonly Entity grey_elf;
    public readonly Entity grimlock;
    public readonly Entity guard;
    public readonly Entity guardian_naga;
    public readonly Entity guardian_naga_hatchling;
    public readonly Entity gug;
    public readonly Entity guide;
    public readonly Entity gypsy;
    public readonly Entity harpy;
    public readonly Entity hell_hound;
    public readonly Entity hell_hound_pup;
    public readonly Entity hellbat;
    public readonly Entity hellcat;
    public readonly Entity hellrat;
    public readonly Entity hezrou;
    public readonly Entity high_elf;
    public readonly Entity high_priest;
    public readonly Entity hill_giant;
    public readonly Entity hill_orc;
    public readonly Entity changeling;
    public readonly Entity halfling;
    public readonly Entity hobgoblin;
    public readonly Entity homunculus;
    public readonly Entity horned_devil;
    public readonly Entity horse;
    public readonly Entity housecat;
    public readonly Entity huge_pile_of_killer_coins;
    public readonly Entity human;
    public readonly Entity human_king;
    public readonly Entity human_mummy;
    public readonly Entity human_zombie;
    public readonly Entity tracker;
    public readonly Entity hydra;
    public readonly Entity ice_devil;
    public readonly Entity ice_elemental;
    public readonly Entity ice_troll;
    public readonly Entity ice_vortex;

    public readonly Entity earth_seeker;
    public readonly Entity earth_binder;
    public readonly Entity earth_maker;
    public readonly Entity flame_seeker;
    public readonly Entity flame_binder;
    public readonly Entity flame_maker;
    public readonly Entity frost_seeker;
    public readonly Entity frost_binder;
    public readonly Entity frost_maker;
    public readonly Entity shock_seeker;
    public readonly Entity shock_binder;
    public readonly Entity shock_maker;
    public readonly Entity water_seeker;
    public readonly Entity water_binder;
    public readonly Entity water_maker;

    public readonly Entity iguana;
    public readonly Entity imp;
    public readonly Entity incubus;
    public readonly Entity intern;
    public readonly Entity iron_golem;
    public readonly Entity iron_piercer;
    public readonly Entity jabberwock;
    public readonly Entity jackal;
    public readonly Entity jaguar;
    public readonly Entity jellyfish;
    public readonly Entity jiggling_blob;
    public readonly Entity juggernaut;
    public readonly Entity kamadan;
    public readonly Entity killer_bee;
    public readonly Entity killer_beetle;
    public readonly Entity killer_food_ration;
    public readonly Entity killer_iron_ration;
    public readonly Entity killer_tripe_ration;
    public readonly Entity king_cobra;
    public readonly Entity kirin;
    public readonly Entity kitten;
    public readonly Entity kobold;
    public readonly Entity kobold_scout;
    public readonly Entity kobold_king;
    public readonly Entity kobold_lord;
    public readonly Entity kobold_mummy;
    public readonly Entity kobold_shaman;
    public readonly Entity kobold_warrior;
    public readonly Entity kobold_zombie;
    public readonly Entity komodo_dragon;
    public readonly Entity kraken;
    public readonly Entity lamb;
    public readonly Entity large_cat;
    public readonly Entity large_dingo;
    public readonly Entity large_dog;
    public readonly Entity large_kobold;
    public readonly Entity large_mimic;
    public readonly Entity large_pile_of_killer_coins;
    public readonly Entity larva;
    public readonly Entity lava_blob;
    public readonly Entity leather_golem;
    public readonly Entity lemure;
    public readonly Entity leocrotta;
    public readonly Entity leprechaun;
    public readonly Entity leprechaun_wizard;
    public readonly Entity lich;
    public readonly Entity lichen;
    public readonly Entity lightning_bug;
    public readonly Entity little_dog;
    public readonly Entity lizard;
    public readonly Entity lizardman;
    public readonly Entity lizardman_berserker;
    public readonly Entity lizardman_chieftain;
    public readonly Entity lizardman_mage;
    public readonly Entity lizardman_shaman;
    public readonly Entity lizardman_warrior;
    public readonly Entity long_worm;
    public readonly Entity long_worm_tail;
    public readonly Entity living_wall;
    public readonly Entity lurker_above;
    public readonly Entity lynx;
    public readonly Entity maggot;
    public readonly Entity manes;
    public readonly Entity mangler;
    public readonly Entity marid;
    public readonly Entity marilith;
    public readonly Entity master_lich;
    public readonly Entity dracolich;
    public readonly Entity master_mind_flayer;
    public readonly Entity mastodon;
    public readonly Entity medusa;
    public readonly Entity mellified_man;
    public readonly Entity merchant;
    public readonly Entity migo_drone;
    public readonly Entity migo_queen;
    public readonly Entity migo_warrior;
    public readonly Entity mind_flayer;
    public readonly Entity minotaur;
    public readonly Entity mist_wolf;
    public readonly Entity mobat;
    public readonly Entity mouldy_pudding;
    public readonly Entity monadic_deva;
    public readonly Entity mongbat;
    public readonly Entity monkey;
    public readonly Entity mountain_centaur;
    public readonly Entity mountain_nymph;
    public readonly Entity movanic_deva;
    public readonly Entity mugger;
    public readonly Entity mumak;
    public readonly Entity nabassu;
    public readonly Entity nalfeshnee;
    public readonly Entity nazgul;
    public readonly Entity neanderthal;
    public readonly Entity occultist;
    public readonly Entity newt;
    public readonly Entity nickelpede;
    public readonly Entity nightgaunt;
    public readonly Entity nightmare;
    public readonly Entity shinobi;
    public readonly Entity nupperibo;
    public readonly Entity nurse;
    public readonly Entity ochre_jelly;
    public readonly Entity ogre;
    public readonly Entity ogre_king;
    public readonly Entity ogre_lord;
    public readonly Entity ogre_mage;
    public readonly Entity ologhai;
    public readonly Entity orange_jelly;
    public readonly Entity orc;
    public readonly Entity orc_berserker;
    public readonly Entity orc_captain;
    public readonly Entity orc_grunt;
    public readonly Entity orc_king;
    public readonly Entity orc_mummy;
    public readonly Entity orc_shaman;
    public readonly Entity orc_warrior;
    public readonly Entity orc_zombie;
    public readonly Entity owlbear;
    public readonly Entity pack_rat;
    public readonly Entity page;
    public readonly Entity panther;
    public readonly Entity paper_golem;
    public readonly Entity parrot;
    public readonly Entity pegasus;
    public readonly Entity phase_spider;
    public readonly Entity phase_worm;
    public readonly Entity plasmoid;
    public readonly Entity pig;
    public readonly Entity pile_of_killer_coins;
    public readonly Entity piranha;
    public readonly Entity pit_bull;
    public readonly Entity pit_fiend;
    public readonly Entity pit_viper;
    public readonly Entity pixie;
    public readonly Entity plains_centaur;
    public readonly Entity pearl_golem;
    public readonly Entity plastic_golem;
    public readonly Entity pony;
    public readonly Entity proudfoot;
    public readonly Entity bile_worm;
    public readonly Entity bile_worm_tail;
    public readonly Entity purple_worm;
    public readonly Entity purple_worm_tail;
    public readonly Entity pyrolisk;
    public readonly Entity python;
    public readonly Entity quantum_mechanic;
    public readonly Entity quasit;
    public readonly Entity queen_bee;
    public readonly Entity quickling;
    public readonly Entity quivering_blob;
    public readonly Entity rabbit;
    public readonly Entity rabid_rabbit;
    public readonly Entity rabid_rat;
    public readonly Entity rabid_wolf;
    public readonly Entity rancid_jelly;
    public readonly Entity rat_king;
    public readonly Entity fledgling_raven;
    public readonly Entity juvenile_raven;
    public readonly Entity adult_raven;
    public readonly Entity recluse_spider;
    public readonly Entity red_mould;
    public readonly Entity red_naga;
    public readonly Entity red_naga_hatchling;
    public readonly Entity rhaumbusun;
    public readonly Entity rhumbat;
    public readonly Entity rock_kobold;
    public readonly Entity rock_mole;
    public readonly Entity rock_piercer;
    public readonly Entity rock_troll;
    public readonly Entity rope_golem;
    public readonly Entity roshi;
    public readonly Entity rot_worm;
    public readonly Entity rothe;
    public readonly Entity emerald_golem;
    public readonly Entity ruby_golem;
    public readonly Entity topaz_golem;
    public readonly Entity rust_monster;
    public readonly Entity rutterkin;
    public readonly Entity sabretoothed_cat;
    public readonly Entity salamander;
    public readonly Entity sandestin;
    public readonly Entity sapphire_golem;
    public readonly Entity sasquatch;
    public readonly Entity robot;
    public readonly Entity satyr;
    public readonly Entity scorpion;
    public readonly Entity scramper;
    public readonly Entity sewer_rat;
    public readonly Entity shade;
    public readonly Entity shadow;
    public readonly Entity shadow_ogre;
    public readonly Entity shadow_wolf;
    public readonly Entity seal;
    public readonly Entity shark;
    public readonly Entity sheep;
    public readonly Entity shifter;
    public readonly Entity shock_sphere;
    public readonly Entity shoggoth;
    public readonly Entity shrieker;
    public readonly Entity skeleton;
    public readonly Entity small_mimic;
    public readonly Entity snake;
    public readonly Entity snow_ant;
    public readonly Entity snow_orc;
    public readonly Entity soldier_ant;
    public readonly Entity spark_bug;
    public readonly Entity spider_queen;
    public readonly Entity spined_devil;
    public readonly Entity spitting_beetle;
    public readonly Entity spotted_jelly;
    public readonly Entity squealer;
    public readonly Entity stalker;
    public readonly Entity star_vampire;
    public readonly Entity static_blob;
    public readonly Entity steam_vortex;
    public readonly Entity mithril_golem;
    public readonly Entity snow_golem;
    public readonly Entity stone_giant;
    public readonly Entity adamantine_golem;
    public readonly Entity stone_golem;
    public readonly Entity storm_giant;
    public readonly Entity straw_golem;
    public readonly Entity student;
    public readonly Entity succubus;
    public readonly Entity swamp_kobold;
    public readonly Entity tengu;
    public readonly Entity thug;
    public readonly Entity tiger;
    public readonly Entity titan;
    public readonly Entity titanothere;
    public readonly Entity transmuter;
    public readonly Entity trapper;
    public readonly Entity tortle;
    public readonly Entity troll;
    public readonly Entity cave_troll;
    public readonly Entity troll_mummy;
    public readonly Entity tsetse_fly;
    public readonly Entity tunnel_worm;
    public readonly Entity giant_slug;
    public readonly Entity giant_frog;
    public readonly Entity twoheaded_troll;
    public readonly Entity umber_hulk;
    public readonly Entity vampire;
    public readonly Entity vampire_bat;
    public readonly Entity vampire_king;
    public readonly Entity vampire_lord;
    public readonly Entity vampire_mage;
    public readonly Entity undead_slayer;
    public readonly Entity violet_fungus;
    public readonly Entity vorpal_jabberwock;
    public readonly Entity vrock;
    public readonly Entity war_orc;
    public readonly Entity warg;
    public readonly Entity warhorse;
    public readonly Entity warlock;
    public readonly Entity warrior;
    public readonly Entity watch_captain;
    public readonly Entity watchman;
    public readonly Entity water_demon;
    public readonly Entity water_elemental;
    public readonly Entity water_hulk;
    public readonly Entity water_moccasin;
    public readonly Entity water_nymph;
    public readonly Entity water_troll;
    public readonly Entity wax_golem;
    public readonly Entity werejackal;
    public readonly Entity werepanther;
    public readonly Entity wererat;
    public readonly Entity weresnake;
    public readonly Entity werespider;
    public readonly Entity weretiger;
    public readonly Entity werewolf;
    public readonly Entity jackalwere;
    public readonly Entity pantherwere;
    public readonly Entity ratwere;
    public readonly Entity snakewere;
    public readonly Entity spiderwere;
    public readonly Entity tigerwere;
    public readonly Entity wolfwere;
    public readonly Entity white_unicorn;
    public readonly Entity wight;
    public readonly Entity winged_gargoyle;
    public readonly Entity winter_wolf;
    public readonly Entity winter_wolf_cub;
    public readonly Entity wolf;
    public readonly Entity wolverine;
    public readonly Entity wood_golem;
    public readonly Entity wood_nymph;
    public readonly Entity woodchuck;
    public readonly Entity woodland_elf;
    public readonly Entity wraith;
    public readonly Entity wumpus;
    public readonly Entity wyvern;
    public readonly Entity xan;
    public readonly Entity treant;
    public readonly Entity xorn;
    public readonly Entity yellow_jacket;
    public readonly Entity yellow_jelly;
    public readonly Entity yellow_light;
    public readonly Entity red_light;
    public readonly Entity blue_light;
    public readonly Entity yellow_mould;
    public readonly Entity yeoman;
    public readonly Entity yeoman_warder;
    public readonly Entity yeti;
    public readonly Entity zruty;
    public readonly Entity soldier;
    public readonly Entity sergeant;
    public readonly Entity lieutenant;
    public readonly Entity captain;
    public readonly Entity fairy;
    public readonly Entity keystone_kop;
    public readonly Entity keystone_sergeant;
    public readonly Entity keystone_lieutenant;
    public readonly Entity keystone_captain;

    // Uniques.
    public readonly Entity Aleax;
    public readonly Entity Aphrodite;
    public readonly Entity Archmage_Dirachi;
    public readonly Entity Archmage_Flaynn;
    public readonly Entity Archpriest_Avvakrum;
    public readonly Entity Ashikaga_Takauji;
    public readonly Entity Asmodeus;
    public readonly Entity Assassin_Mortimer;
    public readonly Entity Baalzebub;
    public readonly Entity Cerberus;
    public readonly Entity Charon;
    public readonly Entity Colonel_Blood;
    public readonly Entity Count_Dracula;
    public readonly Entity Croesus;
    public readonly Entity Cthulhu;
    public readonly Entity Kaloi_Thrym;
    public readonly Entity Death;
    public readonly Entity Deliarne;
    public readonly Entity Demogorgon;
    public readonly Entity Dispater;
    public readonly Entity Doctor_Frankenstein;
    public readonly Entity Earendil;
    public readonly Entity Elwing;
    public readonly Entity Famine;
    public readonly Entity Father_Dagon;
    public readonly Entity Frankensteins_Monster;
    public readonly Entity Geryon;
    public readonly Entity Girtab;
    public readonly Entity Guildmaster_Vaughn;
    public readonly Entity Guru_Quilion;
    public readonly Entity Hippocrates;
    public readonly Entity Huhetotl;
    public readonly Entity Ixoth;
    public readonly Entity Juiblex;
    public readonly Entity Lareth;
    public readonly Entity Lolth;
    public readonly Entity Lord_Carnarvon;
    public readonly Entity Lord_Sato;
    public readonly Entity Lord_Surtur;
    public readonly Entity Lycaon;
    public readonly Entity Master_Kaen;
    public readonly Entity Maugneshaagar;
    public readonly Entity Metamorphius;
    public readonly Entity Mother_Hydra;
    public readonly Entity Nalzok;
    public readonly Entity Neferet;
    public readonly Entity Norn;
    public readonly Entity Oracle;
    public readonly Entity Orcus;
    public readonly Entity Orion;
    public readonly Entity Pelias;
    public readonly Entity Pestilence;
    public readonly Entity Planetar;
    public readonly Entity Scorpius;
    public readonly Entity Shaman_Karnov;
    public readonly Entity Sir_Lorimar;
    public readonly Entity Solar;
    public readonly Entity Thorin;
    public readonly Entity Thoth_Amon;
    public readonly Entity Twoflower;
    public readonly Entity Van_Helsing;
    public readonly Entity Vecna;
    public readonly Entity Yeenoghu;
  }
}